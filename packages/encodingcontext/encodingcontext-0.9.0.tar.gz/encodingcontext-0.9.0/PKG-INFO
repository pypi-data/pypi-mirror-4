Metadata-Version: 1.0
Name: encodingcontext
Version: 0.9.0
Summary: A bad idea about the default encoding
Home-page: https://github.com/dahlia/encodingcontext
Author: Hong Minhee
Author-email: minhee@dahlia.kr
License: MIT License
Description: ``encodingcontext`` --- A bad idea about the default encoding
        =============================================================
        
            | Although practicality beats purity.
            | Errors should never pass silently.
            | Unless explicitly silenced.
        
            --- Zen of Python
        
        This small module implements a bad idea: making default encoding
        explicitly scoped::
        
            >>> with encoding_context('euc-kr'):
            ...     str(u'\ud55c\uae00')
            ...
            '\xc7\xd1\xb1\xdb'
         
        
        Of course it has several shortcomigs, and the most critical one is:
        using it within ``thread``, ``threading``, ``greenlet``, ``tasklet``, etc
        probably brokes its scoping.  If Python had dynamic scoping and default
        encoding was defined as dynamically scoped variable, we might have more
        convenient way to code between Unicode--byte strings.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python :: Implementation :: Stackless
Classifier: Topic :: Text Processing
