[site]
# github sources base, switch to the second option to bypass http auth
sources-base = git https://github.com/
#sources-base = git git@github.com:

# arch should be either linux32 or linux64. mac support coming soon
arch = linux32

# ipv4 address for ${site:local-ip}
local-ip = 127.0.0.1

# the default Administrator's username and password
user = admin:admin

# the address where ZEO will be listening on
zeo-address = ${site:local-ip}:8100

# the address you worker instance will be listening on
worker-address = 127.0.0.1:8080

# uwsgi settings
wsgi-port = 8000
localhost = 127.0.0.1
anyhost = 0.0.0.0
wsgi-workers = 2

# hostname and port for transcode daemon
transcode-host = ${site:local-ip}
transcode-port = 8888

# hostname, port and credentials for supervisor
supervisor-host = ${site:local-ip}
supervisor-port = 8890
supervisor-user = supervu
supervisor-pass = supervp

# the folder where transcoded videos are being stored
videofolder = transcoded

environment-vars =
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    zope_i18n_compile_mo_files true
    PTS_LANGUAGES en, id
#    longrequestlogger_file ${buildout:directory}/var/log/longrequest.log
#    longrequestlogger_timeout 5
#    longrequestlogger_interval 5


### The following configuration options are only used by production builds ###

# the id of your plumi site
portal-id = Plone

# the address where Zope's Medusa FTP is listening on
instance-ftp = ${site:local-ip}:8021

# the public ftp address of plumiftp. By default any ip, port 21, which requires root privileges to start
plumiftp-address = *:21

# change that if not using port 21
ftp-user = root

# effective user for the transcodedaemon process
transcode-user = daemon

# shared secret for symmetric encryption of transcode requests. If you update it here make sure you also update it in the transcode settings panel.
secret = 1771d99931264d538e75eeb19da7d6a0

# varnish user and address to listen to
cache-user = root
cache-address = ${site:local-ip}:8099

# syslog address
syslog-host = ${site:local-ip}

# web server user
www-user = www-data
www-address = 80
www-server-name = new.plumi.org
www-videoserver-name = newvideos.plumi.org

# effective user for zope and zeo processes
zeo-user = zope
zope-user = zope

# cache options
zeo-client-cache-size = 1024MB
zodb-cache-size-bytes = 102400000

# the mimetypes supported by default by the transcode profiles below
default_supported_mimetypes = ['application/ogg',\
                                'video/ogg',\
                                'video/x-ogg',\
                                'video/x-ogm+ogg',\
                                'video/flv',\
                                'video/x-flv',\
                                'video/mpeg',\
                                'video/3gpp',\
                                'video/x-ms-wmv',\
                                'video/quicktime',\
                                'video/x-la-asf',\
                                'video/x-ms-asf',\
                                'video/x-msvideo',\
                                'video/mp4',\
                                'video/webm',\
                                'video/x-matroska',\
                                'application/octet-stream',\
                                ]

# supported transcoding profiles
transcode-profiles = [\
            {'id': 'iso',\
             'cmd': 'scripts/iso %s %s',\
             'supported_mime_types': 'text/xml',\
             'output_mime_type': 'application/octet-stream',\
             'output_extension': 'iso' },\
            {'id': 'jpeg',\
             'cmd': 'scripts/jpeg %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'image/jpeg',\
             'output_extension': 'jpg' },\
            {'id': 'mpeg2',\
             'cmd': 'scripts/mpeg2 %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'video/mpeg', 'output_extension': 'mpg' },\
            {'id': 'mp4-high',\
             'cmd': 'scripts/mp4-high %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'video/mp4', 'output_extension': 'mp4' },\
            {'id': 'mp4-low',\
             'cmd': 'scripts/mp4-low %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'video/mp4', 'output_extension': 'mp4' },\
            {'id': 'webm-high',\
             'cmd': 'scripts/webm-high %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'video/webm', 'output_extension': 'webm' },\
            {'id': 'webm-low',\
             'cmd': 'scripts/webm-low %s %s',\
             'supported_mime_types': ${site:default_supported_mimetypes},\
             'output_mime_type': 'video/webm', 'output_extension': 'webm' },\
            ]

# additional eggs that should be available to your portal - leave empty if unsure
eggs =
     plumi.skin
#    em.taxonomies
#    unweb.shareit
    collective.captcha
    collective.recaptcha
    quintagroup.plonecaptchas
#    Products.LongRequestLogger[standalone]
    plone.formwidget.captcha
#    plonetheme.plumigreen
#    plumi.euclid
    collective.contentlicensing

# additional zcml includes - leave empty if unsure
zcml =
     plumi.skin
#    em.taxonomies
#    unweb.shareit
#    collective.captcha
#    plone.formwidget.captcha
#    plonetheme.plumigreen
#    plumi.euclid
    collective.captcha
    quintagroup.plonecaptchas
    plone.formwidget.captcha
    collective.contentlicensing

develop = .
#          src/plumi.content
#          src/plumi.skin
#          src/plumi.locales
#          src/plone.app.locales
#          src/collective.transcode.daemon
#          src/collective.transcode.recipe
#          src/collective.transcode.star
#          src/collective.mediaelementjs
#          src/collective.piwik.mediaelement
#          src/collective.piwik.core
#          src/unweb.recipe.uwsgi
#          src/collective.contentlicensing

[sources]
#plumi.content = ${site:sources-base}plumi/plumi.content.git branch=4.5rc1
#plumi.skin = ${site:sources-base}plumi/plumi.skin.git branch=4.5rc1
#plumi.locales = ${site:sources-base}plumi/plumi.locales.git 
#collective.transcode.star = ${site:sources-base}plumi/collective.transcode.star.git branch=master
#collective.transcode.recipe = ${site:sources-base}plumi/collective.transcode.recipe.git branch=master
#collective.transcode.daemon = ${site:sources-base}plumi/collective.transcode.daemon.git branch=master
#collective.piwik.mediaelement = ${site:sources-base}plumi/collective.piwik.mediaelement.git branch=master
#collective.piwik.core = ${site:sources-base}plumi/collective.piwik.core.git branch=master
#collective.seeder = ${site:sources-base}plumi/collective.seeder.git branch=master
#collective.contentlicensing = ${site:sources-base}collective/collective.contentlicensing.git branch=master
#em.taxonomies = svn http://svn.engagemedia.org/em.taxonomies/trunk/
#collective.recipe.scriptgen = svn http://svn.plone.org/svn/collective/buildout/collective.recipe.scriptgen/tags/0.2
#unweb.recipe.uwsgi = ${site:sources-base}unweb/unweb.recipe.uwsgi.git

[versions]
pycrypto = 2.4.1
