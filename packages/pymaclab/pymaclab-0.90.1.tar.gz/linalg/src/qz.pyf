!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module zgges__user__routines 
    interface zgges_user_interface 
        function delctg(e_alpha__i__e,e_beta__i__e) ! in :qz:zgges.f:zgges:unknown_interface
            real :: e_alpha__i__e
            real :: e_beta__i__e
            logical :: delctg
        end function delctg
    end interface zgges_user_interface
end python module zgges__user__routines
python module dgges__user__routines 
    interface dgges_user_interface 
        function selctg(e_alphar__i__e,e_alphai__i__e,e_beta__i__e) ! in :qz:dgges.f:dgges:unknown_interface
            real :: e_alphar__i__e
            real :: e_alphai__i__e
            real :: e_beta__i__e
            logical :: selctg
        end function selctg
    end interface dgges_user_interface
end python module dgges__user__routines
python module qz ! in 
    interface  ! in :qz
        subroutine zgges(jobvsl,jobvsr,sort,delctg,n,a,lda,b,ldb,sdim,alpha,beta,vsl,ldvsl,vsr,ldvsr,work,lwork,rwork,bwork,info) ! in :qz:zgges.f
            use zgges__user__routines
            character optional,intent(in):: jobvsl='V'
            character optional,intent(in):: jobvsr='V'
            character optional,intent(in):: sort='N'
            external delctg
            integer intent(hide),depend(a):: n=shape(a,1)
            complex*16 intent(in,out,copy),dimension(lda,*) :: a
            integer intent(hide),check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
            complex*16 intent(in,out,copy),dimension(ldb,n),depend(n,ldb) :: b
            integer optional,depend(n) :: ldb=n
            integer intent(out):: sdim
            complex*16 intent(out),dimension(n),depend(n) :: alpha
            complex*16 intent(out),dimension(n),depend(n) :: beta
            complex*16 intent(out),dimension(ldvsl,n),depend(ldvsl,n) :: vsl
            integer optional,intent(in),depend(jobvsl,n) :: ldvsl=n
            complex*16 intent(out),dimension(ldvsr,n),depend(ldvsr,n) :: vsr
            integer optional,intent(in),depend(jobvsr,n) :: ldvsr=n
            complex*16 intent(out),dimension(MAX(lwork,1)),depend(lwork) :: work
            integer optional,intent(in),depend(n),check(lwork>=2*n||lwork==-1):: lwork=4*n
! lwork must generally be larger than (2*n) for good performance
            double precision,intent(in),depend(n),dimension(8*n) :: rwork
            logical intent(hide),dimension(n),depend(n) :: bwork
            integer intent(out):: info
        end subroutine zgges
        subroutine dgges(jobvsl,jobvsr,sort,selctg,n,a,lda,b,ldb,sdim,alphar,alphai,beta,vsl,ldvsl,vsr,ldvsr,work,lwork,bwork,info) ! in :qz:dgges.f
            use dgges__user__routines
            character optional,intent(in):: jobvsl='V'
            character optional,intent(in):: jobvsr='V'
            character optional,intent(in):: sort='N'
            external selctg
            integer intent(hide),depend(a):: n=shape(a,1)
            double precision intent(in,out,copy),dimension(lda,*) :: a
            integer intent(hide),check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
            double precision intent(in,out,copy),dimension(ldb,n),depend(n,ldb) :: b
            integer optional,depend(n) :: ldb=n
            integer intent(out):: sdim
            double precision intent(out),dimension(n),depend(n) :: alphar
            double precision intent(out),dimension(n),depend(n) :: alphai
            double precision intent(out),dimension(n),depend(n) :: beta
            double precision intent(out),dimension(ldvsl,n),depend(ldvsl,n) :: vsl
            integer optional,intent(in),depend(jobvsl,n) :: ldvsl=n
            double precision intent(out),dimension(ldvsr,n),depend(ldvsr,n) :: vsr
            integer optional,intent(in),depend(jobvsr,n) :: ldvsr=n
            double precision intent(out),dimension(MAX(lwork,1)),depend(lwork) :: work
            integer optional,intent(in),depend(n),check(lwork>=8*n+16||lwork==-1):: lwork=8*n+16
            logical intent(hide),dimension(n),depend(n) :: bwork
            integer intent(out):: info
        end subroutine dgges
    end interface 
end python module qz

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
