Metadata-Version: 1.0
Name: snaptastic
Version: 0.0.2
Summary: Snaptastic is a python tool to enable easy snapshotting
and mounting of snapshots on AWS/EC2 EBS volumes.

Home-page: http://github.com/tschellenbach/Django-facebook
Author: Thierry Schellenbach
Author-email: thierryschellenbach@gmail.com
License: Copyright (c) Thierry Schellenbach

 (http://www.mellowmorning.com)
All rights reserved.

Redistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
- Neither the name of Thierry Schellenbach. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission of Thierry Schellenbach.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description: ############################################################################################################################################
        Snaptastic by Mike Ryan & Thierry Schellenbach (`mellowmorning.com <http://www.mellowmorning.com/>`_)
        ############################################################################################################################################
        
        About the Author
        ----------------
        
        Mike Ryan, Syadmin at Fashiolista, author of ...
        Thierry Schellenbach, Founder/ CTO at Fashiolista
        
        .. image:: https://secure.travis-ci.org/tschellenbach/Snaptastic.png?branch=master
        
        Command line usage
        
        start by validating if we can access boto and instance metadata
        python snap.py test
        
        roundtrip flow
        python snap.py mount-snapshots solr
        touch /mnt/test/helloworld.txt
        python snap.py make-snapshots solr
        python snap.py unmount-snapshots solr
        df to verify its gone
        python snap.py mount-snapshots solr
        
        
        
        
        Example Settings File
        
        REGION = 'eu-west-1'
        AWS_ACCESS_KEY_ID = 'ExampleKey'
        AWS_SECRET_ACCESS_KEY = 'ExampleSecret'
        
        #create snapshotters
        from snaptastic import Snapshotter, EBSVolume
        
        class SOLRSnapshotter(Snapshotter):
            def get_volumes(self):
                volume = EBSVolume('/dev/sdf1', '/mnt/index', size=200)
                volumes = [volume]
                return volumes
        
        For more examples see examples.py
        
        Snaptastic searches for its setting file at:
        * snaptastic_settings on sys.path
        * /etc/snaptastic_settings.py
        * /etc/snaptastic/snaptastic_settings.py
        
        
        Features
        
        * Gracefull failure handling
        * Freezes for the absoulte minimal required duration
        * Batches boto API calls for faster batch volume mounting/snapshotting
        * Tested codebase
        
        
        Todo
        
        * Prevent you from freezing the root filesystem
        * Auto terminate volumes after instance termination
        * Error testing against boto and real file system
        * Pypi
        
        
        Workflow
        
        * fab validate (checks pep8 and unittests)
        * fab publish (if tests are ok, publishes the new version, tag, pypi)
        * fab clean (attempt to auto cleanup pep8 mistakes)
        
        Running tests
        
        * python -m unittest snaptastic.tests
        
        Django Jobs
        -----------
        Do you also see the beauty in clean code? Are you experienced with high scalability web apps?
        Currently we're looking for additional talent over at our Amsterdam office.
        Feel free to drop me a line at my personal email for more information: thierryschellenbach[at]gmail.com
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
