import os

from distribute_setup import use_setuptools
use_setuptools()

from setuptools import setup, find_packages

here = os.path.abspath(os.path.dirname(__file__))
README = open(os.path.join(here, 'README.rst')).read()
CHANGES = open(os.path.join(here, 'CHANGES.rst')).read()

requires = [
    'pyramid>1.2',
    'pyramid_genshi',
    'pyramid_beaker',
    'SQLAlchemy',
    'transaction',
    'pyramid_tm',
    'pyramid_debugtoolbar',
    'zope.sqlalchemy',
    'waitress',
    'WTForms',
    'scss_tools',
    'PyYAML',
    'nose',
    'wtforms',
	'babel',
]

setup(name='{{project}}',
    version='0.0',
    description='{{project}}',
    long_description=README + '\n\n' +  CHANGES,
    classifiers=[
        "Programming Language :: Python",
        "Framework :: Pylons",
        "Topic :: Internet :: WWW/HTTP",
        "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    ],
    author='',
    author_email='',
    url='',
    keywords='web wsgi bfg pylons pyramid',
    packages=find_packages(),
    include_package_data=True,
    zip_safe=False,
    test_suite='{{package}}',
    tests_require=[
        'nose-cov',
        'webtest'
    ],
    install_requires = requires,
    message_extractors={'{{package}}': [
        ('**.py', 'python', None),
        ('**.genshi', 'genshi', None),
        ('static/**', 'ignore', None)]
    }, 
    entry_points = """\
    [paste.app_factory]
    main = {{package}}:main
    [console_scripts]
    populate_{{project}} = {{package}}.scripts.populate:main
    """,
)

