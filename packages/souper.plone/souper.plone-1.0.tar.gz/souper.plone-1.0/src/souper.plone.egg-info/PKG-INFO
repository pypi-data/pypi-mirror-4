Metadata-Version: 1.1
Name: souper.plone
Version: 1.0
Summary: Plone Souper Integration: Container for many lightweight queryable Records
Home-page: http://pypi.python.org/pypi/souper.plone
Author: BlueDynamics Alliance
Author-email: dev@bluedynamics.com
License: BSD
Description: Overview
        ========
        
        ``souper.plone`` integrates `souper <http://pypi.python.org/pypi/souper>`_ 
        with `Plone <http://plone.org>`_ 
        
        ``souper.plone`` addresses developers with the need to solve the problem to 
        store tiny entities of mass-data, where heavy weight Archetypes or 
        Dexterity are too much effort and are to slow. I.e if you need a queryable 
        container for non-CMSish content, like votes, data from a poll, orders in a 
        webshop, measuring data, or alike.  
        
        A Soup-container can be moved to an own ZODB mount-point and may be shared
        across multiple independent Plone instances!
        
        A control-panel provides actions to rebuild, reindex and move Soups around.
        
        
        Usage
        =====
        
        ``souper.plone`` offers some convinience for Plone Add-On developers. It 
        provides a storage locator working like so:
        
        A ``souper.soup`` is looked up by ``id`` and needs a context. This context is 
        some Aquisition aware obejct in the plone site. It is used to acquire it's 
        parent until ``ISoupRoot`` is found (which is by default the site root). At 
        the soup root the ``id`` maps to a path where the soup is actually stored as
        an annotation. This all happens fully transparent. So to get the soup one 
        need to do just do::
        
            >>> from souper.soup import get_soup
            >>> soup = get_soup(context, 'my_soup_id')
            >>> soup
            <souper.soup.Soup at 0x...>
        
        If no soup was found for given id, a new one is created and annotated by default
        to the ``ISoupRoot``.
        
        It is important provide a CatalogFactory. Consult the ``souper.plone`` 
        documentation to learn how. Over there its also documented how to add records, 
        query and maintain them.
        
        For convinience ``souper.plone`` installs a control-panel where one can reindex
        and rebuild distinct soups. 
        
        
        Source Code
        ===========
        
        The sources are in a GIT DVCS with its main branches at
        `github <http://github.com/bluedynamics/souper.plone>`_.
        
        We'd be happy to see many forks and pull-requests to make souper even better.
        
        Maintainers are Robert Niederreiter, Jens Klein and the BlueDynamics Alliance
        developer team. We appreciate any contribution and if a release is needed
        to be done on pypi, please just contact one of us
        `dev@bluedynamics dot com <mailto:dev@bluedynamics.com>`_
        
        
        Contributors
        ============
        
        - Robert Niederreiter <rnix [at] squarewave [dot] at>
        
        - Jens W. Klein <jk [at] kleinundpartner [dot] at>
        
        - Sven Plage
        
        History
        =======
        
        1.0
        ---
        
        - added missing MANIFEST.in [jensens]
        
        1.0-beta
        --------
        
        - make it work [rnix, jensens, et al]
        
        License
        =======
        
        Copyright (c) 2008-2012, BlueDynamics Alliance, Austria, Germany, Switzerland
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this 
          list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright notice, this 
          list of conditions and the following disclaimer in the documentation and/or 
          other materials provided with the distribution.
        * Neither the name of the BlueDynamics Alliance nor the names of its 
          contributors may be used to endorse or promote products derived from this 
          software without specific prior written permission.
              
        THIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance ``AS IS`` AND ANY
        EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY
        DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
        (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
        ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
        SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Keywords: container data record catalog
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Framework :: Zope2
Classifier: Framework :: Plone :: 4.1
Classifier: Framework :: Plone :: 4.2
Classifier: Framework :: Plone :: 4.3
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
