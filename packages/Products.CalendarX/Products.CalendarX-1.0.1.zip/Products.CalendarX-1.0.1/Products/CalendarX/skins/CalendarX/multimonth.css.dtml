<dtml-let last_modified="_.DateTime()-14"
          expires="_.DateTime()+7" >
<dtml-call "REQUEST.RESPONSE.setHeader( 'Content-Type', 'text/css' )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Last-Modified', last_modified.toZone('GMT').rfc822() )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Cache-Control', 'max-age=36000, must-revalidate' )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Expires', expires.toZone('GMT').rfc822() )" >
</dtml-let>

<dtml-comment> 
Required: keep the existing 'nameOfActiveSkin' below dtml-with tags around the CSS tags.
Optional: surround CSS tags with these dtml-with tags IF YOU NEED TO.  Only 
  needed for pulling in portal-wide properties from those property sheets.
  See examples in ploneCustom.css using &dtml-property; tags.
   <dtml-with base_properties>   all the styles here for Plone 2  </dtml-with>
   <dtml-with stylesheet_properties>   all the styles here for Plone 1  </dtml-with>
<dtml-with expr="_[nameOfActiveSkin]">
</dtml-with>

</dtml-comment>


TABLE.multimonth {
    WIDTH: 100%;
}
TABLE.cal {
    WIDTH: 100%;
    FONT-SIZE: <dtml-var "getCXAttribute('calEventFontSize')">;
    FONT-FAMILY: <dtml-var "getCXAttribute('calEventFontFamily')">;
    BORDER: <dtml-var "getCXAttribute('calBorderColor')"> <dtml-var "getCXAttribute('calBorderWidth')"> solid;
    MARGIN-BOTTOM: 5px;
}
TABLE.cal TR.odd {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableRowOddBackgroundColor')">;
}
TABLE.cal TR.even {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableRowEvenBackgroundColor')">;
}
TABLE.cal TH {
    COLOR: <dtml-var "getCXAttribute('calTableHeaderFontColor')">;
    TEXT-ALIGN: center;
    FONT-WEIGHT: bold;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableHeaderBackgroundColor')">;
    padding: 5px;
    BORDER: <dtml-var "getCXAttribute('calTableHeaderBorderColor')"> <dtml-var "getCXAttribute('calTableHeaderBorderWidth')"> solid;
    WIDTH: 14%;
}
TABLE.cal TH.noshow {
    HEIGHT: 0px;
    padding: 0px;
    BORDER: <dtml-var "getCXAttribute('calTableDataOutOfMonthBackgroundColor')"> 0px none;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableDataOutOfMonthBackgroundColor')">;
}
TABLE.cal TD {
    COLOR: <dtml-var "getCXAttribute('calTableDataFontColor')">;
    FONT-WEIGHT: normal;
    HEIGHT: <dtml-var "getCXAttribute('calTableDataHeightMonthView')">;
    VERTICAL-ALIGN: top;
    padding: 5px;
    BORDER: <dtml-var "getCXAttribute('calTableDataBorderColor')"> <dtml-var "getCXAttribute('calTableDataBorderWidth')"> solid;
}
TABLE.cal TD.noevent {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableDataNoEventBackgroundColor')">;
}
TABLE.cal TD.event {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableDataEventBackgroundColor')">;
}
TABLE.cal TD.outOfMonth {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('calTableDataOutOfMonthBackgroundColor')">;
    BORDER: <dtml-var "getCXAttribute('calTableDataOutOfMonthBorderColor')"> <dtml-var "getCXAttribute('calTableDataOutOfMonthBorderWidth')"> solid;
}
TABLE.cal TD.outOfMonth SPAN.day {
    FONT-WEIGHT: normal;
}
TABLE.cal TD SPAN.day {
    FONT-WEIGHT: bold;
    COLOR: <dtml-var "getCXAttribute('calTableDataSpanDayFontColor')">;
}




