TODO zum Patchen von FSPythonScript nach Neubauen von HRS und AB Sandboxen (und ggf. weiteren)

Stand 15.12.2009 /FRP

damit das Debuggen von .xpy Skripten (FSPythonScript, verwendet via TrustedFSPythonScript aus eggs/Products.TrustedExecutables-1.0.1-py2.4.egg/Products/TrustedExecutables/TrustedFSPythonScript.py)
unter Zope 2.11 funktioniert, muss derzeit (Okt 2009) CMFCore/FSPythonScript.py gepatcht werden

Einzelheiten siehe folgende e-Mail
eine dauerhaftere Lösung, welche buildout's überlebt, sollte in Erwägung gezogen werden.


zum Patch von FSPythonScript.py siehe auch e-Mail mit Betreff "WingDBG und Zope 2.11 - FSPythonScript muss gepatched werden, damit Breakpoints etc tun"
vom 7. Oktober 2009 an Jung, Andreas; _EP-HRS2-Entwicklung

Damit WingIDE 3.2.1 (und wohl auch 3.1.8) auch unter Zope 2.11 Breakpoints in .xpy Skripten beachtet, 
muss FSPythonScript.py aus dem CMFCore gepatcht werden

In meiner Sandbox konkret, in eggs/Products/CMFCore-2.1.2-py2.4.egg/Products/FSPythonScript.py, ab Zeile 255, 
die Zeilen zwischen '>>>>' und '<<<<' einfügen:


    def _write(self, text, compile):
        '''
        Parses the source, storing the body, params, title, bindings,
        and source in self.  If compile is set, compiles the
        function.
        '''
        # 2009-10-07 problem with Trusted Python Scripts under Zope 2.11
        if self.id == "openBeitragsBox": # attempt to pinpoint - for openBeitragsBox.xpy
            pass #import pdb; pdb.set_trace()
            
        ps = PythonScript(self.id)
>>>>
        # DM 2005-04-25: nasty hack to make "FSPythonScript" debuggable via WingIDE debugger
        #  Note that "PythonScript" uses its "meta_type" as "filename"
        from utils import expandpath
        fp = expandpath(self._filepath)
<<<<
        ps.meta_type = fp


Die pypackage Mimik können wir uns wohl hier sparen, Aber das Setzen von meta_type des PythonSkript-Objektes ist unabdingbar, damit das Debugging wieder tut

@Andreas, wie kriegen wir so was dauerhaft in unsere Umgebung rein?
Ist das Setzen von meta_type ein Problem für Produktiv- und andere Umgebungen?

Peter
