# If no scenario needs the smallest size to be produced, then just forget it.
ProduceSizeFirstStage[1] Iter0FixIfConvergedAtLB 1

# If all scenarios need either of the two largest sizes, just lock them in.
ProduceSizeFirstStage[9] Iter0FixIfConvergedAtUB 1
ProduceSizeFirstStage[10] Iter0FixIfConvergedAtUB 1

# If scenarios have agreed for a while tht the smallest size need not be produced,
# then just lock them in.
ProduceSizeFirstStage[1] FixWhenItersConvergedAtLB 20

# in general, fix production binaries if they have been stable for a long time.
ProduceSizeFirstStage[*] FixWhenItersConvergedAtLB 20
ProduceSizeFirstStage[*] FixWhenItersConvergedAtUB 20

# if the production quantities have been stable a long time, fix them.
NumProducedFirstStage[*] FixWhenItersConvergedAtLB 30
NumProducedFirstStage[*] FixWhenItersConvergedAtNB 30

# if the number of units to cut has been frozen for a while, fix them.
NumUnitsCutFirstStage[*,*] FixWhenItersConvergedAtLB 40
NumUnitsCutFirstStage[*,*] FixWhenItersConvergedAtNB 40

# the num produced variables are problematic to converge, 
# so slam them to force early convergence.
NumProducedFirstStage[1]  SlammingPriority 1
NumProducedFirstStage[2]  SlammingPriority 2
NumProducedFirstStage[3]  SlammingPriority 3
NumProducedFirstStage[4]  SlammingPriority 4
NumProducedFirstStage[5]  SlammingPriority 5
NumProducedFirstStage[6]  SlammingPriority 6
NumProducedFirstStage[7]  SlammingPriority 7
NumProducedFirstStage[8]  SlammingPriority 8
NumProducedFirstStage[9]  SlammingPriority 9
NumProducedFirstStage[10] SlammingPriority 10

NumProducedFirstStage[*] CanSlamToMax True

# these variables often different by a few units
# at most, in which case slamming can significantly
# accelerate convergence.
NumUnitsCutFirstStage[*,*] SlammingPriority 10
NumUnitsCutFirstStage[*,*] CanSlamToMax True
