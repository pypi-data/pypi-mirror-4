Metadata-Version: 1.0
Name: Tungsten
Version: 0.1.1
Summary: Wolfram Alpha API built for Python.
Home-page: https://github.com/seenaburns/Tungsten
Author: Seena Burns
Author-email: hello@ethanbird.com
License: Copyright (c) 2012, Seena Burns
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the <organization> nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description: Tungsten
        --------
        
        Tungsten is a dead simple Wolfram Alpha API wrapper built for python, with all the power and none of the hassle. Check it out:
        
            import tungsten
        
            client = tungsten.Tungsten('appid')
            result = client.query('pi')
        
            for pod in pods:
                print pod.scanner
        
        Of course, that stuff is pretty simple. Tungsten can handle a lot more.
        
            # Query parameters
            params = {'format': ['plaintext', 'image', 'minput', 'moutput'],
                      'scanner': 'numeric',
                      'parsetimeout': 10}
            result = client.query('rref {{1,2},{3,4}}', params)
        
            # Various formats
            mathematica_input = result.pods[1].format['minput']
            image = result.pods[1].format['img']
        
            # Piping queries
            piped_result = client.query(mathematica_input)
        
        BSD licensed. Hosted on Github and available on PyPI.
        
        Installation:
        
            pip install tungsten
        
        
        
        History
        -------
        
        0.1.1 (2012-11-15)
        ------------------
        - Bug fixes
        - README.md update
        
        0.1.0 (2012-11-15)
        ------------------
        - Initial Release
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
