Metadata-Version: 1.1
Name: RimuDNS
Version: 0.0.1
Summary: Python interface to RimuHosting/Zonomi DNS 
Home-page: https://github.com/abdallah/RimuDNS
Author: Abdallah Deeb
Author-email: abdallah@deeb.me
License: GPLv3+
Download-URL: https://github.com/abdallah/RimuDNS/zipball/master
Description: RimuDNS
        =======
        
        RimuHosting Python DNS tools
        
        Documentation for the API can be found [here](https://rimuhosting.com/dns/dyndns.jsp) and [here](https://zonomi.com/app/dns/dyndns.jsp) for RimuHosting and Zonomi respectively.
        
        The RimuDNS class is a wrapper around the REST API calls. 
        
        Usage
        -----
            from rimudns import RimuDNS
        
            api_key = 'GETYOURAPIKEYFROMTHECONTROLPANEL'
            dns = DNS(api_key)
        
            dns.change_ip('192.168.59.133', '192.168.59.132')
            if dns.set_record('aa1.example.com', '94.162.59.133'): 
                print 'updated: %s records' % dns.record_count
        
            dns.list_zones()
        
            dns.create_zone('test.example.com') # should work the first time
            dns.create_zone('test.example.com') # should fail with 500 error
        
            dns.delete_zone('test.example.com') # should work the first time
            dns.delete_zone('test.example.com') # should fail with 500 error
        
            dns.list_records('example.com')
            dns.list_records('example.com', all_records=True)
        
            dns.create_zone('test.example.com') # should work the first time
            dns.set_record('test.example.com', '127.0.0.1')
            dns.set_record('mail.test.example.com', 'test.example.com', 'CNAME')
        
            updates_list = [
                        {
                            'action': 'SET', # or 'DELETE',
                            'host': 'foo.test.example.com,bar.test.deeb.com', # or ['foo.com', 'bar.com],
                            'value': '192.168.1.1',
                            'type': 'A' # or 'MX' or 'CNAME' or 'TXT', optional default A, 
                            #'prio': for MX records, number default 0,
                            #'ttl': number, optional default 3600,
                        },
                        { 
                            'action': 'DELETE',
                            'host': ['foo.test.example.com', 'bar.test.example.com'],
                            'value': '192.168.1.1',
                            'type': 'CNAME', # or 'TXT', optional default A, 
                            #'prio': for MX records, number default 0,
                            #'ttl': number, optional default 3600,
                        },      
                    ]
            dns.multiple_actions(updates_list)
            dns.delete_zone('test.example.com') # should work the first time
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: Utilities
