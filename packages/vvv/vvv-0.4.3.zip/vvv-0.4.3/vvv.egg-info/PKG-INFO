Metadata-Version: 1.1
Name: vvv
Version: 0.4.3
Summary: A convenience utility for software source code validation and linting
Home-page: https://github.com/miohtama/vvv
Author: Mikko Ohtamaa
Author-email: mikko@opensourcehacker.com
License: GPL3+
Description: ========================================
        VVV - validation and linting integrator
        ========================================
        
        VVV is a tool for easy validation and linting integration for your software project
        containing multiple kinds of files. It integrates with version control and
        prevents committing files containing bad formatting or syntax errors.
        
        An example use case would be a web project containing HTML, CSS, Javascript
        and backend programming language files: with VVV you can check with a single command
        all files conform the policy you set.
        
        .. contents :: :local:
        
        Usage
        ==============
        
        Example output from validating the demo repository where we find errors in a Python and a CSS file.
        You enter the folder and run ``vvv`` against the current folder (``.``) ::
        
            $ vvv .
            Running vvv against .
            /Users/moo/code/vvv/demo/demo.py validation output:
            ************* Module demo
            E0602:  1,9: Undefined variable 'get_magic'
        
            W3C CSS Validator results for file:/Users/moo/code/vvv/demo/foobar.css
        
            Line : 2 .foo
                   Property backgrnd doesn&#39;t exist :
                   yellow
        
        
        Installation
        ==============
        
        VVV is writte in in `Python <http://www.python.org>`_ programming language and is compatible with
        **Python interpreter 2.7 or later, including 3.x series**.
        
        Installating instructions for `Windows <http://miohtama.github.com/vvv/installation.html#windows>`_ -
        `Linux <http://miohtama.github.com/vvv/installation.html#linux-ubuntu-debian>`_ -
        `OSX <http://miohtama.github.com/vvv/installation.html#osx>`_.
        
        Benefits
        =========
        
        * Enforce coding conventions across multiple developers
        
        * Enable linting and validators support for your software project with a single command
        
        * Automatically guide committers to policy guidelines and let them fix errors themselves, instead of having
          post-commit personal coaching.
        
        * Provide sane default validation and linting options for all popular programming languages and file formats
        
        * Run VVV as continuous integration service with systems like Travis CI or Jenkins and shoot down bad code push-ins
        
        What VVV doesn't do
        
        * This is not automated testing tool. We just scan files against a **policy**, not for
          programming errors. Linting tools tend to pick up programming errors, too though,
          like mistyped names.
        
        Features
        =========
        
        * Set-up for your software repository with two files ``validation-options.yaml`` (configuration) and ``validation-files.yaml`` (whitelist/blacklist)
        
        * VVV automatically downloads and locally installs required software - you don't need to spend time hunting downloads or distribution packages
        
        * Check file against hard tabs and whitespace policies - no more different tab width ever
        
        * Prevent committing hard source code breakpoints, like Python's ``import pdb ; pdb.set_trace()``
        
        * Support (on its way) for Subversion, Git, Github, Travis CI, Jenkings and other popular version control and continuous integration
          systems
        
        Documentation and code
        =========================
        
        Please see the `VVV documentation <http://miohtama.github.com/vvv/>`_.
        
        `Source code is available on Github <https://github.com/miohtama/vvv>`_. Please use Github issue tracker
        to contact the authors.
        
        Explore different `linting and validators available <http://miohtama.github.com/vvv/validators.html>`_.
        
        Continuous integration status
        ================================
        
        Current trunk continuous integration status with Travis CI
        
        .. image :: https://secure.travis-ci.org/miohtama/vvv.png
        
        Author
        ===============
        
        Mikko Ohtamaa (`blog <http://opensourcehacker.com>`_, `Twitter <http://twitter.com/moo9000>`_)
        
        Please use Github issue tracker to contact the authors in the project related matters.
        
        
        
        
        Changelog
        ===================
        
        0.4.3 (2012-10-14)
        ------------------
        
        - Better instructions for running demo [miohtama]
        
        - Handle missing options file more gracefully [miohtama]
        
        - Added ZPT validator [matejc]
        
        - Fixes for RST validator [matejc]
        
        - Ghetto CI runs on Python 2.7 [miohtama]
        
        0.4.2 (2012-06-30)
        ------------------
        
        - Windows compatibility confirmed [jsalonen]
        
        - Fixed more issues with bad command line options [miohtama]
        
        0.4.1 (2012-06-27)
        ------------------
        
        - Handle empty / missing config files more gracefully [miohtama]
        
        0.4.0 (2012-06-26)
        ------------------
        
        - Python 2.7 compatibility added [miohtama]
        
        - Refactored text plug-ins to silently ignore bad encoding [miohtama]
        
        - Intelligent git pre-commit hook; check only changed files [miohtama]
        
        - vvv-add-js-globals helper command added to add jslint global statements
          to multiple Javascript files once [miohtama]
        
        - Evil spacebar buster added [miohtama]
        
        - ``jshint`` now properly reads config files (was non-std parsing by Node.js argument library) [miohtama]
        
        - Reorganized docs to have Tools section [miohtama]
        
        0.2.4 - 0.2.5
        ---------------
        
        - Depend on docutils as RST validator soft-depends on it, but cannot install docutils in host environment [miohtama]
        
        0.2.3 - 0.2.4
        ---------------
        
        - Correctly pick up RST validator script from path if not under virtualenv [miohtama]
        
        0.2.2 - 0.2.3
        ---------------
        
        - More git hook silent install corner case fixes
        
        0.2.1 - 0.2.2
        ---------------
        
        - Smarter way to detect vvv command location when installing a precommit hook [miohtama]
        
        - Integration documentation updates [miohtama]
        
        0.2 - 0.2.1
        ---------------
        
        - Fixed changelog formatting now that PyPi README page is intact again
        
        0.1.1 - 0.2
        ---------------
        
        - ``pylint-command`` option added [miohtama]
        
        - Ghetto-CI continuous integration script [miohtama]
        
        - Configuration file reader refactored to something more beautiful [miohtama]
        
        - Now you can VVV individual files [miohtama]
        
        - VVV can walk up in the directory tree to find validation-options.yaml file [miohtama]
        
        - Set ``zip_safe = False`` on the egg just in case [miohtama]
        
        0.1 - 0.1.1
        --------------
        
        - Added Github links to README [miohtama]
        
        0.1
        ----
        
        - Initial release
Platform: UNKNOWN
Classifier: Programming Language :: Python
