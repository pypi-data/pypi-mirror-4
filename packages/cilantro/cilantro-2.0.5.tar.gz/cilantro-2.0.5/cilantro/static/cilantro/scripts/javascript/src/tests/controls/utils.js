// Generated by CoffeeScript 1.3.3

define(['controls/utils'], function(utils) {
  var coerceValue, getInputValue, setInputValue, validateValue;
  Qunit.start();
  coerceValue = utils.coerceValue;
  validateValue = utils.validateValue;
  getInputValue = utils.getInputValue;
  setInputValue = utils.setInputValue;
  test('coerce values', function() {
    var type, types, _i, _len;
    types = ['number', 'string', 'boolean', 'date', 'datetime', 'time'];
    for (_i = 0, _len = types.length; _i < _len; _i++) {
      type = types[_i];
      equal(coerceValue(null, type), null);
      equal(coerceValue(void 0, type), null);
      equal(coerceValue('', type), null);
    }
    equal(coerceValue('8', 'number'), 8);
    equal(coerceValue('8.0', 'number'), 8.0);
    deepEqual(coerceValue(['1', '2'], 'number'), [1, 2]);
    deepEqual(coerceValue(NaN, 'number'), NaN);
    deepEqual(coerceValue('foo', 'number'), NaN);
    deepEqual(coerceValue(true, 'number'), NaN);
    deepEqual(coerceValue(false, 'number'), NaN);
    equal(coerceValue(8, 'string'), '8');
    equal(coerceValue(8.0, 'string'), '8');
    equal(coerceValue(8.1, 'string'), '8.1');
    equal(coerceValue(true, 'string'), 'true');
    equal(coerceValue(false, 'string'), 'false');
    equal(coerceValue(true, 'boolean'), true);
    equal(coerceValue(false, 'boolean'), false);
    equal(coerceValue(1, 'boolean'), true);
    equal(coerceValue(0, 'boolean'), false);
    equal(coerceValue('true', 'boolean'), true);
    equal(coerceValue('false', 'boolean'), false);
    equal(coerceValue('1', 'boolean'), true);
    equal(coerceValue('0', 'boolean'), false);
    equal(coerceValue('foo', 'boolean'), null);
    deepEqual(coerceValue('Oct 12, 2013', 'date'), new Date(2013, 9, 12));
    deepEqual(coerceValue('...', 'date'), null);
    deepEqual(coerceValue('foobar', 'date'), null);
    return deepEqual(coerceValue('2012-10-14 3:40 pm', 'time'), new Date(2012, 9, 14, 15, 40, 0));
  });
  test('validate value', function() {
    equal(validateValue(null, 'number'), false);
    equal(validateValue(null, 'string'), false);
    equal(validateValue(null, 'boolean'), false);
    equal(validateValue(null, 'date'), false);
    equal(validateValue(null, 'time'), false);
    return equal(validateValue(null, 'datetime'), false);
  });
  test('set/get values - multi', function() {
    var getMulti, i, setMulti, _i, _j, _ref, _ref1, _results;
    setMulti = [['bar'], ['foo'], ['bar', 'baz'], 'baz', [], null, '', 'unknown', ['unknown'], ['bar', 'baz']];
    getMulti = [['bar'], ['foo'], ['bar', 'baz'], ['baz'], [], [], [], [], [], ['bar', 'baz']];
    for (i = _i = 0, _ref = setMulti.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      setInputValue($('[name=cbox1]'), setMulti[i]);
      deepEqual(getInputValue($('[name=cbox1]')), getMulti[i]);
    }
    _results = [];
    for (i = _j = 0, _ref1 = setMulti.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
      setInputValue($('[name=select-multi]'), setMulti[i]);
      _results.push(deepEqual(getInputValue($('[name=select-multi]')), getMulti[i]));
    }
    return _results;
  });
  test('set/get values - single', function() {
    var getSingle, i, setSingle, _i, _j, _ref, _ref1, _results;
    setSingle = ['bar', 'foo', ['baz'], [], null, '', 'unknown', ['unknown'], 'foo'];
    getSingle = ['bar', 'foo', 'baz', null, null, null, null, null, 'foo'];
    for (i = _i = 0, _ref = setSingle.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      setInputValue($('[name=rad1]'), setSingle[i]);
      deepEqual(getInputValue($('[name=rad1]')), getSingle[i]);
    }
    _results = [];
    for (i = _j = 0, _ref1 = setSingle.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
      setInputValue($('[name=select]'), setSingle[i]);
      _results.push(deepEqual(getInputValue($('[name=select]')), getSingle[i]));
    }
    return _results;
  });
  test('set/get single checkbox', function() {
    setInputValue($('[name=cbox2]'), 'foo');
    deepEqual(getInputValue($('[name=cbox2]')), 'foo');
    setInputValue($('[name=cbox2]'), '');
    deepEqual(getInputValue($('[name=cbox2]')), null);
    setInputValue($('[name=cbox2]'), 'unknown');
    deepEqual(getInputValue($('[name=cbox2]')), null);
    setInputValue($('[name=cbox2]'), ['foo']);
    return deepEqual(getInputValue($('[name=cbox2]')), 'foo');
  });
  return test('set/get multi text', function() {
    deepEqual(getInputValue($('[name=range1]')), ['1', '2']);
    setInputValue($('[name=range1]'), [3, 5]);
    deepEqual(getInputValue($('[name=range1]')), ['3', '5']);
    setInputValue($('[name=range1]'), 4);
    deepEqual(getInputValue($('[name=range1]')), ['4', '5']);
    setInputValue($('[name=range1]'), [9, 8, 7]);
    deepEqual(getInputValue($('[name=range1]')), ['9', '8']);
    deepEqual(getInputValue($('[name=range2]')), '1');
    setInputValue($('[name=range2]'), [5, 6]);
    return deepEqual(getInputValue($('[name=range2]')), '5');
  });
});
