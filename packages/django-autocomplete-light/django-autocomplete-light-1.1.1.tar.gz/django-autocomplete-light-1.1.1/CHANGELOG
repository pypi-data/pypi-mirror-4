1.1.1

- Added option to disable watch of autocompletes hidden selects,
- Performance improvement on inlines,
- Provide: autocomplete_light.FixedModelForm,
- Allow override of form kwarg in modelform_factory,
- taggit support: warn that commit=False is not supported by TagField,
- Optimize updateWidgets with the help of DOMNodeInserted,
- Avoid ImproperlyConfigured when using CreateView directly for popups only,
- Mentioned python 2.6 support,
- Django 1.5 support in test project

1.1.0 BC break in templates.

- Fix #51, replaced <div> tags by <span class="div">, this
  enables rendering the widget in inline tags such as with {{
  form.as_p }}, and also makes it valid HTML.
- Fix #58, remove restrictions in choices_for_values.
- Added to AUTHORS: Marc Hörsken.

1.0.26 Fix #25: Prevent accidental inclusion of autocomplete_light/static.html

1.0.25 Added support for django-taggit in django.contrib.taggit_fields.

1.0.24 Added pt_BR translation, thanks Fábio C. Barrionuevo da Luz.

1.0.23 Added FixedModelForm, workaround django issue #9321.

1.0.22 Fix #46: $.data striped leading zeros from data-value

1.0.21 Added addanother.js, allowing to 'add another' even outside the admin.

1.0.20 Added AutocompleteBase.empty_html_format and spanish translation.

1.0.19 Locale/UX improvements suggested by vibragiel.

1.0.18 CSS Improvements by Michal Pasternak

1.0.17 Fixed a bug with cache concerning keyboard navigation and dependent
       autocompletes.

1.0.16 Added CharField autocompletion for comma separated values.

1.0.15 Holliday release

       - Fix #31: Workaround firefox form tempering attitude on reload
       - Fix #33: Rename LICENSE.txt to LICENSE
       - Fix #34: STATIC_PREFIX changed to {% static %} in templates
       - Fix #34: Added readme in russian
       - Fix #36: Removed old javascript-placeholder code from widget.js
       - Fix #38: Invalid CSS background property
       - Added to AUTHORS: @balmaster, @vosi, Brant Young (I hope i didn't
         forget anyone, if so please let me know)

       Note that except for #31, fixes were provided by the community, thanks a
       lot !

1.0.14 Added support for custom javascript initialization on autocomplete
       creation, ie. inlines.

       It is backward compatible, but you should migrate your custom javascript
       to:

       0) Use $(document).bind('yourlabsWidgetReady', ...) instead of
          $(document).ready(...) to initialize autocomplete widgets
       1) Use
          $('.autocomplete-light-widget[data-bootstrap=...]').live('initialize', ...)
          to instanciate autocomplete widgets instead of
          $('.autocomplete-light-widget[data-bootstrap=...]').each(...)

       See docs or remote.js for an example.

1.0.13 Use HTML5 placeholder, javascript API support for cloned widgets.

1.0.12 Fixed a crash when yourlabsAutocomplete was called on no element, fixed
       div id and removed debug statement.

1.0.11 Fugbix AutocompleteRestModel could not rely only on uniques, so it
       relies on get_or_create_by in that case

1.0.10 Fugbix models with a non numerical pk where not accepted anymore by a
       spec, the spec was removed from tests and this case is fixed.

1.0.9 Bugfix in remote autocomplete

1.0.8 Fixed keyboard navigation, 1.0.7 broke tests

1.0.7 Tested support for autocompletes that depend on each other.

1.0.6 Enhancement: set class 'autocomplete-light-widget' to autocomplete outer
                   containers created by widget.js

1.0.5 Enhancement: made rest model local object fetcher less harsh when trying
                   to find a local object

1.0.4 Bugfix: registering a generic autocomplete with a custom name did not
              use the custom name

1.0.3 Default search_names to 'name' if the model has a name field

1.0.2 Bugfix & refactor django admin + popup

1.0.1 Slight ergonomy improvement

1.0.0 (Almost) full rewrite

    - "Channel" is gone in favor of "Autocomplete"
    - More unit tests and new selenium tests
    - Javascript rewrite, for consistency and documentation
    - New view on /autocomplete_light/ allows admins to view the registry

0.6 No pity for insane bloat removal

    Backward compatibility break: {% autocomplete_light_static %} was removed.
    Instead, use {% include 'autocomplete_light/static.html' %} as demonstrated
    in the "Quick start" documentation.

    Note that autocomplete_light/static.html does not include
    cities_light/autocomplete.js, so you have to load it yourself now.

0.5

    No backward compatibility break.

    - Bugfix in generic channel example: demonstrate how to query_filter on
      multiple queryset types.
    - Bugfix in GenericForeignKeyField: allow none value.
    - Enhancement: autocomplete_light.contrib.generic_m2m supports generic many
      to many relations.
    - Enhancement: allow registration of model with custom channel attributes,
      this allows to register a model with another "search_name" than "name"
      without subclassing.
    - Documentation improvements.
