<dl class="portlet portletCollection"
    i18n:domain="plone"
    tal:define="collection_url view/collection_url;
                collection python:view.collection();
                collection_name python: collection is not None and collection.Title or '';
                plone_view context/@@plone;
                toLocalizedTime nocall:plone_view/toLocalizedTime;
                viewActions here/portal_properties/site_properties/typesUseViewActionInListings|python:();
                getIcon nocall:plone_view/getIcon;">
            
	    <dt class="portletHeader">
		<span class="portletTopLeft"></span>
		<a tal:attributes="href collection_url" tal:omit-tag="not:view/data/show_more">
		    <span tal:content="view/data/header" />
		</a>
		<span class="portletTopRight"></span>
	    </dt>
	    
	    <tal:block tal:repeat="item view/results">
		<div class="tileItem visualIEFloatFix vevent" 
                     tal:define="item_url item/getURL|item/absolute_url;
				       normalizeString nocall:context/@@plone/normalizeString; 
                                       item_id item/getId|item/id;
                                       item_title_or_id item/pretty_title_or_id;
                                       item_description item/Description;
                                       item_type item/portal_type;
                                       item_type_title item/Type;
                                       item_type_class python: 'contenttype-' + normalizeString(item_type);
                                       item_modified item/ModificationDate;
                                       item_created item/CreationDate;
                                       item_wf_state        item/review_state|python: wtool.getInfoFor(item, 'review_state', '');
                                       item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                                       item_creator item/Creator;
                                       item_start item/start/ISO|item/StartDate|nothing;
                                       item_end item/end/ISO|item/EndDate|nothing;
                                       item_has_leadimage item/hasContentLeadImage;
                                       item_object item/getObject;
				       use_view_action site_properties/typesUseViewActionInListings|python:();
                                   "
                     tal:attributes="class python:'tileItem visualIEFloatFix vevent' + item_type_class + ' ' + (repeat['item'].even() and 'tileEven' or 'tileOdd')">
                    
		    <a href="#"
                       tal:condition="python:item_type != 'Link'"
                       tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url">
                        <img src="" alt=""
                             tal:condition="exists:item_object/image_preview"
                             tal:replace="structure python: path('nocall:item_object/tag')(scale='preview', css_class='tileImage')" />
                        <img src="" alt=""
                             tal:condition="exists:item_has_leadimage"
                             tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />
                    </a>

		   <a href="#"
                       tal:condition="python:item_type == 'MediaPage'"
                       tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url">
                        <img tal:replace="structure python:view.getTileMedia(item)" />
                    </a>

                    <a href="#"
                       class="link-plain"
                       tal:condition="python:item_type == 'Link'"
                       tal:attributes="href item/getRemoteUrl">
                        <img src="" alt=""
                             tal:condition="exists:item_object/image_preview"
                             tal:replace="structure python: path('nocall:item_object/tag')(scale='preview', css_class='tileImage')" />
                        <img src="" alt=""
                             tal:condition="exists:item_has_leadimage"
                             tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />
                    </a>
		    
		    <h2 class="tileHeadline"
                        metal:define-macro="listitem">

                        <a href="#"
                           class="summary url"
                           tal:condition="python:item_type != 'Link'"
                           tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;
					   class python:(context.portal_membership.isAnonymousUser() and 'summary url') or 'summary url state-' + item_wf_state;"
                           tal:content="item_title_or_id">
                            Item Title
                        </a>

                        <a href="#"
                           class="link-plain"
                           tal:condition="python:item_type == 'Link'"
                           tal:content="item_title_or_id"
                           tal:attributes="href item/getRemoteUrl;
					   class python:(context.portal_membership.isAnonymousUser() and 'link-plain') or 'link-plain state-' + item_wf_state;">
                            External Link
                        </a>
                    </h2>
		    <div class="visualClear"></div>
		    <!-- div class="news-date" tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;" tal:condition="python:not view.isVideo(item)">
				    <span i18n:translate="published">Published</span>: <span tal:content="python:toLocalizedTime(item.Date)" tal:omit-tag="">
				    Date
				    </span>
			</div -->

		    <tal:video define="isVideo python:view.isVideo(item.getObject())" condition="isVideo">
			<div class="tileVideo" tal:define="audio_only python:view.audio_only(item.getObject());
							   hasLeadImage item/hasContentLeadImage">
			      <a class="autoFlowPlayerFake minimal" href="" tal:attributes="href python:item.getURL() + '/view';
										onclick python:hasLeadImage and 'config_video.configure(this, true)' or ''" tal:condition="python:not audio_only">
				      <img src="" class="splash"  alt=""
					   tal:condition="hasLeadImage"
					   tal:attributes="src python:item.getURL() + '/leadImage'" />
				      <img tal:replace="structure here/play-button.png" src="" alt="play video" tal:condition="hasLeadImage"/>
			      </a>
			      <a class="autoFlowPlayer audio" href="" tal:attributes="href python:item.getURL()" tal:condition="audio_only">
			      </a>
			      <p class="tileBody" tal:condition="audio_only">
				      <span tal:omit-tag="" tal:condition="not:item_description">
					  &nbsp;
				      </span>
				      <span class="description" tal:content="python:view.trimDescription(item_description, 250)">
					  description
				      </span>
			      </p>
			</div>
		    </tal:video>

                    <tal:excludedetails condition="python:item_type != 'Topic' and item_type != 'Folder' and not view.isVideo(item.getObject())">
                    <div class="documentByLine">
                    </div> 

                    <p class="tileBody">
                        <span tal:omit-tag="" tal:condition="not:item_description">
                            &nbsp;
                        </span>
                        <span class="description" tal:content="python:view.trimDescription(item_description, 200)"
			tal:condition="python:item.portal_type != 'Event'">
                            description
                        </span>
			<span class="description" tal:content="python:view.trimDescription(item_description, 90)"
			tal:condition="python:item.portal_type == 'Event'">
                            description
                        </span>
                    </p>

                    <p class="tileFooter">
		    
                    </p>
                    <div class="visualClear"><!-- --></div>

		</tal:excludedetails>
		
		<!-- div class="addthis_toolbox addthis_default_style"
			tal:attributes="addthis:url python:(item.portal_type == 'File' or item.portal_type == 'Image') and item_url + '/view' or item_url;
				        addthis:title item_title_or_id;
				        addthis:description python:view.trimDescription(item_description, 250);">
					  <a class="addthis_button_linkedin addthisButton">
					  </a>
					  <a class="addthis_button_email addthisButton">
					  </a>
	        </div -->
		
                </div>
            </tal:block>
</dl>