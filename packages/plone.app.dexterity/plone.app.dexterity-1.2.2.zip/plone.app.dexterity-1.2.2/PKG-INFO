Metadata-Version: 1.1
Name: plone.app.dexterity
Version: 1.2.2
Summary: Dexterity is a content type framework for CMF applications, with particular emphasis on Plone. It can be viewed as an alternative to Archetypes that is more light-weight and modular.
Home-page: http://plone.org/products/dexterity
Author: Martin Aspeli, David Glick, et al
Author-email: dexterity-development@googlegroups.com
License: GPL
Description: .. contents:: Table of Contents
           :depth: 1
        
        Introduction
        ============
        
        Dexterity wants to make some things really easy. These are:
        
        * Create a "real" content type entirely through-the-web without having to
          know programming.
        * As a business user, create a schema using visual or through-the-web tools,
          and augment it with adapters, event handlers, and other Python code written
          on the filesystem by a Python programmer.
        * Create content types in filesystem code quickly and easily, without losing
          the ability to customise any aspect of the type and its operation later if
          required.
        * Support general "behaviours" that can be enabled on a custom type in a
          declarative fashion. Behaviours can be things like title-to-id naming,
          support for locking or versioning, or sets of standard metadata with
          associated UI elements.
        * Easily package up and distribute content types defined through-the-web, on
          the filesystem, or using a combination of the two.
        
        Philosophy
        ==========
        
        Dexterity is designed with a specific philosophy in mind. This can be
        summarised as follows:
        
        Reuse over reinvention
          As far as possible, Dexterity should reuse components and technologies that
          already exist. More importantly, however, Dexterity should reuse concepts that
          exist elsewhere. It should be easy to learn Dexterity by analogy, and to work
          with Dexterity types using familiar APIs and techniques.
        
        Small over big
          Mega-frameworks be damned. Dexterity consists of a number of specialised
          packages, each of which is independently tested and reusable. Furthermore, 
          packages should has as few dependencies as possible, and should declare their
          dependencies explicitly. This helps keep the design clean and the code 
          manageable.
        
        Natural interaction over excessive generality
          The Dexterity design was driven by several use cases that express the way in 
          which we want people to work with Dexterity. The end goal is to make it easy 
          to get started, but also easy to progress from an initial prototype to a 
          complex set of types and associated behaviours through step-wise learning and 
          natural interaction patterns. Dexterity aims to consider its users - be they 
          business analysts, light integrators or Python developers, and be they new or 
          experienced - and cater to them explicitly with obvious, well-documented, 
          natural interaction patterns.
        
        Real code over generated code
          Generated code is difficult to understand and difficult to debug when it 
          doesn't work as expected. There is rarely, if ever, any reason to scribble 
          methods or 'exec' strings of Python code.
        
        Zope 3 over Zope 2
          Although Dexterity does not pretend to work with non-CMF systems, as many 
          components as possible should work with plain Zope 3, and even where there are 
          dependencies on Zope 2, CMF or Plone, they should - as far as is practical - 
          follow Zope 3 techniques and best practices. Many operations (e.g. managing 
          objects in a folder, creating new objects or manipulating objects through a 
          defined schema) are better designed in Zope 3 than they were in Zope 2.
        
        Zope concepts over new paradigms
          We want Dexterity to be "Zope-ish". Zope is a mature, well-designed (well, 
          mostly) and battle tested platform. We do not want to invent brand new 
          paradigms and techniques if we can help it.
        
        Automated testing over wishful thinking
          "Everything" should be covered by automated tests. Dexterity necessarily has a 
          lot of moving parts. Untested moving parts tend to come loose and fall on 
          people's heads. Nobody likes that.
        
        Getting started
        ===============
        
        Please read the `installation guide`_ to get Dexterity up and running.
        
        .. _`installation guide`: http://plone.org/products/dexterity/documentation/how-to/install
        
        Then log in to Plone, go to Site Setup, and go to the ``Dexterity Types``
        control panel to get started creating content types through the web.
        
        Or read the `Dexterity developer manual`_ to get started developing
        Dexterity content types on the filesystem.
        
        This release of Dexterity is compatible with Plone 3, 4, and 4.1.
        
        Upgrading
        =========
        
        If you are upgrading from a previous release of Dexterity, you need to:
        
        1. Update your buildout with the new versions (or extend the updated KGS),
           and re-run it.
        2. Restart Zope.
        3. Go to the Add-ons control panel in Plone Site Setup, and run the
           upgrade steps for "Dexterity Content Types" if there are any available.
        
        Documentation
        =============
        
        Various documentation is available:
        
        * `FAQ`_
        * `Dexterity Developer Manual`_
        * `How to create reusable behaviors for Dexterity types`_
        
        .. _`FAQ`: http://plone.org/products/dexterity/documentation/faq
        .. _`Dexterity developer manual`: http://plone.org/products/dexterity/documentation/manual/developer-manual
        .. _`How to create reusable behaviors for Dexterity types`: http://plone.org/products/dexterity/documentation/manual/behaviors
        
        The following documents are not Dexterity-specific, but will likely be useful
        to users of Dexterity:
        
        * `Schema-driven forms manual`_
        * `five.grok manual`_
        
        .. _`Schema-driven forms manual`: http://plone.org/products/dexterity/documentation/manual/schema-driven-forms
        .. _`five.grok manual`: http://plone.org/products/dexterity/documentation/manual/five.grok
        
        
        Mailing list
        ============
        
        The `dexterity-development group`_ provides a place to discuss development
        and use of Dexterity.
        
        .. _`dexterity-development group`: http://groups.google.com/group/dexterity-development
        
        Issue tracker
        =============
        
        Please report issues in our `Google Code issue tracker`_.
        
        .. _`Google Code issue tracker`: http://code.google.com/p/dexterity/issues
        
        
        Contributed Packages
        ====================
        
        The Dexterity known good set (KGS) of version pins includes a number of
        contributed packages that are not installed by default:
        
        plone.app.referenceablebehavior
          Adds support for the Archetypes reference engine to Dexterity content, so
          that Dexterity items can be referenced from Archetypes items. Requires
          Plone 4.1.
        
        plone.app.stagingbehavior
          Adds support for staging Dexterity content, based on plone.app.iterate.
          Requires Plone 4.1.
        
        plone.app.versioningbehavior
          Adds support for storing historic versions of Dexterity content, based on
          Products.CMFEditions. Requires Plone 4.0 or greater.
        
        collective.z3cform.datagridfield
          A z3c.form widget for editing lists of subobjects via a tabular UI.
        
        
        Contributing
        ============
        
        Most Dexterity code is owned by the `Plone Foundation`_ and maintained in the
        `Plone svn repository`_. We're happy to share commit access so that you can
        share code with us, but first you must sign the `Plone contributor agreement`_.
        
        .. _`Plone Foundation`: http://plone.org/foundation
        .. _`Plone svn repository`: http://svn.plone.org/plone
        .. _`Plone contributor agreement`: http://plone.org/foundation/contributors-agreement
        
        Dexterity wouldn't be possible without the hard work of a lot of people, including:
        
        * Martin Aspeli
        * Jian Aijun
        * Wichert Akkerman
        * Jonas Baumann
        * JC Brand
        * David Brenneman
        * Thomas Buchberger
        * Joel Burton
        * Roche Compaan
        * Vincent Fretin
        * Rok Garbas
        * Anthony Gerrard
        * Nathan van Gheem
        * David Glick
        * Craig Haynal
        * Wouter Vanden Hove
        * Jean-Michel Francois
        * Jim Fulton
        * Jamie Lentin
        * Alex Limi
        * Marco Martinez
        * Steve McMahon
        * Jason Mehring
        * Alec Mitchell
        * Daniel Nouri
        * Ross Patterson
        * Franco Pellegrini
        * Martijn Pieters
        * Maurits van Rees
        * Johannes Raggam
        * Lennart Regebro
        * Laurence Rowe
        * Israel Saeta Perez
        * Hanno Schlichting
        * Christian Schneider
        * Carsten Senger
        * Jon Stahl
        * Carsten Senger
        * Eric Steele
        * Gaudenz Steinlin
        * Dorneles Tremea
        * Sean Upton
        * Hector Velarde
        * Sylvain Viollon
        * Matthew Wilkes
        * Matt Yoder
        * Andi Zeidler
        
        (Please add your name if we have neglected to.)
        
        Release Notes
        =============
        
        This release is compatible with Plone 3, 4, 4.1, and 4.2, as long as you use
        the correct set of version pins from good-py (see the installation guide).
        
        Changes
        -------
        
        The following packages have been updated since Dexterity 1.1:
        
        plone.app.dexterity 1.2 & 1.2.1
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Add missing upgrade description to restore Plone 3 compatibility.
          [davisagli]
        
        - Give a more explicit warning before deleting content types that have existing
          instances.
          [davisagli]
        
        - Add validation to prevent giving a type the same name as an existing type.
          [davisagli]
        
        - Make sure the title and description of new FTIs are stored encoded,
          and with a default i18n domain of 'plone'.
          [davisagli]
        
        - Install the profile from collective.z3cform.datetimewidget to enable the
          Jquery Tools date picker for date/time fields.
          [davisagli]
        
        - Bugfix: Make sure type short names are validated.
          [davisagli]
        
        - Bugfix: Fix display of type descriptions in the types control panel.
          [davisagli]
        
        - Add intro message to Dexterity control panel.
          [jonstahl, davisagli]
        
        plone.dexterity 1.1.2
        ~~~~~~~~~~~~~~~~~~~~~
        
        * Fix UnicodeDecodeError when getting an FTI title or description with
          non-ASCII characters.
          [davisagli]
        
        * When deleting items from a container using manage_delObjects,
          check for the "DeleteObjects" permission on each item being
          deleted. This fixes
          http://code.google.com/p/dexterity/issues/detail?id=252
          [davisagli]
        
        plone.schemaeditor 1.2.0
        ~~~~~~~~~~~~~~~~~~~~~~~~
        
        * Display fields from behaviors in the schema preview too.
          [davisagli]
        
        * Prevent the user from creating fields with names that are reserved for
          Dublin Core metadata. ``title`` and ``description`` can still be used
          as long as the fields are of the correct type.
          [davisagli]
        
        * Remove unhelpful help text for min_length and max_length fields.
          [davisagli]
        
        * The schema listing preview now respects autoform hints (such as custom
          widgets).
          [davisagli]
        
        * Make new boolean fields use the radio widget by default. The field now
          appears as "Yes/No" in the list of field types.
          [davisagli]
        
        * Hide the 'read only' setting for fields.
          [davisagli]
        
        * Edit field defaults from the schema listing instead of in the field
          overlays. This simplifies making sure that the default can't be set
          to invalid values.
          [davisagli]
        
        * Limit the height of text areas in the schema listing to avoid extra
          scrolling.
          [davisagli]
        
        * Fall back to normal traversal if a field isn't found when traversing the
          schema context. This fixes inline validation for forms on the schema
          context.
          [davisagli]
        
        * Make it possible to make the schemaeditor not be the default view of the
          schema context, by specifying the ``schemaEditorView`` attribute on the
          schema context.
          [davisagli]
        
        * Added Spanish translation.
          [hvelarde]
        
        plone.autoform 1.1
        ~~~~~~~~~~~~~~~~~~
        
        - Added the AutoObjectSubForm class to support form hints for
          object widget subforms.
          [jcbrand]
        
        plone.app.textfield 1.1
        ~~~~~~~~~~~~~~~~~~~~~~~
        
        - Provide a version of the RichText field schema for use with
          plone.schemaeditor. Only the ``default_mime_type`` field is exposed for
          editing through-the-web, with a vocabulary of mimetypes derived from
          the ``AllowedContentTypes`` vocabulary in ``plone.app.vocabularies``
          (which can be adjusted via Plone's markup control panel).
          [davisagli]
        
        - Log original exception when a TransformError is raised.
          [rochecompaan]
        
        plone.app.versioningbehavior 1.1
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Added French translations.
          [jone]
        
        - Fixed SkipRelations modifier to also work with behaviors which are storing
          relations in attributes.
          [buchi]
        
        - Added Spanish translation.
          [hvelarde]
        
        plone.app.intid 1.0
        ~~~~~~~~~~~~~~~~~~~
        
        - Remove includeOverride for five.intid. [thet]
        
        - Fix import step intid-register-content to register content 
          in all Languages if LinguaPlone is installed. [csenger]
        
        plone.formwidget.autocomplete 1.2.3
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Fix <input /> element generation for Internet Explorer; in most cases,
          the generated element would be lacking the name attribute. [mj]
        
        plone.formwidget.contenttree 1.0.5
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Added Spanish translation
          [hvelarde]
        
        collective.z3cform.datagridfield 0.10
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Fix bug with moving the last row up. [m-martinez]
        
        z3c.formwidget.query 0.8
        ~~~~~~~~~~~~~~~~~~~~~~~~
        
        - If one of the values to be displayed provides IRoleManager,
          then check for permission first.
          [frapell]
        
        Changelog for plone.app.dexterity
        =================================
        
        1.2.2 - 2013-01-11
        ------------------
        
        - Add Dutch translation. [stevenlooman]
        
        - Add Portuguese translation. [hersonrodrigues]
        
        - Backported i18n fixes by giacomos. [stevenlooman, giacomos]
        
        - Add upgrade step to make sure that only uninstalling plone.app.intid will
          remove the intids utility.
          [davisagli]
        
        1.2.1 - 2012-03-04
        ------------------
        
        - Add missing upgrade description to restore Plone 3 compatibility.
          [davisagli]
        
        1.2 - 2011-12-20
        ----------------
        
        - Give a more explicit warning before deleting content types that have existing
          instances.
          [davisagli]
        
        - Add validation to prevent giving a type the same name as an existing type.
          [davisagli]
        
        - Make sure the title and description of new FTIs are stored encoded,
          and with a default i18n domain of 'plone'.
          [davisagli]
        
        - Install the profile from collective.z3cform.datetimewidget to enable the
          Jquery Tools date picker for date/time fields.
          [davisagli]
        
        - Bugfix: Make sure type short names are validated.
          [davisagli]
        
        - Bugfix: Fix display of type descriptions in the types control panel.
          [davisagli]
        
        - Add intro message to Dexterity control panel.
          [jonstahl, davisagli]
        
        1.1 - 2011-11-26
        ----------------
        
        - Added Italian translation.
          [giacomos]
        
        - Make sure that the intids utility doesn't get destroyed if a product
          depending on Dexterity is reinstalled. This closes
          http://code.google.com/p/dexterity/issues/detail?id=239
          [davisagli]
        
        - Add upgrade step to add missing UUIDs to Dexterity content items if
          ``plone.uuid`` is present.
          [davisagli]
        
        - Added Spanish translation.
          [hvelarde]
        
        
        1.0.3 - 2011-09-24
        ------------------
        
        - Fix bad release of 1.0.2.
          [davisagli]
        
        1.0.2 - 2011-09-24
        ------------------
        
        - Bugfix: Fix the deprecated IRelatedItems to still add a form field.
          [davisagli]
        
        - Bugfix: Make sure subject can still be retrieved as unicode for the
          categorization behavior now that the Subject accessor returns a bytestring.
          [davisagli]
        
        1.0.1 - 2011-07-02
        ------------------
        
        - Deprecated the IRelatedItems behavior in this package. It moved to
          plone.app.relationfield.
          [davisagli]
        
        - Add no-op "grok" and "relations" extras for forward-compatibility with 
          Dexterity 2.0.
          [davisagli]
        
        1.0 - 2011-05-20
        ----------------
        
        - Fix publishing dates DateTime/datetime conversions so as not to drift by the
          timezone delta every save.
          [elro]
        
        - Make sure cloned types get a new factory.
          [davisagli]
        
        - Don't override overlay CSS in Plone 4.
          [davisagli]
        
        - Fixed cloning of types with a period (.) in their short name.
          [davisagli]
        
        - Allow specifying a type's short name when adding a type.
          [davisagli]
        
        - Make sure the Basic metadata adapter accesses the content's title attribute
          directly so it doesn't get encoded. Also make sure encoded data can't be set
          via this adapter.
          [davisagli]
        
        1.0rc1 - 2011-04-30
        -------------------
        
        - Added upgrade step to install new javascript from
          plone.formwidget.autocomplete
          [davisagli]
        
        - Added basic support for making TTW changes to schemas defined in filesystem
          models and code. (Note: This feature will not actually work until some further
          changes are completed in plone.dexterity.)
        
          In order to support this change, the event handling to serialize schema changes
          was revised. We now register a single event handler for the SchemaModifiedEvent
          raised for the schema context. This allows us to keep track of the FTI
          that changes need to be serialized to on the schema context. The
          serializeSchemaOnFieldEvent and serializeSchemaOnSchemaEvent handlers were
          removed from the serialize module and replaced by serializeSchemaContext. The
          serializeSchema helper remains but is deprecated.
          [davisagli]
        
        - Add MANIFEST.in.
          [WouterVH]
        
        - Add "export" button to types editor. Exports GS-style zip archive of type
          info for selected types.
          [stevem]
        
        - Fix old jquery alias in types_listing.pt. This closes
          http://code.google.com/p/dexterity/issues/detail?id=159
          [davisagli]
        
        - Make display templates fill content-core on Plone 4.
          [elro]
        
        - Add ids to the group fieldsets on display forms.
          [elro]
        
        - Exclude from navigation behavior should be restricted to IDexterityContent.
          [elro]
        
        
        1.0b4 - 2011-03-15
        ------------------
        
        - Add a "Name from file name" behavior.
          [elro]
        
        - Remove the NameFromTitle behavior factory, it is not necessary.
          [elro]
        
        - Add "Next previous navigation" and "Next previous navigation toggle"
          behaviors.
          [elro]
        
        - Add an "Exclude from navigation" behavior.
          [lentinj]
        
        - Put the folder listing within a fieldset.
          [lentinj]
        
        
        1.0b3 - 2011-02-11
        ------------------
        
        - Add a navigation root behavior.
          [elro]
        
        - Fix decoding error when an encoded description is stored in the FTI.
          [davisagli]
        
        - Avoid empty <div class="field"> tag for title and description in
          item.pt and container.pt.
          [gaudenzius]
        
        - Add locales structure for translations with cs , de, es, eu, fr, ja, nl, pt_BR
          [toutpt]
        
        - Update french translation
          [toutpt]
        
        
        1.0b2 - 2010-08-05
        ------------------
        
        - Fix several XML errors in templates. Needed for Chameleon compatibility.
          [wichert]
        
        - cloning a type through the dexterity UI in the control panel did not work
          if the type had a hyphen in it's name. This fixes 
          http://code.google.com/p/dexterity/issues/detail?id=126
          [vangheem]
        
        
        1.0b1 - 2010-04-20
        ------------------
        
        - Require plone.app.jquerytools for the schema editor UI, and make sure it is
          installed when upgrading.
          [davisagli]
        
        - Remove unused schemaeditor.css.
          [davisagli]
        
        - Omit the metadata fields except on edit and add forms.
          [davisagli]
        
        - Enable the "Name from title" behavior for new types, by default.
          [davisagli]
        
        - Include plone.formwidget.namedfile so that File upload and Image fields are
          available out of the box.  You must explicitly include z3c.blobfile in your
          environment if you want blob-based files.
          [davisagli]
        
        - Added a DexterityLayer that can be used in tests.
          [davisagli]
        
        - Fix issue with the BehaviorsForm accidentally polluting the title of the
          z3c.form EditForm 'Apply' button.
          [davisagli]
        
        - Add upgrades folder and make sure plone.app.z3cform profile gets installed
          on upgrades from previous versions of Dexterity.
          [davisagli]
        
        - Depend on the plone.app.z3cform profile, to make sure the Plone browser layer
          for z3c.form gets installed.
          [davisagli]
        
        - Avoid relying on acquisition to get the portal_url for links in the type
          listing table.
          [davisagli]
        
        
        1.0a7 - 2010-01-08
        ------------------
        
        - Make sure the Dublin Core fieldsets appear in the same order as they
          do in AT content.
          [davisagli]
        
        - Make sure the current user is loaded as the default creator for the
          IOwnership schema in an add form.
          [davisagli]
        
        - Include behavior descriptions on the behavior edit tab.
          [davisagli]
        
        - IBasic behavior: set missing_value of description-field to u'' . The
          description should never be None (live_search would not work any more).
          [jbaumann]
        
        - Fix issue where traversing to a nonexistent type name in the types control
          panel did not raise NotFound.
          [davisagli]
        
        - Make it possible to view the fields of non-editable schemata.
          [davisagli]
        
        - Tweaks to the tabbed_forms template used for the types control panel.
          [davisagli]
        
        
        1.0a6 - 2009-10-12
        ------------------
        
        - Add plone.app.textfield as a dependency. We don't use it directly in this
          package, but users of Dexterity should have it installed and available.
          [optilude]
        
        - Use some default icons for new types.
          [davisagli]
        
        - Show type icons in type listing if available.
          [davisagli]
        
        - Removed 'container' field from the types listing in the control panel
          (it wasn't working).
          [davisagli]
        
        - Add message factories to titles and descriptions of metadata schema fields.
          Fixes http://code.google.com/p/dexterity/issues/detail?id=75.
          [optilude]
        
        - Patch listActionInfos() instead of listActions() in order to get the
          folder/add category into the actions list. This avoids a problem with
          the 'actions.xml' export handler exporting the folder/add category
          incorrectly. Fixes http://code.google.com/p/dexterity/issues/detail?id=78
          [optilude]
        
        
        1.0a5 - 2009-07-26
        ------------------
        
        - Explicitly include overrides.zcml from plone.app.z3cform.
          [optilude]
        
        
        1.0a4 - 2009-07-12
        ------------------
        
        - Changed API methods and arguments to mixedCase to be more consistent with
          the rest of Zope. This is a non-backwards-compatible change. Our profuse
          apologies, but it's now or never. :-/
        
          If you find that you get import errors or unknown keyword arguments in your
          code, please change names from foo_bar too fooBar, e.g. serialize_schema()
          becomes serializeSchema().
          [optilude]
        
        
        1.0a3 - 2009-06-07
        ------------------
        
        - Updated use of <plone:behavior /> directive to match plone.behavior 1.0b4.
          [optilude]
        
        
        1.0a2 - 2009-06-01
        ------------------
        
        - Remove superfluous <includeOverrides /> in configure.zcml which would cause
          a problem when the package is loaded via z3c.autoinclude.plugin
          [optilude]
        
        
        1.0a1 - 2009-05-27
        --------------------
        
        - Initial release
        
Keywords: plone ttw dexterity schema interface
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 5 - Production/Stable
