
pywws.Localisation
******************

Localisation.py - fournit des traductions de phrases en langue locale

   usage: python RunModule.py Localisation [options]
   options are:
    -h       or  --help       display this help
    -t code  or  --test code  test use of a language code


Introduction
============

Certains modules pywws, comme WindRose.py, peuvent automatiquement
utiliser la langue locale pour des choses telles que les directions du
vent. Le module Localisation.py, surtout copié à partir d'exemples
dans la documentation Python, permet cela.

Traduction de pywws se fait en deux parties - traduisant les phrases
comme 'rising very rapidly', en changeant le "terme local" qui
contrôle des choses comme le noms des mois et la représentation des
nombres (par exemple le nombre '23, 2' au lieu de '23 .2 '). Sur
certains ordinateurs, il peut ne pas être possible de définir les
paramètres régionaux, mais les chaînes traduites peuvent encore être
utilisées.


En utilisant une langue différente
==================================

Le langage utilisé par pywws est situé dans la section "[config]" du
fichier "weather.ini". Cela peut être un code de langue à deux
lettres, comme "fr" (français), ou pouvez spécifier une variante
nationale, telle que "fr_CA" (canadien-français). Il pourrait
également s'agir d'un jeu de caractères, par exemple "de_DE.UTF-8".

Le choix de la langue dépend beaucoup du système, donc Localisation.py
peut être exécuté comme un programme autonome pour tester les codes
linguistiques. Un bon point de départ pourrait être, par exemple,
votre variable d'environnement "LANG":

   jim@brains:~/Documents/weather/pywws/code$ echo $LANG
   en_GB.UTF-8
   jim@brains:~/Documents/weather/pywws/code$ python -m pywws.Localisation -t en_GB.UTF-8
   Locale changed from (None, None) to ('en_GB', 'UTF8')
   Translation set OK
   Locale
     decimal point: 23.2
     date & time: Friday, 14 October (14/10/11 13:02:00)
   Translations
     'NNW' => 'NNW'
     'rising very rapidly' => 'rising very rapidly'
     'Rain at times, very unsettled' => 'Rain at times, very unsettled'
   jim@brains:~/Documents/weather/pywws/code$

Dans la plupart des cas, pas plus que d'un code à deux lettres n'est
requis:

   jim@brains:~/Documents/weather/pywws/code$ python -m pywws.Localisation -t fr
   Locale changed from (None, None) to ('fr_FR', 'UTF8')
   Translation set OK
   Locale
     decimal point: 23,2
     date & time: vendredi, 14 octobre (14/10/2011 13:04:44)
   Translations
     'NNW' => 'NNO'
     'rising very rapidly' => 'en hausse très rapide'
     'Rain at times, very unsettled' => 'Quelques précipitations, très perturbé'
   jim@brains:~/Documents/weather/pywws/code$

Si vous essayez une langue non prise en charge, pywws reprend
l'anglais:

   jim@brains:~/Documents/weather/pywws/code$ python -m pywws.Localisation -t ja
   Failed to set locale: ja
   No translation file found for: ja
   Locale
     decimal point: 23.2
     date & time: Friday, 14 October (10/14/11 13:08:49)
   Translations
     'NNW' => 'NNW'
     'rising very rapidly' => 'rising very rapidly'
     'Rain at times, very unsettled' => 'Rain at times, very unsettled'
   jim@brains:~/Documents/weather/pywws/code$

Une fois que vous avez trouvé un code de langue approprié qui
fonctionne, vous pouvez demander à pywws de l'utiliser en éditant
votre fichier "weather.ini":

   [config]
   language = fr


Créer une nouvelle traduction
=============================

S'il n'y a aucun fichier de traduction pour votre langue préférée,
alors vous devez en créer un. Voir *Comment utiliser pywws dans une
autre langue* pour obtenir les instructions détaillées.

-[ Fonctions ]-

+------------+--------------------------------------------------------------------------------------------+
| "SetLocale | Régle la langue 'locale' utilisée par un programme.                                        |
+------------+--------------------------------------------------------------------------------------------+
| "SetTransl | Régle la traduction utilisée par les modules (certains) pywws.                             |
+------------+--------------------------------------------------------------------------------------------+
| "SetApplic | Défini la langue locale et la traduction pour un programme pywws.                          |
+------------+--------------------------------------------------------------------------------------------+

pywws.Localisation.SetLocale(lang)

   Régle la langue 'locale' utilisée par un programme.

   Cela affecte toute l'application, en changeant la façon dont les
   dates, les devises et les chiffres sont représentés. Il ne devrait
   pas être appelée à partir d'une routine de bibliothèque qui peut
   être utilisée dans un autre programme.

   Le paramètre "lang" peut être n'importe quelle chaîne reconnue par
   "locale.setlocale ()", par exemple "en", "fr_FR" ou "fr_FR.UTF-8".

   Paramètres:
      **lang** (*string*) -- language code.

   Retourne:
      success status.

   Type retourné:
      bool

pywws.Localisation.SetTranslation(lang)

   Régle la traduction utilisée par les modules (certains) pywws.

   Ceci définit l'objet de la traduction "Localisation.translation" à
   utiliser une langue particulière.

   Le paramètre "lang" peut être une chaîne sous la forme "en", ``
   fr_FR`` ou "fr_FR.UTF-8". Tout ce qui suit un caractère "." est
   ignoré. Dans le cas d'une chaîne telle que "fr_FR", la routine va
   rechercher un fichier de langue "fr_FR" avant de chercher un "fr".

   Paramètres:
      **lang** (*string*) -- language code.

   Retourne:
      success status.

   Type retourné:
      bool

pywws.Localisation.SetApplicationLanguage(params)

   Défini la langue locale et la traduction pour un programme pywws.

   Cette fonction permet de lire la langue à partir du fichier de
   configuration, puis appel les fonctions "SetLocale()" et
   "SetTranslation()".

   Paramètres:
      **params** (*object*) -- a "pywws.DataStore.params" object.

pywws.Localisation.main(argv=None)
