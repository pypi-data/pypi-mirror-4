django:
  fullname: Django
  description: 'Django assistant will help you create a basic Django project and install its dependencies.'

  dependencies:
  - rpm: ['python-django']

  dependencies_eclipse:
  - rpm: ['eclipse-pydev']

  args:
    name:
      snippet: common_args

    eclipse:
      snippet: common_args

    github:
      snippet: common_args

  files:
    gitignore: &gitignore
      source: python/.gitignore
    dot_project: &dot_project
      source: python/django/.project
    dot_pydevproject: &dot_pydevproject
      source: python/django/.pydevproject

  run:
  - $dirname: dirname $name
  - $basename: basename $name
  - log_i: 'Creating Django project $basename in $dirname ...'
  - if ls $name:
    - log_e: '$name already exists, cannot proceed.'
  - cl: cd $dirname
  - cl: django_admin startproject $basename
  # make modifications to settings.py so that project can be run immediately
  - cl: sed -i 's|django.db.backends.|django.db.backends.sqlite3|' $basename/$basename/settings.py
  # \(.\) is workaround for ":", which cannot be here because it would mean yaml error
  - cl: sed -i '1i\import os\n' $basename/$basename/settings.py
  - cl: sed -i "2i\BASE_DIR = os.path.join(os.path.dirname(__file__), '..')\n" $basename/$basename/settings.py
  - cl: sed -i "s|'NAME'\(.\) ''|'NAME'\1 os.path.join(BASE_DIR, 'db.sqlite3')|" $basename/$basename/settings.py
  - dda_c: $name
  - cl: cd $basename
  - if $eclipse:
    - log_i: 'Registering as Eclipse project ...'
    - cl: cp *dot_project .
    - cl: cp *dot_pydevproject .
    - cl: sed -i 's|NAME|$basename|' .project
    - cl: sed -i 's|NAME|$basename|' .pydevproject
    - cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $name -data $eclipse
    - log_i: 'Registered as Eclipse project.'
  - cl: cp *gitignore .
  - snippet: git_init_add_commit
  - if defined $github:
    - github: create_and_push
  - log_i: 'Django project $basename in $dirname has been created.'
