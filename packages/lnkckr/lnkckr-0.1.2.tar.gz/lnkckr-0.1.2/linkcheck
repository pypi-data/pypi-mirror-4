#!/usr/bin/env python3
# Copyright (C) 2013 by Yu-Jie Lin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


from __future__ import print_function
import argparse
import json
from os import path
import sys

from lnkckr.checkers import checkers


def main():

  parser = argparse.ArgumentParser()
  parser.add_argument('-c', '--checker')
  parser.add_argument('-u', '--update', action='store_true', help='update JSON')
  parser.add_argument('-f', '--file')
  parser.add_argument('-j', '--json')
  parser.add_argument('-s', '--status',
                      help=('re-check links with status. '
                            'Valid values: all, HTTP status code'))
  args = parser.parse_args()

  for checker in checkers:
    if args.checker and checker.ID == args.checker:
      Checker = checker
      break
  else:
    print('Cannot find checker to process', file=sys.stderr)
    sys.exit(1)

  if not args.file and not args.json:
    print('No files to process', file=sys.stderr)
    sys.exit(1)

  checker = Checker()
  checker.load(args.file, args.json, args.update)
  links = checker.links

  f = None
  if args.status:
    f = lambda item: item[1]['status'] == args.status
  checker.check(f)
  print()
  checker.print_all()


if __name__ == '__main__':
  main()
