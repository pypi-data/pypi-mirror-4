<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:five="http://namespaces.zope.org/five"
           xmlns:i18n="http://namespaces.zope.org/i18n"
           xmlns:zcml="http://namespaces.zope.org/zcml"
           xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
           i18n_domain="ContentLicensing">

  <include package=".browser" />
  <include package=".utilities"/>
  <include package=".DublinCoreExtensions" />
  <include zcml:condition="installed plone.app.blob" package="plone.app.blob" />

  <five:registerPackage package="." />
  <genericsetup:importStep
      name="contentlicensing-final"
      title="Content Licensing Final Steps Setup"
      description="Content Licensing Final Steps Setup"
      handler="collective.contentlicensing.setupHandlers.importFinalSteps">
    <depends name="plone-final" />
  </genericsetup:importStep>
  <genericsetup:registerProfile
     name="default"
     title="ContentLicensing"
     directory="profiles/default"
     description="Extension Profile for Content Licensing Product."
     provides="Products.GenericSetup.interfaces.EXTENSION"
     i18n:attributes="title gs_profiles_default_title;
                      description gs_profiles_default_description;"
     />

  <genericsetup:importStep
     name="collective.contentlicensing"
     title="Content Licensing import"
     description="Import content licensing utility"
     handler="collective.contentlicensing.setupHandlers.setupUtilities">
  </genericsetup:importStep>

  <i18n:registerTranslations directory="locales" />

  <subscriber
      for="Products.ATContentTypes.content.folder.ATFolder
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".events.recursive_license"
    />

  <subscriber
      for=".interfaces.IATTopic
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".events.recursive_license"
    />

  <adapter name="copyrightHolder" factory=".indexers.getCopyrightHolder" />
  <adapter name="copyrightLicense" factory=".indexers.getCopyrightLicense" />

  <class class="Products.CMFCore.PortalObject.PortalObjectBase">
    <implements interface="collective.contentlicensing.interfaces.IPortalObject" />
  </class> 


</configure>
