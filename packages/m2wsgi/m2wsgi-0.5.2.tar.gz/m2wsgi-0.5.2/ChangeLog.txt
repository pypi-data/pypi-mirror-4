v0.5.2

    * Include REMOTE_ADDR in the WSGI environ dict; thanks steamraven.
    * Add support for gevent 1.0b; thanks aadis.

v0.5.1

    * Compatability with latest eventlet and gevent releases.

v0.5.0

    * Compatability update; m2wsgi now requires Mongrel2 v1.6 or later.
        * Removed the "reaper" device; Mongrel2 v1.6 has its own timeouts

v0.4.1

    * Add support for tnetstrings as well as JSON.
    * Add WSGI "run_once" variable; thanks logic.


v0.4.0

    * A HUGE suite of API refactorings.
      Too sweeping to report in detail, but the highlights are:
        * abstract base classes now defined in m2wsgi.io.base, with concrete
          implementations in m2wsgi.io.raw, m2wsgi.io.eventlet, etc.
        * new class "Client" represents a client connection to which you can
          send data; basically a (server id,conection id) tuple.
        * new class "Handler" is a base class for handlers, with nothing
          WSGI-specific.  Maybe useful for writing custom handlers.
        * different types of Connection now live in different classes, rather
          than a single class with various socket-type switches.
            * see m2wsgi.io.base.DispatcherConnection for an example.
    * Socket identities are now specified as part of a single socket-spec
      string, with a URL-like format, e.g:  tcp://IDENTITY@host:port
    * New "dispatcher" device replaces the old pull2xreq device:
        * sends explicit pings to detect dead handler processes
        * capable of flexible request routing
        * supports "sticky sessions" out of the box
    * New "response" device gives out easy canned responses.
    * New "reaper" device implements simplistic request timeouts.
    * added some utility middleware for use by the server:
        * GZipMiddleware:  gzip response bodies
        * BufferMiddleware:  buffer response bodies, for better compression


v0.3.0

    * New method Connection.shutdown() to stop receiving more requests,
      but allow processing of any that are already received.
    * Much improved custom request protocol with clean shutdown:
          * socket type changed from from REQ to XREQ.
          * helper renamed from pull2queue => devices.pull2xreq
          * handler now sends an explicit shutdown message to the socket.
          * socket can push requests to the handler asynchronously.
    * WSGIHandler._shutdown() now waits for all in-progress requests to
      complete before it terminates the server.
    * Add experimental gevent IO module
    * Install command-line script "m2wsgi".


v0.2.0

    * Transparent support for streaming reads of large request bodies.
    * Support for a REQ-based handler protocol as an alternative to
      mongrel2's standard PULL-based protocol.  See m2wsgi/pull2qeue.py.
    * And of course, many bugfixes and WSGI compatability improvements.


v0.1.0

    * initial release; you might say *everything* has changed.
