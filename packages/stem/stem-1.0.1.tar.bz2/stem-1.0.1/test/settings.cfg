# Testing Configuration
#
# The following are configurations used by stem's testing framework. You can
# overwrite any of these my making your own configuratino file and using the
# '--config' option of run_tests.py...
#
#   run_tests.py --config my_testrc --unit
#
# The commonly customized options are...
#
# argument.*
#   Default test runner arguments. You can set these to always run with
#   particular arguments.
#
# integ.test_directory
#   Path used for our data directory and any temporary test resources. Relative
#   paths are expanded in reference to the location of 'run_tests.py'.
#   
#   If set then the directory's contents are reused for future tests (so we
#   have a faster startup and lower load on authorities). If set to an empty
#   value then this makes a fresh data directory for each test run.
#
# integ.log
#   Path runtime logs are placed. Relative paths are expanded in reference to
#   'run_tests.py'. Logging is disabled if set ot an empty value.
#
# integ.target.online
#   Runs tests with network activity. If set then we'll wait for tor to fully
#   bootstrap when starting, which won't happen without a network connection.
#
# integ.target.relative_data_dir
#   Uses a relative path for the tor data directory if set.
#
# integ.target.run.*
#   Runs the integration test suite for all of the given connection and
#   authentication configurations. If the 'all' option is set then the other
#   flags are ignored.

argument.unit false
argument.integ false
argument.style false
argument.test
argument.log
argument.tor tor
argument.no_color false

integ.test_directory ./test/data
integ.log ./test/data/log

integ.target.online false
integ.target.relative_data_dir false
integ.target.chroot false
integ.target.run.none false
integ.target.run.open false
integ.target.run.password false
integ.target.run.cookie false
integ.target.run.muiltipe false
integ.target.run.socket false
integ.target.run.scookie false
integ.target.run.ptrace false
integ.target.run.all false

# The following are less testing framework attributes that aren't as commonly
# reconfigured.
#
# msg.*
#   Rendered text.
#
# target.*
#   Attributes of the integration testing targets. This helps determine what is
#   ran when the user runs with '--target'.

msg.help
|Usage runTests.py [OPTION]
|Runs tests for the stem library.
|
|  -a, --all             runs unit, integ, and style checks (same as '-uis')
|  -u, --unit            runs unit tests
|  -i, --integ           runs integration tests
|  -s, --style           runs style checker
|  -t, --target TARGET   comma separated list of extra targets for integ tests
|      --test TEST_NAME  only run tests modules matching the given name prefix
|      --python3         runs tests against a 2to3 conversion of the codebase
|  -l, --log RUNLEVEL    includes logging output with test results, runlevels:
|                          TRACE, DEBUG, INFO, NOTICE, WARN, ERROR
|      --tor PATH        custom tor binary to run testing against
|  -c, --config PATH     path to a custom test configuration
|  -h, --help            presents this help
|
|  Examples:
|   run_tests.py --unit --integ
|     Run unit and integraiton tests.
|
|   run_tests.py --integ --target RUN_ALL
|     Run integraion tests against all tor configurations.
|
|   run_tests.py --integ --test test.integ.util
|     Only run integration tests for the util modules.
|
|  Integration targets:

 ##################
# CATEGORY: TARGET #
 ##################

# Configuration option with which the target is synced. If an option is set via
# both the config and '--target' argument then the argument takes precedence.

target.config ONLINE       => integ.target.online
target.config RELATIVE     => integ.target.relative_data_dir
target.config CHROOT       => integ.target.chroot
target.config RUN_NONE     => integ.target.run.none
target.config RUN_OPEN     => integ.target.run.open
target.config RUN_PASSWORD => integ.target.run.password
target.config RUN_COOKIE   => integ.target.run.cookie
target.config RUN_MULTIPLE => integ.target.run.multiple
target.config RUN_SOCKET   => integ.target.run.socket
target.config RUN_SCOOKIE  => integ.target.run.scookie
target.config RUN_PTRACE   => integ.target.run.ptrace
target.config RUN_ALL      => integ.target.run.all

# The '--help' description of the target.

target.description ONLINE       => Includes tests that require network activity.
target.description RELATIVE     => Uses a relative path for tor's data directory.
target.description CHROOT       => Simulates a chroot setup.
target.description RUN_NONE     => Configuration without a way for controllers to connect.
target.description RUN_OPEN     => Configuration with an open control port (default).
target.description RUN_PASSWORD => Configuration with password authentication.
target.description RUN_COOKIE   => Configuration with an authentication cookie.
target.description RUN_MULTIPLE => Configuration with both password and cookie authentication.
target.description RUN_SOCKET   => Configuration with a control socket.
target.description RUN_SCOOKIE  => Configuration with a control socket and authentication cookie.
target.description RUN_PTRACE   => Configuration with an open control port and 'DisableDebuggerAttachment 0'
target.description RUN_ALL      => Runs integration tests for all connection configurations.

# Version that we need to run the target. These need to match an enumeration of
# stem.version.Requirement.

target.prereq RUN_PTRACE => TORRC_DISABLE_DEBUGGER_ATTACHMENT

# Torrc configuration options included with the target. Having this option set
# means that each of these targets will have a dedicated integration test run.

target.torrc RUN_NONE     => 
target.torrc RUN_OPEN     => PORT
target.torrc RUN_PASSWORD => PORT, PASSWORD
target.torrc RUN_COOKIE   => PORT, COOKIE
target.torrc RUN_MULTIPLE => PORT, PASSWORD, COOKIE
target.torrc RUN_SOCKET   => SOCKET
target.torrc RUN_SCOOKIE  => SOCKET, COOKIE
target.torrc RUN_PTRACE   => PORT, PTRACE

# False positives from pyflakes. These are mappings between the path and the
# issue.

pyflakes.ignore stem/prereq.py => 'RSA' imported but unused
pyflakes.ignore stem/prereq.py => 'asn1' imported but unused
pyflakes.ignore stem/prereq.py => 'long_to_bytes' imported but unused
pyflakes.ignore stem/descriptor/__init__.py => redefinition of unused 'OrderedDict' from line 60
pyflakes.ignore stem/util/str_tools.py => redefinition of function '_to_bytes_impl' from line 51
pyflakes.ignore stem/util/str_tools.py => redefinition of function '_to_unicode_impl' from line 57
pyflakes.ignore test/mocking.py => undefined name 'builtins'
pyflakes.ignore test/unit/response/events.py => 'from stem import *' used; unable to detect undefined names

