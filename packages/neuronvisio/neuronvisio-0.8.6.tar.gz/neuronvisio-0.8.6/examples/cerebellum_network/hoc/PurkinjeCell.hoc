
//  ******************************************************
//
//     File generated by: neuroConstruct v1.6.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate PurkinjeCell

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target

public reference, type, description, name
strdef reference, type, description, name

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group
public main_dends
objref main_dends

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create AxonSec
public AxonSec
create DendRootSec
public DendRootSec
create DendSec1
public DendSec1
create DendSec2
public DendSec2
create DendSec3
public DendSec3
create Dend_4_Sec
public Dend_4_Sec
create Dend_5_Sec
public Dend_5_Sec
create Dend_6_Sec
public Dend_6_Sec
create Dend_7_Sec
public Dend_7_Sec
create Dend_8_Sec
public Dend_8_Sec
create Dend_9_Sec
public Dend_9_Sec
create Dend_10_Sec
public Dend_10_Sec
create Dend_11_Sec
public Dend_11_Sec
create Dend_12_Sec
public Dend_12_Sec
create Dend_13_Sec
public Dend_13_Sec
create Dend_14_Sec
public Dend_14_Sec
create Dend_15_Sec
public Dend_15_Sec
create Dend_16_Sec
public Dend_16_Sec
create Dend_17_Sec
public Dend_17_Sec
create Dend_18_Sec
public Dend_18_Sec
create Dend_19_Sec
public Dend_19_Sec
create Dend_20_Sec
public Dend_20_Sec
create Dend_21_Sec
public Dend_21_Sec
create Dend_22_Sec
public Dend_22_Sec
create Dend_23_Sec
public Dend_23_Sec
create Dend_24_Sec
public Dend_24_Sec
create Dend_25_Sec
public Dend_25_Sec
create Dend_26_Sec
public Dend_26_Sec
create Dend_27_Sec
public Dend_27_Sec
create Dend_28_Sec
public Dend_28_Sec
create Dend_29_Sec
public Dend_29_Sec
create Dend_30_Sec
public Dend_30_Sec
create Dend_31_Sec
public Dend_31_Sec
create Dend_32_Sec
public Dend_32_Sec
create Dend_33_Sec
public Dend_33_Sec
create Dend_34_Sec
public Dend_34_Sec
create Dend_35_Sec
public Dend_35_Sec
create Dend_36_Sec
public Dend_36_Sec
create Dend_37_Sec
public Dend_37_Sec
create Dend_38_Sec
public Dend_38_Sec
create Dend_39_Sec
public Dend_39_Sec

proc topol() {
    connect AxonSec(0), Soma(0.5)
    connect DendRootSec(0), Soma(0.5)
    connect DendSec1(0), DendRootSec(1.0)
    connect DendSec2(0), DendRootSec(1.0)
    connect DendSec3(0), DendRootSec(1.0)
    connect Dend_4_Sec(0), DendSec1(1.0)
    connect Dend_5_Sec(0), DendSec1(1.0)
    connect Dend_6_Sec(0), DendSec1(1.0)
    connect Dend_7_Sec(0), DendSec2(1.0)
    connect Dend_8_Sec(0), DendSec2(1.0)
    connect Dend_9_Sec(0), DendSec2(1.0)
    connect Dend_10_Sec(0), DendSec3(1.0)
    connect Dend_11_Sec(0), DendSec3(1.0)
    connect Dend_12_Sec(0), DendSec3(1.0)
    connect Dend_13_Sec(0), Dend_4_Sec(1.0)
    connect Dend_14_Sec(0), Dend_4_Sec(1.0)
    connect Dend_15_Sec(0), Dend_4_Sec(1.0)
    connect Dend_16_Sec(0), Dend_5_Sec(1.0)
    connect Dend_17_Sec(0), Dend_5_Sec(1.0)
    connect Dend_18_Sec(0), Dend_5_Sec(1.0)
    connect Dend_19_Sec(0), Dend_6_Sec(1.0)
    connect Dend_20_Sec(0), Dend_6_Sec(1.0)
    connect Dend_21_Sec(0), Dend_6_Sec(1.0)
    connect Dend_22_Sec(0), Dend_7_Sec(1.0)
    connect Dend_23_Sec(0), Dend_7_Sec(1.0)
    connect Dend_24_Sec(0), Dend_7_Sec(1.0)
    connect Dend_25_Sec(0), Dend_8_Sec(1.0)
    connect Dend_26_Sec(0), Dend_8_Sec(1.0)
    connect Dend_27_Sec(0), Dend_8_Sec(1.0)
    connect Dend_28_Sec(0), Dend_9_Sec(1.0)
    connect Dend_29_Sec(0), Dend_9_Sec(1.0)
    connect Dend_30_Sec(0), Dend_9_Sec(1.0)
    connect Dend_31_Sec(0), Dend_10_Sec(1.0)
    connect Dend_32_Sec(0), Dend_10_Sec(1.0)
    connect Dend_33_Sec(0), Dend_10_Sec(1.0)
    connect Dend_34_Sec(0), Dend_11_Sec(1.0)
    connect Dend_35_Sec(0), Dend_11_Sec(1.0)
    connect Dend_36_Sec(0), Dend_11_Sec(1.0)
    connect Dend_37_Sec(0), Dend_12_Sec(1.0)
    connect Dend_38_Sec(0), Dend_12_Sec(1.0)
    connect Dend_39_Sec(0), Dend_12_Sec(1.0)
    basic_shape()
}

proc basic_shape() {
    Soma {pt3dclear() pt3dadd(0.0, -15.0, 0.0, 30.0) pt3dadd(0.0, 15.0, 0.0, 30.0)}
    AxonSec {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 2.0) pt3dadd(0.0, -140.0, 0.0, 2.0)}
    DendRootSec {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 3.0) pt3dadd(0.0, 30.0, 0.0, 3.0)}
    DendSec1 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, 0.0, 3.0)}
    DendSec2 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, -40.0, 3.0)}
    DendSec3 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, 40.0, 3.0)}
    Dend_4_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 80.0, -10.0, 1.8000001)}
    Dend_5_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 80.0, 10.0, 1.8000001)}
    Dend_6_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 85.0, 0.0, 1.8000001)}
    Dend_7_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 70.0, -50.0, 1.8000001)}
    Dend_8_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 70.0, -30.0, 1.8000001)}
    Dend_9_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 75.0, -40.0, 1.8000001)}
    Dend_10_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 70.0, 30.0, 1.8000001)}
    Dend_11_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 70.0, 50.0, 1.8000001)}
    Dend_12_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 75.0, 40.0, 1.8000001)}
    Dend_13_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(5.0, 130.0, -24.0, 1.08)}
    Dend_14_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(0.0, 130.0, -10.0, 1.08)}
    Dend_15_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(-5.0, 130.0, 4.0, 1.08)}
    Dend_16_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(5.0, 130.0, -4.0, 1.08)}
    Dend_17_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(0.0, 130.0, 10.0, 1.08)}
    Dend_18_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(-5.0, 130.0, 24.0, 1.08)}
    Dend_19_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(5.0, 135.0, -14.0, 1.08)}
    Dend_20_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(0.0, 135.0, 0.0, 1.08)}
    Dend_21_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(-5.0, 135.0, 14.0, 1.08)}
    Dend_22_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(5.0, 120.0, -64.0, 1.08)}
    Dend_23_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(0.0, 120.0, -50.0, 1.08)}
    Dend_24_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(-5.0, 120.0, -36.0, 1.08)}
    Dend_25_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(5.0, 120.0, -44.0, 1.08)}
    Dend_26_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(0.0, 120.0, -30.0, 1.08)}
    Dend_27_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(-5.0, 120.0, -16.0, 1.08)}
    Dend_28_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(5.0, 125.0, -54.0, 1.08)}
    Dend_29_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(0.0, 125.0, -40.0, 1.08)}
    Dend_30_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(-5.0, 125.0, -26.0, 1.08)}
    Dend_31_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(5.0, 120.0, 16.0, 1.08)}
    Dend_32_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(0.0, 120.0, 30.0, 1.08)}
    Dend_33_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(-5.0, 120.0, 44.0, 1.08)}
    Dend_34_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(5.0, 120.0, 36.0, 1.08)}
    Dend_35_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(0.0, 120.0, 50.0, 1.08)}
    Dend_36_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(-5.0, 120.0, 64.0, 1.08)}
    Dend_37_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(5.0, 125.0, 26.0, 1.08)}
    Dend_38_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(0.0, 125.0, 40.0, 1.08)}
    Dend_39_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(-5.0, 125.0, 54.0, 1.08)}
}

proc subsets() { local i

    all = new SectionList()
subsets_extra_0()
subsets_extra_1()
}

proc subsets_extra_0(){


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    AxonSec axon_group.append()


    dendrite_group = new SectionList()

    DendRootSec dendrite_group.append()
    DendSec1 dendrite_group.append()
    DendSec2 dendrite_group.append()
    DendSec3 dendrite_group.append()
    Dend_4_Sec dendrite_group.append()
    Dend_5_Sec dendrite_group.append()
    Dend_6_Sec dendrite_group.append()
    Dend_7_Sec dendrite_group.append()
    Dend_8_Sec dendrite_group.append()
    Dend_9_Sec dendrite_group.append()
    Dend_10_Sec dendrite_group.append()
    Dend_11_Sec dendrite_group.append()
    Dend_12_Sec dendrite_group.append()
    Dend_13_Sec dendrite_group.append()
    Dend_14_Sec dendrite_group.append()
    Dend_15_Sec dendrite_group.append()
    Dend_16_Sec dendrite_group.append()
    Dend_17_Sec dendrite_group.append()
    Dend_18_Sec dendrite_group.append()
    Dend_19_Sec dendrite_group.append()
    Dend_20_Sec dendrite_group.append()
    Dend_21_Sec dendrite_group.append()
    Dend_22_Sec dendrite_group.append()
    Dend_23_Sec dendrite_group.append()
    Dend_24_Sec dendrite_group.append()
    Dend_25_Sec dendrite_group.append()
    Dend_26_Sec dendrite_group.append()
    Dend_27_Sec dendrite_group.append()
    Dend_28_Sec dendrite_group.append()
    Dend_29_Sec dendrite_group.append()
    Dend_30_Sec dendrite_group.append()
    Dend_31_Sec dendrite_group.append()
    Dend_32_Sec dendrite_group.append()
    Dend_33_Sec dendrite_group.append()
    Dend_34_Sec dendrite_group.append()
    Dend_35_Sec dendrite_group.append()
    Dend_36_Sec dendrite_group.append()
    Dend_37_Sec dendrite_group.append()
    Dend_38_Sec dendrite_group.append()
    Dend_39_Sec dendrite_group.append()


    main_dends = new SectionList()

    Dend_13_Sec main_dends.append()
    Dend_14_Sec main_dends.append()
    Dend_15_Sec main_dends.append()
    Dend_16_Sec main_dends.append()
    Dend_17_Sec main_dends.append()
    Dend_18_Sec main_dends.append()
    Dend_19_Sec main_dends.append()
    Dend_20_Sec main_dends.append()
    Dend_21_Sec main_dends.append()
    Dend_22_Sec main_dends.append()
    Dend_23_Sec main_dends.append()
    Dend_24_Sec main_dends.append()
    Dend_25_Sec main_dends.append()
    Dend_26_Sec main_dends.append()
    Dend_27_Sec main_dends.append()
    Dend_28_Sec main_dends.append()
    Dend_29_Sec main_dends.append()
    Dend_30_Sec main_dends.append()
    Dend_31_Sec main_dends.append()
    Dend_32_Sec main_dends.append()
    Dend_33_Sec main_dends.append()
    Dend_34_Sec main_dends.append()
    Dend_35_Sec main_dends.append()
    Dend_36_Sec main_dends.append()
    Dend_37_Sec main_dends.append()
    Dend_38_Sec main_dends.append()
    Dend_39_Sec main_dends.append()


    Soma all.append()
    AxonSec all.append()
    DendRootSec all.append()
    DendSec1 all.append()
    DendSec2 all.append()
    DendSec3 all.append()
    Dend_4_Sec all.append()
    Dend_5_Sec all.append()
    Dend_6_Sec all.append()
    Dend_7_Sec all.append()
    Dend_8_Sec all.append()
    Dend_9_Sec all.append()
    Dend_10_Sec all.append()
    Dend_11_Sec all.append()
    Dend_12_Sec all.append()
    Dend_13_Sec all.append()
    Dend_14_Sec all.append()
    Dend_15_Sec all.append()
    Dend_16_Sec all.append()
    Dend_17_Sec all.append()
    Dend_18_Sec all.append()
    Dend_19_Sec all.append()
}

proc subsets_extra_1(){
    Dend_20_Sec all.append()
    Dend_21_Sec all.append()
    Dend_22_Sec all.append()
    Dend_23_Sec all.append()
    Dend_24_Sec all.append()
    Dend_25_Sec all.append()
    Dend_26_Sec all.append()
    Dend_27_Sec all.append()
    Dend_28_Sec all.append()
    Dend_29_Sec all.append()
    Dend_30_Sec all.append()
    Dend_31_Sec all.append()
    Dend_32_Sec all.append()
    Dend_33_Sec all.append()
    Dend_34_Sec all.append()
    Dend_35_Sec all.append()
    Dend_36_Sec all.append()
    Dend_37_Sec all.append()
    Dend_38_Sec all.append()
    Dend_39_Sec all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

    forsec soma_group {         insert KConductance  { gmax_KConductance = 0.036 }          ek = -77.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_group {         insert NaConductance  { gmax_NaConductance = 0.12 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_group {         insert PassiveCond  { gmax_PassiveCond = 3.0E-4 }  
    }

    forsec axon_group {         insert NaConductance  { gmax_NaConductance = 0.12 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert KConductance  { gmax_KConductance = 0.036 }          ek = -77.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert PassiveCond  { gmax_PassiveCond = 3.0E-4 }  
    }

    forsec dendrite_group {         insert NaConductance  { gmax_NaConductance = 0.12 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert PassiveCond  { gmax_PassiveCond = 3.0E-4 }  
    }

    forsec dendrite_group {         insert KConductance  { gmax_KConductance = 0.036 }          ek = -77.0  // note: this is val from ChannelML, may be reset later

    }

}

proc geom_nseg() {
    AxonSec nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon

    Soma $o2 = new NetCon(&v(1), $o1)
}

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate PurkinjeCell

