
Comment configurer pywws pour poster des messages sur Twitter
*************************************************************

1. Fichiers prérequis.

   * Python 2.5+ - http://python.org/ (Note: Python 3 n'est pas
     supporté.)

   * tweepy - http://code.google.com/p/tweepy/

   * simplejson - http://pypi.python.org/pypi/simplejson/

   Note: simplejson est inclu dans Python 2.6+

2. Créer un compte Twitter.

   Vous pouvez poster des mise-à-jour météo sur votre compte Twitter
   'normal', mais je crois qu'il est préférable d'avoir un compte
   distinct réservé à vos relevés météo. Ce qui pourrait être fort
   utile à une perspmme vivant dans votre voisinage, mais ne
   souhaitant pas savoir ce que vous avez pris au petit déjeuner.

3. Autoriser pywws à poster sur votre compte Twitter.

   Assurez vous qu'aucune autre instance de pywws ne fonctionne, puis
   exécutez le programme "TwitterAuth":

      python TwitterAuth.py /data/weather

   (Remplacez "/data/weather" par votre répertoire de données.)

   Ceci ouvrira une fenêtre de navigation (ou vous donnera une URL à
   copier dans votre navigateur) où vous pourrez vous connecter à
   votre compte Twitter et autoriser pywws à poster. Votre navigateur
   vous affichera alors un nombre à 7 chiffre que vous aurez besoin de
   copier dans le programme "TwitterAuth". Si tout s'est bien déroulé,
   votre fichier weather.ini devrait comporter une nouvelle section
   "[twitter]" avec les entrées "secret" et "key". (Ne révéler à
   quiconque.)

4. Ajouter vos données de localisation (optionel).

   Éditez cotre fichier weather.ini et ajoutez les entrées "latitude"
   et "longitude" à votre section  "[twitter]". Par exemple:

      [twitter]
      secret = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      latitude = 51.501
      longitude = -0.142

5. Créer un gabarit.

   Les message pour Twitter sont générés en utilisant un gabarit, tout
   comme sont créés les fichiers à téléverser sur votre site web.
   Copiez le gabarit exemple 'tweet.txt' dans votre dossier de
   gabarit, puis testez-le:

      python pywws/Template.py /data/weather ~/weather/templates/tweet.txt tweet.txt
      cat tweet.txt

   (Remplacez "/data/weather" et "~/weather/templates" par vos
   répertoires de données et de gabarits.) Si vous avez besoin de
   modifier le gabarit (ex. pour changer les unités de mesure ou la
   langue utilisée) vous pouvez l'éditer maintenant ou ultérieurement.

6. Poster votre premier Tweet météo.

   Maintenant que tout est pret pour "pywws.ToTwitter" vous pouvez
   exécuter:

      python pywws/ToTwitter.py /data/weather tweet.txt

   Si celà fonctionne, Votre nouveau compte Twitter aura posté son
   premier relevé météo. (Vous devriez supprimer le fichier tweet.txt
   maintenant.)

7. Ajouter les envois sur Twitter à vos tâche horaire.

   Éditez votre fichier weather.ini et modifiez la section "[hourly]".
   Par exemple:

      [hourly]
      services = []
      twitter = ['tweet.txt']
      plot = ['7days.png.xml', '24hrs.png.xml', 'rose_12hrs.png.xml']
      text = ['24hrs.txt', '6hrs.txt', '7days.txt', 'allmonths.txt ']

   Vous pourriez tout aussi bien choisir de plutôt modifier les
   sections "[logged]", "[12 hourly]" ou "[daily]", mais je crois que
   "[hourly]" est le plus approprié pour les envois sur Twitter.

   Commentaires ou questions? SVP, souscrivez à la liste d'envoi de
   pywws http://groups.google.com/group/pywws et laissez-le nous
   savoir.
