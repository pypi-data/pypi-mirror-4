
//  ******************************************************
//
//     File generated by: neuroConstruct v1.6.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate GranuleCell

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target

public reference, type, description, name
strdef reference, type, description, name

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public ascending_segment
objref ascending_segment
public parallel_fibers
objref parallel_fibers

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create mainAxonSection
public mainAxonSection
create parallelFiberPos
public parallelFiberPos
create parallelFiberNeg
public parallelFiberNeg

proc topol() {
    connect mainAxonSection(0), Soma(0.5)
    connect parallelFiberPos(0), mainAxonSection(1.0)
    connect parallelFiberNeg(0), mainAxonSection(1.0)
    basic_shape()
}

proc basic_shape() {
    Soma {pt3dclear() pt3dadd(0.0, -4.0, 0.0, 8.0) pt3dadd(0.0, 4.0, 0.0, 8.0)}
    mainAxonSection {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 1.2) pt3dadd(0.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dclear() pt3dadd(0.0, 140.0, 0.0, 1.2) pt3dadd(10.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dclear() pt3dadd(0.0, 140.0, 0.0, 1.2) pt3dadd(-10.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(20.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-20.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(30.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-30.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(40.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-40.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(50.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-50.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(60.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-60.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(70.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-70.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(80.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-80.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(90.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-90.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(100.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-100.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(110.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-110.0, 140.0, 0.0, 1.2)}
    parallelFiberPos {pt3dadd(120.0, 140.0, 0.0, 1.2)}
    parallelFiberNeg {pt3dadd(-120.0, 140.0, 0.0, 1.2)}
}

proc subsets() { local i

    all = new SectionList()


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    mainAxonSection axon_group.append()
    parallelFiberPos axon_group.append()
    parallelFiberNeg axon_group.append()


    ascending_segment = new SectionList()

    mainAxonSection ascending_segment.append()


    parallel_fibers = new SectionList()

    parallelFiberPos parallel_fibers.append()
    parallelFiberNeg parallel_fibers.append()


    Soma all.append()
    mainAxonSection all.append()
    parallelFiberPos all.append()
    parallelFiberNeg all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 20.0

    forsec all {         insert KConductance  { gmax_KConductance = 0.036 }          ek = -77.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_group {         insert PassiveCond  { gmax_PassiveCond = 3.0E-4 }  
    }

    forsec soma_group {         insert NaConductance  { gmax_NaConductance = 0.12 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert NaConductance  { gmax_NaConductance = 0.12 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert PassiveCond  { gmax_PassiveCond = 3.0E-4 }  
    }

}

proc geom_nseg() {
    mainAxonSection nseg = 2
    parallelFiberPos nseg = 2
    parallelFiberNeg nseg = 2
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon

    Soma $o2 = new NetCon(&v(1), $o1)
}

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate GranuleCell

