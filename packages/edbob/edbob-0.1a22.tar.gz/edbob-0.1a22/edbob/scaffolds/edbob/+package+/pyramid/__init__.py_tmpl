#!/usr/bin/env python

"""
``{{package}}.pyramid`` -- Pyramid Application
"""

import os.path

from pyramid.config import Configurator
from pyramid.authentication import SessionAuthenticationPolicy

import edbob
from edbob.pyramid.auth import EdbobAuthorizationPolicy


def main(global_config, **settings):
    """
    This function returns a Pyramid WSGI application.
    """

    # Here you can insert any code to modify the ``settings`` dict.
    # You can:
    # * Add additional keys to serve as constants or "global variables" in the
    #   application.
    # * Set default values for settings that may have been omitted.
    # * Override settings that you don't want the user to change.
    # * Raise an exception if a setting is missing or invalid.
    # * Convert values from strings to their intended type.

    settings['mako.directories'] = [
        '{{package}}.pyramid:templates',
        'edbob.pyramid:templates',
        ]
    
    config = Configurator(settings=settings)

    # Configure edbob
    edbob.init('{{package}}', os.path.abspath(settings['edbob.config']))

    # Configure session
    config.include('pyramid_beaker')

    # Configure auth
    config.set_authentication_policy(SessionAuthenticationPolicy())
    config.set_authorization_policy(EdbobAuthorizationPolicy())

    # Include "core" stuff provided by edbob.
    config.include('edbob.pyramid')

    # Additional config is defined elsewhere within {{project}}.  This includes
    # incorporating the various views etc. exposed by other packages.
    config.include('{{package}}.pyramid.static')
    config.include('{{package}}.pyramid.subscribers')
    config.include('{{package}}.pyramid.views')

    return config.make_wsgi_app()
