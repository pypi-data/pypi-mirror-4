#!/bin/bash
### BEGIN INIT INFO
# Provides:          %(script_name)s
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Firewall
# Description:       Firewall rules for LAMP web-server
### END INIT INFO


modprobe nf_conntrack
modprobe nf_conntrack_ftp

IPT="/sbin/iptables"
INIT="/etc/init.d/fail2ban"


function Fail2BanRestart()
{
	if [ -f "$INIT" ]; then
		$INIT restart 1> /dev/null
	fi
}


function Firewall_Stop()
{
        flush_tables;

        echo "Stoping Firewall ..."

        $IPT -t filter -P INPUT ACCEPT
        $IPT -t filter -P OUTPUT ACCEPT
        $IPT -t filter -P FORWARD ACCEPT

        Fail2BanRestart;
        echo ""
        echo "done"
}


function flush_tables()
{
        $IPT -F
        $IPT -t nat -F
        $IPT -t filter -F
        $IPT -t mangle -F

        $IPT -X
        $IPT -t nat -X
        $IPT -t mangle -X

        echo ""
        echo "done"
}


function flush_tables()
{
        $IPT -F
        $IPT -t nat -F
        $IPT -t filter -F
        $IPT -t mangle -F

        $IPT -X
        $IPT -t nat -X
        $IPT -t mangle -X
        $IPT -t filter -X
}


function Firewall_Start()
{

        echo "Starting Firewall ..."

        flush_tables;

        modprobe ip_tables

        echo 1 > /proc/sys/net/ipv4/ip_forward
        echo 0 > /proc/sys/net/ipv4/ip_forward
        for i in /proc/sys/net/ipv4/conf/*/rp_filter; do echo 1 > $i; done
        echo 1 > /proc/sys/net/ipv4/tcp_syncookies
        echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all
        echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
        for i in /proc/sys/net/ipv4/conf/*/log_martians; do echo 1 > $i; done
        echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
        for i in /proc/sys/net/ipv4/conf/*/accept_redirects; do echo 0 > $i; done
        for i in /proc/sys/net/ipv4/conf/*/send_redirects; do echo 0 > $i; done
        for i in /proc/sys/net/ipv4/conf/*/accept_source_route; do echo 0 > $i; done
        for i in /proc/sys/net/ipv4/conf/*/proxy_arp; do echo 0 > $i; done
        for i in /proc/sys/net/ipv4/conf/*/secure_redirects; do echo 1 > $i; done
        for i in /proc/sys/net/ipv4/conf/*/bootp_relay; do echo 0 > $i; done


        $IPT -P INPUT DROP
        $IPT -P OUTPUT ACCEPT
        $IPT -P FORWARD DROP

        ip6tables -P INPUT  DROP
        ip6tables -P OUTPUT  DROP
        ip6tables -P FORWARD  DROP
        ip6tables -A INPUT  -i eth0 -j DROP
        ip6tables -A FORWARD -j DROP


        $IPT -A INPUT -i lo -j ACCEPT
        $IPT -A OUTPUT -o lo -j ACCEPT

        $IPT -A INPUT -p icmp --icmp-type timestamp-request -j DROP
        $IPT -A INPUT -p tcp --tcp-flags ALL NONE -j DROP

        $IPT -A INPUT -p tcp --tcp-flags ALL ALL -j DROP

        $IPT -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
        $IPT -A OUTPUT -p tcp ! --syn -m state --state NEW -j DROP

        $IPT -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
        $IPT -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
        $IPT -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
        $IPT -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
        $IPT -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
        $IPT -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP
        $IPT -A INPUT -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP

        $IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
        $IPT -A INPUT -p tcp --tcp-flags ACK ACK -m state --state ESTABLISHED,RELATED -j ACCEPT
        $IPT -A INPUT -p udp -m state --state ESTABLISHED,RELATED -j ACCEPT
        $IPT -A INPUT -p icmp -m state --state ESTABLISHED,RELATED -j ACCEPT

        $IPT -A OUTPUT -p icmp --icmp-type timestamp-reply -j DROP

        $IPT -A INPUT  --fragment -p ICMP -j DROP
        $IPT -A OUTPUT --fragment -p ICMP -j ACCEPT

        $IPT -A INPUT -m state --state INVALID -j DROP
        $IPT -A FORWARD -m state --state INVALID -j DROP
        $IPT -A OUTPUT -m state --state INVALID -j DROP

        # FTP
        $IPT -A INPUT -p tcp -m state --state NEW --dport 21 -m recent --update --seconds 30 --name ftp -j DROP
        $IPT -A INPUT -p tcp -m state --state NEW --dport 21 -m recent --set --name ftp -j ACCEPT
        $IPT -I INPUT 1 -p tcp -m tcp --dport 21 --tcp-flags FIN,SYN,RST,ACK SYN -m connlimit --connlimit-above 15 --connlimit-mask 16 -j DROP

        # DNS
        $IPT -A INPUT -p udp --dport 53 -m recent --set
        $IPT -A INPUT -p tcp --dport 53 -m recent --set
        $IPT -A INPUT -p udp --dport 53 -m recent --update --seconds 30 --hitcount 10 -j DROP
        $IPT -A INPUT -p tcp --dport 53 -m recent --update --seconds 30 --hitcount 10 -j DROP
        $IPT -A INPUT -m state --state NEW -p udp --dport 53 -j ACCEPT
        $IPT -A INPUT -m state --state NEW -p tcp --dport 53 -j ACCEPT

        # HTTP
        $IPT -A INPUT -m state --state NEW -p tcp --dport 80 -j ACCEPT
        $IPT -I INPUT 1 -p tcp -m tcp --dport 80 --tcp-flags FIN,SYN,RST,ACK SYN -m connlimit --connlimit-above 15 --connlimit-mask 32 -j DROP

        # HTTPS
        $IPT -A INPUT -m state --state NEW -p tcp --dport 443 -j ACCEPT
        $IPT -I INPUT 1 -p tcp -m tcp --dport 443 --tcp-flags FIN,SYN,RST,ACK SYN -m connlimit --connlimit-above 15 --connlimit-mask 32 -j DROP

        # SSH
        $IPT -A INPUT -p tcp --dport 22 -m recent --name ssh --update --seconds 3600 --hitcount 8 -j REJECT
        $IPT -A INPUT -p tcp --dport 22 -m recent --name ssh --set
        $IPT -A INPUT -p tcp --dport 22 -m recent --name ssh ! --rcheck --seconds 15 --hitcount 2 -j REJECT
        $IPT -A INPUT -p tcp --dport 22 -j ACCEPT

        # SMTP
        $IPT -A INPUT -p tcp -m state --state NEW --dport 25 -m recent --update --seconds 30 --name smtp -j DROP
        $IPT -A INPUT -p tcp -m state --state NEW --dport 25 -m recent --set --name smtp -j ACCEPT

        # POP3
        $IPT -A INPUT -p tcp -m state --state NEW --dport 110 -m recent --update --seconds 30 --name pop -j DROP
        $IPT -A INPUT -p tcp -m state --state NEW --dport 110 -m recent --set --name pop -j ACCEPT

        Fail2BanRestart;
}


case "$1" in
start)
    Firewall_Start;
    ;;
stop)
    Firewall_Stop;
    ;;
restart)
    Firewall_Stop; Firewall_Start;
    ;;
*)
    echo "Error options"
esac
