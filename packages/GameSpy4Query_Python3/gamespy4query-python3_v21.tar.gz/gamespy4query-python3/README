----ABOUT-----
This Packagage Contains a "Server" class for querying gamming servers that use the GameSpy4 UT3 protocol. It 
is designed for ARMA2, but works to an extent for other games(see "Constraints" below).

Made for the C5 Gaming (ARMA2 PVP Server and Clan).
Author: sifter
E-Mail: sifter23@aol.com
Website: http://www.c5gaming.com

----Example----

import Server

#Query Gaming Server
myserver = Server.Server('555.55.55.555', 2312)
myserver.query()

#Print Server Information
print(myserver.info) #Print Entire Server Info Dictionary
print(myserver.info['numplayers']  #Print Single Dictionary Value


#Print Player Information
print(myserver.players)
print(myserver.players[0])
print(myserver.players[0].name)


---USE---
Designed using OOP. Standard "Server" class contains "query" method. This method is further incapsulated with other methods, and some of these methods have their own encapsulation, all for easier code improvement (see source).

---CONSTRAINTS----
HAVE NOT GOT SCORE, DEATHS, TEAM INFO FOR PLAYERS WORKING YET FOR ARMA2

This is was designed for ARMA2, but was tested with Minecraft as well. For Minecraft however, it seems it is 
being limited to only one package response on the second send. I suspect this may have to do with the hex code in method "_get_first_package(self)". In method "_more_than_one(self)", you will see the split num is set to 80 for minecraft packages indicating that this is the last package when clearly there should be more player info.

The Player Info and Server Info varies by game. If a problem is found, this is in the parsing of the "self._final_string" this only needs changed in the "_parse_recieved_data(self, data)" method and its child methods.



