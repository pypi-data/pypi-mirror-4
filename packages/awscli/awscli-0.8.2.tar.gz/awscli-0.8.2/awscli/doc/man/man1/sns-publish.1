.TH "SNS-PUBLISH" "1" "March 11, 2013" "0.8" "aws-cli"
.SH NAME
sns-publish \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.SH DESCRIPTION
.sp
The publish action sends a message to all of a topic\(aqs subscribed endpoints.
When a messageId is returned, the message has been saved and Amazon SNS will
attempt to deliver it to the topic\(aqs subscribers shortly. The format of the
outgoing message to each subscribed endpoint depends on the notification
protocol selected.
.SH SYNOPSIS
.sp
.nf
.ft C
aws sns publish
  \-\-message <value>
  \-\-topic\-arn <value>
  [\-\-message\-structure <value>]
  [\-\-subject <value>]
.ft P
.fi
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \fB\-\-message\fP  (string)
The message you want to send to the topic.
.sp
Constraints: Messages must be UTF\-8 encoded strings at most 8 KB in size (8192
bytes, not 8192 characters).
.TP
.B \fB\-\-topic\-arn\fP  (string)
The topic you want to publish to.
.UNINDENT
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \fB\-\-message\-structure\fP  (string)
Optional parameter. It will have one valid value: "json". If this option,
\-\-message is present and set to "json", the value of \-\-message must: be a
syntactically valid JSON object. It must contain at least a top level JSON key
of "default" with a value that is a string. For any other top level key that
matches one of our transport protocols (e.g. "http"), then the corresponding
value (if it is a string) will be used for the message published for that
protocol
.sp
Constraints: Keys in the JSON object that correspond to supported transport
protocols must have simple JSON string values. The values will be parsed
(unescaped) before they are used in outgoing messages. Typically, outbound
notifications are JSON encoded (meaning, the characters will be reescaped for
sending). JSON strings are UTF\-8. Values have a minimum length of 0 (the empty
string, "", is allowed). Values have a maximum length bounded by the overall
message size (so, including multiple protocols may limit message sizes).
Non\-string values will cause the key to be ignored. Keys that do not
correspond to supported transport protocols will be ignored. Duplicate keys
are not allowed. Failure to parse or validate any key or value in the message
will cause the publish call to return an error (no partial delivery).
.TP
.B \fB\-\-subject\fP  (string)
Optional parameter to be used as the "Subject" line of when the message is
delivered to e\-mail endpoints. This field will also be included, if present,
in the standard JSON messages delivered to other endpoints.
.sp
Constraints: Subjects must be ASCII text that begins with a letter, number or
punctuation mark; must not include line breaks or control characters; and must
be less than 100 characters long.
.UNINDENT
.SH COPYRIGHT
2013, Amazon Web Services
.\" Generated by docutils manpage writer.
.
