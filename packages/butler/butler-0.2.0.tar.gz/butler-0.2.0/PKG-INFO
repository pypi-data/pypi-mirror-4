Metadata-Version: 1.0
Name: butler
Version: 0.2.0
Summary: 0MQ based Service Oriented RPC Framework
Home-page: https://github.com/encodingbooth/butler
Author: Manuel Kreutz
Author-email: manuel@140.am
License: MIT
Description: 
        The `butler` framework aims to make building reliable and high-performance service-oriented
        systems easy. The internal communication is done via Ã˜MQ sockets.
        
        Usage
        -----
        
        Start a Router::
        
            import butler
        
            router = butler.Router()
            router.frontend.bind("tcp://*:5555")
            router.backend.bind("tcp://*:5556")
            router.run()
        
        Register a Service Worker by name::
        
            worker = butler.Service('tcp://127.0.0.1:5556', 'api.images')
        
        Expose a function on the Service Worker::
        
            def resize_image(name, size):
                return 'resized image'
        
            worker.register_function(resize_image)
            worker.run()
        
        Or expose all the methods of an object::
        
            class RPCService(object):
                def resize_image(self, name, size):
                    return 'resized image'
        
            worker.register(RPCService())
            worker.run()
        
        Send a request to a registered Service and receive its response::
        
            client = butler.Client('tcp://127.0.0.1:5555').rpc('api.images')
            client.resize_image('test.jpeg', '150x180')
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Clustering
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: System :: Networking
Classifier: Topic :: System :: Systems Administration
Classifier: License :: OSI Approved :: MIT License
