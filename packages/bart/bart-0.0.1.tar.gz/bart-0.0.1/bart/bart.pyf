!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _bart ! in 
    interface  ! in :_bart
        subroutine lightcurve(n,t,fs,iobs,np,rp,ap,ep,tp,php,pop,ip,nld,rld,ild,flux) ! in :_bart:lightcurve.f90
            integer, optional,intent(in),check(len(t)>=n),depend(t) :: n=len(t)
            double precision dimension(n),intent(in) :: t
            double precision intent(in) :: fs
            double precision intent(in) :: iobs
            integer, optional,intent(in),check(len(rp)>=np),depend(rp) :: np=len(rp)
            double precision dimension(np),intent(in) :: rp
            double precision dimension(np),intent(in),depend(np) :: ap
            double precision dimension(np),intent(in),depend(np) :: ep
            double precision dimension(np),intent(in),depend(np) :: tp
            double precision dimension(np),intent(in),depend(np) :: php
            double precision dimension(np),intent(in),depend(np) :: pop
            double precision dimension(np),intent(in),depend(np) :: ip
            integer, optional,intent(in),check(len(rld)>=nld),depend(rld) :: nld=len(rld)
            double precision dimension(nld),intent(in) :: rld
            double precision dimension(nld),intent(in),depend(nld) :: ild
            double precision dimension(n),intent(out),depend(n) :: flux
        end subroutine lightcurve
        subroutine wt2psi(wt,e,psi) ! in :_bart:orbit.f90
            double precision intent(in) :: wt
            double precision intent(in) :: e
            double precision intent(out) :: psi
        end subroutine wt2psi
        subroutine solve_orbit(n,t,e,a,period,phi,pomega,incl,pos) ! in :_bart:orbit.f90
            integer, optional,intent(in),check(len(t)>=n),depend(t) :: n=len(t)
            double precision dimension(n),intent(in) :: t
            double precision intent(in) :: e
            double precision intent(in) :: a
            double precision intent(in) :: period
            double precision intent(in) :: phi
            double precision intent(in) :: pomega
            double precision intent(in) :: incl
            double precision dimension(3,n),intent(out),depend(n) :: pos
        end subroutine solve_orbit
        subroutine occarea(r0,p,b,area) ! in :_bart:ld.f90
            double precision intent(in) :: r0
            double precision intent(in) :: p
            double precision intent(in) :: b
            double precision intent(out) :: area
        end subroutine occarea
        subroutine ldlc(p,nbins,r,ir,n,b,lam) ! in :_bart:ld.f90
            double precision intent(in) :: p
            integer, optional,intent(in),check(len(r)>=nbins),depend(r) :: nbins=len(r)
            double precision dimension(nbins),intent(in) :: r
            double precision dimension(nbins),intent(in),depend(nbins) :: ir
            integer, optional,intent(in),check(len(b)>=n),depend(b) :: n=len(b)
            double precision dimension(n),intent(in) :: b
            double precision dimension(n),intent(out),depend(n) :: lam
        end subroutine ldlc
    end interface 
end python module _bart

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
