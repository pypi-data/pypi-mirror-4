lib:
  fullname: Lib
  description: 'Lib assistant will help you create a custom Python library.'

  dependencies:
  - rpm: ['python-setuptools']

  dependencies_eclipse:
  - rpm: ['eclipse-pydev']

  args:
    name:
      snippet: common_args

    eclipse:
      snippet: common_args

    github:
      snippet: common_args

  files:
    gitignore: &gitignore
      source: python/.gitignore
    dot_project: &dot_project
      source: python/.project
    dot_pydevproject: &dot_pydevproject
      source: python/.pydevproject
    setuppy: &setuppy
      source: python/lib/setup.py
    license: &license
      source: python/lib/LICENSE
    manifestin: &mainfestin
      source: python/lib/MANIFEST.in
    readmerst: &readmerst
      source: python/lib/README.rst

  run:
  - $dirname: dirname $name
  - $basename: basename $name
  - log_i: 'Creating library project $basename in $dirname ...'
  - if ls $name:
    - log_e: '$name already exists, cannot proceed.'
  - cl: mkdir -p $name
  - dda_c: $name
  - cl: cd $name
  - cl: mkdir $basename
  - cl: touch $basename/__init__.py
  - cl: cp *license .
  - cl: cp *manifestin .
  - cl: cp *readmerst .
  - cl: sed -i 's|NAME|$basename|' README.rst
  - cl: cp *setuppy .
  - cl: sed -i 's|NAME|$basename|' setup.py
  - if $eclipse:
    - log_i: 'Registering as Eclipse project ...'
    - cl: cp *dot_project .
    - cl: cp *dot_pydevproject .
    - cl: sed -i 's|NAME|$basename|' .project
    - cl: sed -i 's|NAME|$basename|' .pydevproject
    - cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $name -data $eclipse
    - log_i: 'Registered as Eclipse project ...'
  - cl: cp *gitignore .
  - snippet: git_init_add_commit
  - if defined $github:
    - github: create_and_push
  - log_i: 'Library project $basename in $dirname has been created.'
