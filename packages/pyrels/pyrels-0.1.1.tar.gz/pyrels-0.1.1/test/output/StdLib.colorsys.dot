digraph G {
    overlap=false;

    name3926400 [label="ONE_SIXTH", shape="ellipse"];
    float8618580 [label="float: 0.166666666667", shape="box"];
    name3926240 [label="TWO_THIRD", shape="ellipse"];
    float8618564 [label="float: 0.666666666667", shape="box"];
    name1744448 [label="__all__", shape="ellipse"];
    list3754224 [label="list: | <0> 0|<1> 1|<2> 2|<3> 3|<4> 4|<5> 5", shape="record"];
    str3925320 [label="str: 'rgb_to_yiq'", shape="box"];
    str3925040 [label="str: 'yiq_to_rgb'", shape="box"];
    str3925680 [label="str: 'rgb_to_hls'", shape="box"];
    str3925800 [label="str: 'hls_to_rgb'", shape="box"];
    str3925720 [label="str: 'rgb_to_hsv'", shape="box"];
    str3925920 [label="str: 'hsv_to_rgb'", shape="box"];
    name3925320 [label="rgb_to_yiq", shape="ellipse"];
    function3801648 [label="function: rgb_to_yiq", shape="box"];
    name3806080 [label="_v", shape="ellipse"];
    function3804016 [label="function: _v", shape="box"];
    name1686528 [label="__file__", shape="ellipse"];
    str3801568 [label="str: '/usr/local/lib/python2.5/colorsys.pyc'", shape="box"];
    name3925680 [label="rgb_to_hls", shape="ellipse"];
    function3802928 [label="function: rgb_to_hls", shape="box"];
    name3925720 [label="rgb_to_hsv", shape="ellipse"];
    function3922480 [label="function: rgb_to_hsv", shape="box"];
    name3925920 [label="hsv_to_rgb", shape="ellipse"];
    function3921712 [label="function: hsv_to_rgb", shape="box"];
    name3925040 [label="yiq_to_rgb", shape="ellipse"];
    function3802864 [label="function: yiq_to_rgb", shape="box"];
    name1599392 [label="__name__", shape="ellipse"];
    str3806144 [label="str: 'colorsys'", shape="box"];
    name3925800 [label="hls_to_rgb", shape="ellipse"];
    function3803952 [label="function: hls_to_rgb", shape="box"];
    name1599232 [label="__doc__", shape="ellipse"];
    str8890368 [label="str: 'Conversion functions between RGB and other color systems.\n\nThis modules provides two functions for each color system ABC:\n\n  rgb_to_abc(r, g, b) --> a, b, c\n  abc_to_rgb(a, b, c) --> r, g, b\n\nAll inputs and outputs are triples of floats in the range [0.0...1.0]\n(with the exception of I and Q, which covers a slightly larger range).\nInputs outside the valid range may cause exceptions or invalid outputs.\n\nSupported color systems:\nRGB: Red, Green, Blue components\nYIQ: Luminance, Chrominance (used by composite video signals)\nHLS: Hue, Luminance, Saturation\nHSV: Hue, Saturation, Value\n'", shape="box"];
    name3925840 [label="ONE_THIRD", shape="ellipse"];
    float8618596 [label="float: 0.333333333333", shape="box"];

    list3754224:0 -> str3925320 [label=""];
    list3754224:1 -> str3925040 [label=""];
    list3754224:2 -> str3925680 [label=""];
    list3754224:3 -> str3925800 [label=""];
    list3754224:4 -> str3925720 [label=""];
    list3754224:5 -> str3925920 [label=""];
    name3926400 -> float8618580 [label="ref"];
    name3926240 -> float8618564 [label="ref"];
    name1744448 -> list3754224 [label="ref"];
    name3925320 -> function3801648 [label="ref"];
    name3806080 -> function3804016 [label="ref"];
    name1686528 -> str3801568 [label="ref"];
    name3925680 -> function3802928 [label="ref"];
    name3925720 -> function3922480 [label="ref"];
    name3925920 -> function3921712 [label="ref"];
    name3925040 -> function3802864 [label="ref"];
    name1599392 -> str3806144 [label="ref"];
    name3925800 -> function3803952 [label="ref"];
    name1599232 -> str8890368 [label="ref"];
    name3925840 -> float8618596 [label="ref"];

}
