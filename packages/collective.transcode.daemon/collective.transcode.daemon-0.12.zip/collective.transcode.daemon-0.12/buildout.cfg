[buildout]
#extensions =
#    mr.developer
#sources = sources
#auto-checkout = *

extends = ffmpeg.cfg

versions = versions
unzip = true

parts +=
    transcodedaemon
    trialtest
    daemonpy

develop = .
#          src/collective.transcode.recipe

#find-links = http://tovid.googlecode.com/files/tovid-0.33.tar.gz

eggs =
    collective.transcode.recipe
    collective.transcode.daemon
#    feedparser
#    tovid
#For Python 2.4 compatibility uncomment the following
#    hashlib

[transcodedaemon]
recipe = collective.transcode.recipe
listen_host = localhost
listen_port = 8888
videofolder = videos
secret = 1771d99931264d538e75eeb19da7d6a0

# set default_supported_mimetypes (or supported_mimetypes in the profile) to an empty
# list [] to ignore mimetype checks
default_supported_mimetypes = ['application/ogg',\
                                'video/ogg',\
                                'video/x-ogg',\
                                'video/x-ogm+ogg',\
                                'video/flv',\
                                'video/x-flv',\
                                'video/mpeg',\
                                'video/3gpp',\
                                'video/x-ms-wmv',\
                                'video/quicktime',\
                                'video/x-la-asf',\
                                'video/x-ms-asf',\
                                'video/x-msvideo',\
                                'video/mp4',\
                                'video/webm',\
                                'video/x-matroska',\
                                ]

# supported transcoding profiles
profiles = [\
            {'id': 'iso',\
             'cmd': 'scripts/iso %s %s',\
             'supported_mime_types': 'text/xml',\
             'output_mime_type': 'application/octet-stream',\
             'output_extension': 'iso' },\
            {'id': 'jpeg',\
             'cmd': 'scripts/jpeg %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'image/jpeg',\
             'output_extension': 'jpg' },\
            {'id': 'mpeg2',\
             'cmd': 'scripts/mpeg2 %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'video/mpeg', 'output_extension': 'mpg' },\
            {'id': 'mp4-high',\
             'cmd': 'scripts/mp4-high %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'video/mp4', 'output_extension': 'mp4' },\
            {'id': 'mp4-low',\
             'cmd': 'scripts/mp4-low %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'video/mp4', 'output_extension': 'mp4' },\
            {'id': 'webm-high',\
             'cmd': 'scripts/webm-high %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'video/webm', 'output_extension': 'webm' },\
            {'id': 'webm-low',\
             'cmd': 'scripts/webm-low %s %s',\
             'supported_mime_types': ${transcodedaemon:default_supported_mimetypes},\
             'output_mime_type': 'video/webm', 'output_extension': 'webm' },\
            ]

eggs = ${buildout:eggs}

[trialtest]
recipe = zc.recipe.egg:scripts
eggs = ${buildout:eggs}
entry-points = trial=twisted.scripts.trial:run
initialization = import sys; sys.argv[1:] or sys.argv.insert(1, "collective.transcode.daemon.tests")

[daemonpy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = daemonpy
scripts = daemonpy

#[sources]
#collective.transcode.recipe = ${buildout:sources-base}plumi/collective.transcode.recipe.git

[versions]
collective.transcode.recipe = 0.2
Twisted = 11.1.0
pycrypto = 2.4.1
#feedparser = 4.1
#For Python 2.4 compatibility uncomment the following
#hashlib = 20081119
