<dtml-let last_modified="_.DateTime()-14"
          expires="_.DateTime()+7" >
<dtml-call "REQUEST.RESPONSE.setHeader( 'Content-Type', 'text/css' )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Last-Modified', last_modified.toZone('GMT').rfc822() )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Cache-Control', 'max-age=36000, must-revalidate' )">
<dtml-call "REQUEST.RESPONSE.setHeader( 'Expires', expires.toZone('GMT').rfc822() )" >
</dtml-let>
 
<dtml-comment> 
Version: CalendarX 0.6.5.
Mod: added a text-decoration: none; definition for <a> tags to be compatible with 
  Plone 2.1.x changes. Does not seem to impact Plone 2.0.5 behavior.
Required: keep the existing 'nameOfActiveSkin' below dtml-with tags around the CSS tags.
Optional: surround CSS tags with these dtml-with tags IF YOU NEED TO.  Only 
  needed for pulling in portal-wide properties from those property sheets.
  See examples in ploneCustom.css using &dtml-property; tags (Plone 2.0.x, deprecated for newer).
   <dtml-with base_properties>   all the styles here for Plone 2  </dtml-with>
   <dtml-with stylesheet_properties>   all the styles here for Plone 1  </dtml-with>
<dtml-with expr="_[nameOfActiveSkin]">
</dtml-with>
</dtml-comment>




a {
    TEXT-DECORATION: none; 
}
DIV.calTabs {
    PADDING-LEFT: 1em; 
    BACKGROUND: none transparent scroll repeat 0% 0%; 
    BORDER-BOTTOM: <dtml-var "getCXAttribute('viewTabsBorderColor')"> 1px solid;
    WHITE-SPACE: nowrap; 
    BORDER-COLLAPSE: collapse;
    MARGIN-TOP: 5px;
}

DIV.calTabs A {
    BORDER-RIGHT: <dtml-var "getCXAttribute('viewTabsBorderColor')"> 1px solid; 
    PADDING-RIGHT: 2em; 
    BORDER-TOP: <dtml-var "getCXAttribute('viewTabsBorderColor')"> 1px solid; 
    PADDING-LEFT: 2em; 
    FONT-WEIGHT: normal; 
    FONT-FAMILY: <dtml-var "getCXAttribute('viewFontFamily')">; 
    FONT-SIZE: <dtml-var "getCXAttribute('viewFontBaseSize')">; 
    BACKGROUND: none transparent scroll repeat 0% 0%; 
    PADDING-BOTTOM: 0em; 
    TEXT-TRANSFORM: lowercase; 
    BORDER-LEFT: <dtml-var "getCXAttribute('viewTabsBorderColor')"> 1px solid; 
    COLOR: <dtml-var "getCXAttribute('viewTabsFontColor')">;
    MARGIN-RIGHT: 0.5em; 
    PADDING-TOP: 0em; 
    BORDER-BOTTOM: <dtml-var "getCXAttribute('viewTabsBorderColor')"> 1px solid
}
DIV.calTabs A.selected {
    FONT-WEIGHT: normal; 
    BACKGROUND: <dtml-var "getCXAttribute('viewTabsBackgroundColor')">; 
    COLOR: <dtml-var "getCXAttribute('viewTabsFontColor')">;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('viewTabsBackgroundColor')"> 1px solid
}
DIV.calTabs A:hover {
    COLOR: <dtml-var "getCXAttribute('viewTabsFontColor')">; 
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('viewTabsBackgroundColor')">;
    BACKGROUND: <dtml-var "getCXAttribute('viewTabsBackgroundColor')">; 
}

TABLE.caltabs {
    WIDTH: 95%;
    FONT-FAMILY: <dtml-var "getCXAttribute('subjectFontFamily')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    MARGIN-BOTTOM: 15px;
}
TABLE.caltabs TH {
    COLOR: #FFA500;
    PADDING-TOP: 0px;
    PADDING-BOTTOM: 0px;
    FONT-WEIGHT: normal;
    TEXT-ALIGN: left;
}
TABLE.caltabs TD.bar {
    HEIGHT: 10px;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('subjectBarBackgroundColor')">;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;   
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-ALIGN: right;
    PADDING-RIGHT: 20px;
}
TABLE.caltabs TD.bar A {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.bar A:hover {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.bar2 {
    HEIGHT: 10px;
    BACKGROUND-COLOR: #FFFFFF;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    COLOR: #000000;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-ALIGN: left;
    PADDING-LEFT: 20px;
}
TABLE.caltabs TD.bar2 A {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.bar2 A:hover {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barleft {
    HEIGHT: 10px;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('subjectBarBackgroundColor')">;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-ALIGN: left;
    PADDING-LEFT: 20px;
}
TABLE.caltabs TD.barleft A {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barleft left:hover {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barleft2 {
    HEIGHT: 10px;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('subjectBarBackgroundColor')">;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-ALIGN: left;
    PADDING-LEFT: 0px;
}
TABLE.caltabs TD.barleft2 A {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barleft2 A:hover {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: underline;
}
TABLE.caltabs TD.barright2 {
    HEIGHT: 10px;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('subjectBarBackgroundColor')">;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBackgroundColor')"> 1px solid;
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-ALIGN: right;
    PADDING-RIGHT: 0px;
}
TABLE.caltabs TD.barright2 A {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barright2 A:hover {
    COLOR: <dtml-var "getCXAttribute('subjectBarFontColor')">;
    FONT-SIZE: <dtml-var "getCXAttribute('subjectFontSize')">;
    TEXT-DECORATION: underline;
}
TABLE.caltabs span.nowrap{
    WHITE-SPACE: nowrap; 
}
TABLE.caltabs TD.body {
    PADDING: 15px;
    BACKGROUND-COLOR: transparent;
    BORDER-BOTTOM: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-LEFT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
    BORDER-RIGHT: <dtml-var "getCXAttribute('subjectBarBorderColor')"> 1px solid;
}


TABLE.calheader {
    WIDTH: 100%;
    FONT-FAMILY: <dtml-var "getCXAttribute('headerFontFamily')">;
    FONT-SIZE: <dtml-var "getCXAttribute('headerSideFontSize')">;
    MARGIN-BOTTOM: <dtml-var "getCXAttribute('headerMarginBottom')">;
    MARGIN-TOP: <dtml-var "getCXAttribute('headerMarginTop')">;
}
TABLE.calheader TD {
    COLOR: <dtml-var "getCXAttribute('headerFontColor')">;
    PADDING: <dtml-var "getCXAttribute('headerPadding')">;
}
TABLE.calheader TD.center {
    WIDTH: 60%;
    HEIGHT: <dtml-var "getCXAttribute('headerHeight')">;
    VERTICAL-ALIGN: top;
    FONT-WEIGHT: bold;
    FONT-SIZE: <dtml-var "getCXAttribute('headerCenterFontSize')">;
    TEXT-ALIGN: center
}
TABLE.calheader TD.right {
    WIDTH: 20%;
    HEIGHT: <dtml-var "getCXAttribute('headerHeight')">;
    VERTICAL-ALIGN: top;
    FONT-WEIGHT: normal;
    FONT-SIZE: <dtml-var "getCXAttribute('headerSideFontSize')">;
    WHITE-SPACE: nowrap; 
    TEXT-ALIGN: right
}
TABLE.calheader TD.left {
    WIDTH: 20%;
    HEIGHT: <dtml-var "getCXAttribute('headerHeight')">;
    VERTICAL-ALIGN: top;
    FONT-WEIGHT: normal;
    FONT-SIZE: <dtml-var "getCXAttribute('headerSideFontSize')">;
    WHITE-SPACE: nowrap; 
    TEXT-ALIGN: left
}
TABLE.calheader TD.right A {
}
TABLE.calheader TD.left A {
}
TABLE.calheader TD.choosedate {
    HEIGHT: <dtml-var "getCXAttribute('headerHeight')">;
    VERTICAL-ALIGN: top;
    FONT-WEIGHT: normal;
    FONT-SIZE: <dtml-var "getCXAttribute('headerSideFontSize')">;
    WHITE-SPACE: nowrap; 
    TEXT-ALIGN: right
}


TABLE.calall {
    WIDTH: 100%;
    BORDER: <dtml-var "getCXAttribute('continuingOuterBorderColor')"> <dtml-var "getCXAttribute('continuingOuterBorderWidth')"> solid;
    MARGIN-BOTTOM: 5px;
}
TABLE.calall TH {
    COLOR: #FFFFFF;
    TEXT-ALIGN: center;
    FONT-WEIGHT: bold;
    FONT-FAMILY: <dtml-var "getCXAttribute('continuingHeaderFontFamily')">;
    FONT-SIZE: <dtml-var "getCXAttribute('continuingHeaderFontSize')">;
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('continuingHeaderBackgroundColor')">;
    padding: 5px;
    BORDER: <dtml-var "getCXAttribute('continuingHeaderBorderColor')"> <dtml-var "getCXAttribute('continuingHeaderBorderWidth')"> solid;
}
TABLE.calall TR.event {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('continuingRowEventBackgroundColor')">;
}
TABLE.calall TR.noevent {
    BACKGROUND-COLOR: <dtml-var "getCXAttribute('continuingRowNoEventBackgroundColor')">;
}
TABLE.calall TD {
    COLOR: #000000;
    FONT-WEIGHT: normal;
    HEIGHT: <dtml-var "getCXAttribute('continuingRowHeight')">;
    FONT-SIZE: <dtml-var "getCXAttribute('calEventFontSize')">;
    FONT-FAMILY: <dtml-var "getCXAttribute('calEventFontFamily')">;
    VERTICAL-ALIGN: top;
    padding: 5px;
}


DIV.calinfo {
    BORDER-RIGHT: black 1px solid;
    BORDER-LEFT: black 1px solid;
    BORDER-TOP: black 1px solid;
    BORDER-BOTTOM: black 1px solid;
    PADDING-RIGHT: 0.5em;
    PADDING-LEFT: 0.5em;
    PADDING-TOP: 0.5em;
    PADDING-BOTTOM: 0.5em;
    MARGIN-TOP: 2px;
    BACKGROUND-COLOR: #ffffff;
    COLOR: #000000;
    FONT-WEIGHT: normal;
    TEXT-ALIGN: left;
    POSITION: absolute;
    RIGHT: 20%;
    Z-INDEX: 2;
    WIDTH: 20em;
}
DIV.inforow {
    PADDING-BOTTOM: 2px;
    DISPLAY: block;
}

DIV.eventlisting {
    MARGIN-BOTTOM: 4px;
}

A.eventPending {
    COLOR: <dtml-var "getCXAttribute('calEventPendingTextColor')">;
    TEXT-DECORATION: none;
}
A.eventPending:hover {
    COLOR: <dtml-var "getCXAttribute('calEventPendingTextColor')">;
    TEXT-DECORATION: none;
}
A.eventPublished {
    COLOR: <dtml-var "getCXAttribute('calEventPublishedTextColor')">;
    TEXT-DECORATION: none;
}
A.eventPublished:hover {
    COLOR: <dtml-var "getCXAttribute('calEventPublishedTextColor')">;
    TEXT-DECORATION: none;
}
A.eventPrivate {
    COLOR: <dtml-var "getCXAttribute('calEventPrivateTextColor')">;
    TEXT-DECORATION: none;
}
A.eventPrivate:hover {
    COLOR: <dtml-var "getCXAttribute('calEventPrivateTextColor')">;
    TEXT-DECORATION: none;
}
A.eventVisible {
    COLOR: <dtml-var "getCXAttribute('calEventVisibleTextColor')">;
    TEXT-DECORATION: none;
}
A.eventVisible:hover {
    COLOR: <dtml-var "getCXAttribute('calEventVisibleTextColor')">;
    TEXT-DECORATION: none;
}




<dtml-comment> 
Below this point are CSS classes added to show how to colorize the 
  event labels.  Use the A classes for the event labels within the 
  calendar cells, and use the SPAN classes to colorize the Subject
  labels in the Subjectlinks bar at the top of the calendar.  Add 
  your own here when you customize the calendar subjects. This works
  for CSS by EventType too... see the CX_props_eventdisplays properties.
</dtml-comment>

A.event_appointment {
    COLOR: #0000CC;
    TEXT-DECORATION: none;
}
A.event_appointment:hover {
    COLOR: #0000AA;
    TEXT-DECORATION: none;
}
A.event_convention {
    COLOR: #00CC00;
    TEXT-DECORATION: none;
}
A.event_convention:hover {
    COLOR: #00AA00;
    TEXT-DECORATION: none;
}
A.event_meeting {
    COLOR: #CC0000;
    TEXT-DECORATION: none;
}
A.event_meeting:hover {
    COLOR: #AA0000;
    TEXT-DECORATION: none;
}
A.event_socialevent {
    COLOR: #C4C400;
    TEXT-DECORATION: none;
}
A.event_socialevent:hover {
    COLOR: #A1A100;
    TEXT-DECORATION: none;
}
A.event_work {
    COLOR: #000000;
    TEXT-DECORATION: none;
}
A.event_work:hover {
    COLOR: #CCCCCC;
    TEXT-DECORATION: none;
}
A.event_class {
    COLOR: #AA0000;
    TEXT-DECORATION: none;
}
A.event_class:hover {
    COLOR: #C4C400;
    TEXT-DECORATION: none;
}
A.atevent_class {
    COLOR: #C4C400;
    TEXT-DECORATION: none;
}
A.atevent_class:hover {
    COLOR: #A1A100;
    TEXT-DECORATION: none;
}


TABLE.caltabs TD.barright2 SPAN.event_appointment {
    COLOR: #0000CC;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barright2 SPAN.event_convention {
    COLOR: #00CC00;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barright2 SPAN.event_meeting {
    COLOR: #CC0000;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barright2 SPAN.event_socialevent {
    COLOR: #C4C400;
    TEXT-DECORATION: none;
}
TABLE.caltabs TD.barright2 SPAN.event_work {
    COLOR: #000000;
    TEXT-DECORATION: none;
}





