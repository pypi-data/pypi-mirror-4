[buildout]
extends = http://dist.plone.org/release/4.2-latest/versions.cfg
find-links =
    http://dist.plone.org/thirdparty/
    http://dist.plone.org/release/4.2-latest/

develop = .
eggs = collective.mailchimp
parts +=
    instance
    test
    coverage
    report
    pocompile
    i18ndude
    releaser
    update-translations
    find-untranslated

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    collective.mailchimp [test]
environment-vars = zope_i18n_compile_mo_files true


[test]
recipe = collective.xmltestreport
eggs = collective.mailchimp [test]
script = test
defaults = ['--auto-color', '--auto-progress', '--xml']


[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/collective/mailchimp'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']


[pocompile]
recipe = zc.recipe.egg
eggs = zest.pocompile


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[update-translations]
recipe = collective.recipe.template
input = inline:
    domain=collective.mailchimp
    echo "Update translations for $domain"
    if [ ! -f $locales/$domain.pot ]; then
        # Create .pot file if it does not exits yet
        touch $locales/$domain.pot
    fi
    if [ ! -f $locales/de/LC_MESSAGES ]; then
        # Create de/LC_MESSAGES directory if it does not exist yet
        mkdir -p $locales/de/LC_MESSAGES
    fi
    if [ ! -f $locales/de/LC_MESSAGES/$domain.po ]; then
        # Create .po file if it does not exist yet
        touch $locales/de/LC_MESSAGES/$domain.po
    fi
    ${buildout:directory}/bin/i18ndude rebuild-pot --pot $locales/$domain.pot --create $domain ${buildout:directory}/src/$domain/$directory
    ${buildout:directory}/bin/i18ndude sync --pot $locales/$domain.pot $locales/*/LC_MESSAGES/$domain.po
output = ${buildout:directory}/bin/updatetranslations
mode = 755


[find-untranslated]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/i18ndude find-untranslated `find -L src -regex ".*\.[cz]?pt"`
output = ${buildout:directory}/bin/find-untranslated
mode = 755
