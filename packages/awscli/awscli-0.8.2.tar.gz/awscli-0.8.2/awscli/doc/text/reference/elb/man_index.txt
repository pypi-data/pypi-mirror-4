
Elastic Load Balancing
**********************


DESCRIPTION
===========

Elastic Load Balancing is a cost-effective and easy to use web service
to help you improve availability and scalability of your application.
It makes it easy for you to distribute application loads between two
or more EC2 instances. Elastic Load Balancing enables availability
through redundancy and supports traffic growth of your application.

This guide provides detailed information about Elastic Load Balancing
actions, data types, parameters, and errors.

Query requests are HTTP or HTTPS requests that use the HTTP verb GET
or POST and a Query parameter named Action or Operation. Action is
used throughout this documentation, although Operation is supported
for backward compatibility with other AWS Query APIs.

This reference guide is based on the current WSDL, which is available
at: ` <elasticloadbalancing.amazonaws.com/doc/2012-06-01/ElasticLoadBa
lancing.wsdl>`_

For detailed information on constructing a query request using the
actions, data types, and parameters mentioned in this guide, go to
Using the Query API in the *Elastic Load Balancing Developer Guide* .

For detailed information about Elastic Load Balancing features and
their associated API calls, go to Using Elastic Load Balancing in the
*Elastic Load Balancing Developer Guide* .


Available Commands
==================

* apply-security-groups-to-load-balancer

* attach-load-balancer-to-subnets

* configure-health-check

* create-app-cookie-stickiness-policy

* create-lb-cookie-stickiness-policy

* create-load-balancer

* create-load-balancer-listeners

* create-load-balancer-policy

* delete-load-balancer

* delete-load-balancer-listeners

* delete-load-balancer-policy

* deregister-instances-from-load-balancer

* describe-instance-health

* describe-load-balancer-policies

* describe-load-balancer-policy-types

* describe-load-balancers

* detach-load-balancer-from-subnets

* disable-availability-zones-for-load-balancer

* enable-availability-zones-for-load-balancer

* register-instances-with-load-balancer

* set-load-balancer-listener-ssl-certificate

* set-load-balancer-policies-for-backend-server

* set-load-balancer-policies-of-listener
