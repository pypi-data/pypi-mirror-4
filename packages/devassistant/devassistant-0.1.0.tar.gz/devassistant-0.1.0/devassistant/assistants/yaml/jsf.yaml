jsf:
  fullname: Simple JavaServer Faces Project

  dependencies:
  - default:
    - rpm: ['mojarra','jetty-server','jetty-webapp','tomcat-el-2.2-api','tomcat-jsp-2.2-api']
    - rpm: ['tomcat-servlet-3.0-api','mvn-local','maven-war-plugin','maven-shade-plugin']
    - rpm: ['maven-resources-plugin','maven-clean-plugin','junit4']
  - _eclipse:
    - rpm: ['eclipse-jdt','eclipse-m2e-core','eclipse-egit']

  args:
    name:
      flags:
      - -n
      - --name
      help:
        'Name of project to create'

    eclipse:
      flags:
      - -e
      - --eclipse
      help:
        'Create Eclipse project and register it with specified workspace (default: ~/workspace)'
      action:
        [default_iff_used, "~/workspace"]
      nargs:
        '?'

    github:
      flags:
      - -g
      - --github
      help:
        'This will create a Git Hub repository according to the project name and push your source there.'
      nargs:
        '?'

  files:
    jsfexample: &jsfexample
      source: java/jsf/

  run:
  - log_i: 'Creating simple JSF project'
  - cl: mkdir -p $name
  - cl: cp -r *jsfexample $name
  # create local git repository
  - log_i: 'Creating git repository'
  - cl: cd $name/jsf
  - cl: git init
  - cl: git add *
  - cl: git commit -m "initial_commit"
  # create tarball
  - log_i: 'Creating tarball'
  #- cl: git archive --format tar HEAD | gzip -9 > JSFexample.tar.gz
  - cl: tar czf devassistant-jsf-example.tar.gz src/ pom.xml run
  - log_i: 'Done'
  - if defined $github:
    - github: create_and_push
  - if $eclipse:
    - log_i: 'Creating eclipse project from command line'
    - cl: mkdir -p $eclipse/$name
    - cl: mv .eclipseproject .project
    - cl: sed -i "s/<name>PROJECT_NAME</<name>$name</" .project
    - cl: cp .project $eclipse/$name/.project
    - cl: cp .classpath $eclipse/$name/.classpath
    - cl: cp -r .settings/ $eclipse/$name/
    # TODO this is for CDT and it looks like JDT doesn't have similar functionality (?)
    #- cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import ./
    - log_i: 'You can now import this project into your Eclipse workspace'

