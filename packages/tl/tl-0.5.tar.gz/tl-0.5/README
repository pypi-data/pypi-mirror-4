W E L C O M E    T O    T I M E L I N E
=======================================

    T I M E L I N E (tl) is a program that is aimed a people that need to register their activities on a day. 
    Console, IRC and XMPP bots are provided to allow the user to keep track of activities on the day.
    This is a work in progress, first aim is to get the basic functionality running and allow for day/week/month analysis of the activity data.

    this is the first stone in providing an implementation of the following law (the second)

Ten Rules For The New World
===========================

Kenmerk: 69389/12

Punishment, the fruit of knowledge of good and evil, will be forbidden 

Every person, thing, existance, awareness or other entity, being or not
being, can ask for a proces described below.

The basic right is to be able to ask for help in difficult situations. Help
from the outside, when fear of ending existence appears. The rules below are
for those who are willing to help. One day these rules will be law, where
nothing will be excluded from.

“For if the first law made all this god damned mess, then this second one
will do the opposite.”


    1) you shall do no harm


    2) you shall judge but put no negative actions on your judgement


    3) this judgement you shall use to see what is going on


    4) with this knowledge of what is going on you will look at what the cause is


    5) when you know what the cause is you will take action to prevent further negative consequences


    6) you will do this proces in the open, controlable for everybody and thing


    7) you will evaluate how this proces works out, also in the open.


    8) You will make your judgement your own and not someone elses


    9) It is for you to bring peace on this earth and every else where this light needs to shine


    10) as last, be aware, be aware of what you think, do, cause, feel, see, hear, all that you perceive. For judgement can only be done properly if you see all the factors that influence a situation. Be aware of what makes you.

T O D O
~~~~~~~

    15:52:12 bart@monster:~/tl/dev/second$ ./bin/tl
    T I M E L I N E
    CONSOLE VERSION 0.4.1

    > ;todo
    todolist of bart: 

    1) filesystem for tl-bots .. map urls to files on fs datadir .. use ~/tl-export/.tl as entrypoint for a datadir copy of ~/.tl
    2) build a global monitoring klachten lijst registratie hier op
    3) also make copyin for registration of the json avail on email
    4) make bots also have a email interface where timestampped json dict can be registered. timestamped events.
    5) shadow function on Persist that copies data to the /home/bart/tl-export/datadir
    6) also add a log to Persist that will log the changes to /home/bart/jt-changes/datadir


C O N T E N T
~~~~~~~~~~~~~

    the tl pakage contains the following programs:

    * tl - console bot
    * tl-fleet - mix IRC and XMPP bots
    * tl-irc - IRC bot
    * tl-xmpp - XMPP bot

    note: T I M E L I N E is in a early stage of development right now and still subject to change of protocols and API.

    see https://github.com/feedbackflow/tl

L I C E N S E
~~~~~~~~~~~~~

    T I M E L I N E is free code (MIT) and can be cloned where needed. 

C O N T A C T
~~~~~~~~~~~~~

    * email: feedbackflow@gmail.com
    * jabber/xmpp: feedbackflow@gmail.com
    * IRC: feedbackflow on #tl irc.freenode.net
    * twitter: http://twitter.com/feedbackflow


D E V E L O P M E N T
~~~~~~~~~~~~~~~~~~~~~

    first checkout the main bot from the mercurial repository

    git clone https://github.com/feedbackflow/tl

    now you can run the programs in the bin directory with the
    ./bin/<program>  command. try ./bin/tl for the console app

S O U R C E
~~~~~~~~~~~

    Get the latest tarball from:

    ::

        https://github.com/feedbackflow/tl/downloads

    Or install from github:

    ::

        git clone https://github.com/feedbackflow/tl.git
    

C O N F I G
~~~~~~~~~~~

    Data and configuratiion files can be found in the datadir which defaults to ~/.tl (or
    another directory if the -d option is used). A bit further on i will give some basic examples.

    Configuration files are written on startup of tl. Use the --help option to see what other options are available.

    Look for the config/fleet directory for bot configuration files.


C O N S O L E
~~~~~~~~~~~~~

    In the bot dir run the ./bin/tl command to start the console version of the bot.

    ::

        22:44:11 dev@done:~/dev/0.7/5$ ./bin/tl
        T I M E L I N E
        CONSOLE VERSION 0.4.1
        >

    If you just want to execute 1 command on the bot, you can do that by giving
    it as an argument:

    ::

        22:45:24 dev@done:~/dev/0.1.5/5$ ./bin/tl list
        available plugins: 8b, admin, alias, ask, chan, chatlog, choice,
        controlchar, core, count, data, echo, fleet, foo, forward, gatekeeper,
        gcalc, grep, hubbub, idle, ipcalc, irc, karma, kickban, koffie, learn, misc,
        more, mpd, nickserv, not, outputcache, plug, ps, quote, relay, reload,
        remind, restserver, reverse, rss, seen, shop, sort, tail, test, tinyurl, to,
        todo, twitter, udp, uniq, url, urlinfo, user, userstate, watcher, weather,
        welcome, wikipedia, xmpp
 

I R C
~~~~~

    Run the following to make the bot connect to an IRC server:

    ::

        ./bin/tl-irc -o <userhost of owner> -s <server> -c \<channel>

    A configuration file will be generated from the command line opions. If you
    already have the configuration files (generated by tl-init) you can just use (without any options):

    ::

        ./bin/tl-irc


X M P P
~~~~~~~

    Run the following to make the bot connect to an Jabber server:

    ::

        ./bin/tl-xmpp -o <owner JID> -u <bot JID> -p <password> [-c <conference>] [-s <server>]

    Or when configuration files already exist, just run the bot without arguments:

    ::

        ./bin/tl-xmpp

    Conference and server options are optional. Server is take from the -u
    option if not provided as a seperate option. 


P L U G I N S
~~~~~~~~~~~~~

    To see what plugins are available use the !list command. Use !help <plugin>
    to get help on a plugin. 

    ::

        23:03:00 dev@done:~/dev/0.1.5/5$ ./bin/tl help misc
        HELP ON MISC misc commands.,     !source - <i> show where to fetch the bot
        source. </i> - examples: source,     !test - <i> give test response. </i> -
        examples:  test



    If a plugin is not responding try !plug-enable <plugin>:

    :: 

        23:03:05 dev@done:~/dev/0.1.5/5$ ./bin/tl
        T I M E L I N E 0.1.5 DEVELOPMENT CONSOLE
        > !plug-enable misc
        reloading and enabling tl.plugs.core.misc
        done - plug-enable misc
        > 


    otherwise try !admin-boot:

    ::

        23:05:46 dev@done:~/dev/0.1.5/5$ ./bin/tl
        T I M E L I N E 0.1.5 DEVELOPEMENT CONSOLE
        > !admin-boot
        done - admin-boot
        > 


    this will regenerate the callbacks and command indexes. 

    You can also use !apro <search> to search for commands:

    ::

        23:01:23 dev@done:~/dev/0.1.5/5$ ./bin/tl apro wiki
        commands matching wiki: wikipedia


H E L P
~~~~~~~

    All the programs have a --help option that shows a help page describing the command line options of the program.
