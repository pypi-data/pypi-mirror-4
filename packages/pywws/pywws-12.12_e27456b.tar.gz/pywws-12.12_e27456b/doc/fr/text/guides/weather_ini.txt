
weather.ini - format du fichier de configuration
************************************************

Presque toute la configuration de pywws est fait via un seul fichier
dans le répertoire de donnée: weather.ini. Ce fichier a été structuré
de manière similaire aux fichiers INI de Microsoft Windows. Il est
divisé en "sections", qui contiennent un nom d'entrée "nom = valeur".
L'ordre d'apparition des sections n'a pas d'importance.

Certaines entrées dans le fichier sont configurées par pywws, tandis
que d'autres doivent être éditées par l'utilisateur. Tout éditeur de
texte brut peut être utilisé pour ce faire. (Ne pas essayer d'éditer
le fichier pendant le fonctionnement de pywws.) Dans plusieurs cas,
pywws initialisera les entrées avec des valeurs importantes.

Les sections suivantes sont présentement utilisées:

   * config: diverses configuration système.

   * paths: dossiers dans lesquels sont emmagasinés les gabarits, etc.

   * fixed: valeurs copiées à partir des "blocs fixes" de la station
     météo.

   * live: tâches à accomplir à chaque 48 secondes.

   * logged: tâches à accomplir chaque fois que la station enregistre
     une lecture.

   * hourly: tâches à réaliser à chaque heure.

   * 12 hourly: tâches à réaliser à chaque 12 heures.

   * daily: tâches à faire chaque jour.

   * ftp: configuration pour le téléversement du un site web.

   * twitter: configuration pour poster sur Twitter.

   * underground, metoffice, temperaturnu etc: configuration pour
     poster sur ces 'services'.


config: diverses configuration système
======================================

   [config]
   day end hour = 21
   gnuplot encoding = iso_8859_1
   language = en
   logdata sync = 1

"day end hour" est la fin du "jour météorologique", selon l'heure
locale sans tenir compte de l'heure d'été. Généralement, les valeurs
sont 21, 9, ou 24.

"gnuplot encoding" est l'encodage de texte utilisé lors du tracé de
graphes. La valeur par défaut est "iso_8859_1" permettant le symbole
des degrés, fort utile dans une application météorologique! D'autres
valeurs peuvent être nécessaire si votre langue comporte des
caractères accentués. Les valeurs possible dépendent de votre
installation gnuplot, quelques expérimentations peuvent donc être
nécessaire.

"language" est utilisé pour traduire pywws. Il est optionnel, puisque
pywws utilise habituellement la langue par défaut de l'ordinateur tel
que configuré par la variable d'environnement LANG. Vous trouverez les
langages disponibles dans le sous-dossier "locale" de votre
installation pywws. Si vous configurez une langue qui n'est pas
inclus, pywws affichera en anglais.

"logdata sync" configure la qualité de la synchronisation utilisé par
*pywws.LogData*. Fixer à 0 pour rapide & imprécis ou 1 pour plus lent,
mais précis.


paths: dossiers dans lesquels sont emmagasinés les gabarits, etc.
=================================================================

   [paths]
   templates = /home/$USER/weather/templates/
   graph_templates = /home/$USER/weather/graph_templates/
   user_calib = /home/jim/weather/modules/usercalib
   work = /tmp/weather

Ces trois entrées spécifient où sont emmagasiné vos gabarits de texte
et de graphes, où doivent être créé les fichiers temporaires, et la
localisation de votre module de calibration (si utilisé).


fixed: valeurs copiées à partir des "blocs fixes" de la station météo
=====================================================================

   [fixed]
   pressure offset = 7.4
   ws type = 1080

Cette section est gérée par pywws et ne doit pas être éditée.


live: tâches à accomplir à chaque 48 secondes
=============================================

   [live]
   services = ['underground']
   twitter = []
   text = []
   plot = []
   yowindow = /home/jim/data/yowindow.xml

Cette section spécifie les tâche devant être effectuées pour chaque
échantillonage pendant la 'journalisation temps réel', c.à.d. chaque
48 secondes. Il est peu probable que vous vouliez faire autre chose
que le téléversement à Weather Underground ou la mise-à-jour du
fichier YoWindow aussi souvent.

"services" est une liste de 'services' auxquels envoyer vos données.
Chaque service listé doit avoir un fichier de configuration dans le
dossier "pywws/services/". Voir *pywws.toservice* pour plus de
détails.

"twitter" est une liste de gabarit texte à traiter avant de les poster
sur Twitter.

"text" et "plot" sont des listes de gabarits texte et graphe à traiter
et à téléverser sur votre site web.

"yowindow" indique le chemin complet du fichier au format xml à
générer pour le widget YoWindow weather (voir http://yowindow.com/).
Si vous n'employez pas YoWindow, omettez cette entrée.


logged: tâches à accomplir chaque fois que la station enregistre une lecture
============================================================================

   [logged]
   services = ['underground', 'metoffice']
   twitter = ['tweet.txt']
   text = []
   plot = []

Cette section spécifie les tâche devant être réalisées chaque fois
qu'une donnée est lue en mode 'temps réel' ou chaque fois qu'une tâche
horaire cron est exécutée.

"services" est une liste de 'services' auxquels envoyer vos données.
Chaque service listé doit avoir un fichier de configuration dans le
dossier "pywws/services/". Voir *pywws.toservice* pour plus de
détails.

"twitter" est une liste de gabarit texte à traiter avant de les poster
sur Twitter.

"text" et "plot" sont des listes de gabarits texte et graphe à traiter
et à téléverser sur votre site web.


hourly: tâches à réaliser à chaque heure
========================================

   [hourly]
   services = []
   twitter = ['tweet.txt']
   text = ['24hrs.txt', '6hrs.txt', '7days.txt', 'feed_hourly.xml', 'allmonths.txt']
   plot = ['7days.png.xml', '24hrs.png.xml', 'rose_12hrs.png.xml']

Cette section spécifie ;es tâches à réaliser à chaque heure en mode
'temps réel' ou exécutée en tant que tâche horaire cron.

"services" est une liste de 'services' auxquels envoyer vos données.
Chaque service listé doit avoir un fichier de configuration dans le
dossier "pywws/services/". Voir *pywws.toservice* pour plus de
détails.

"twitter" est une liste de gabarit texte à traiter avant de les poster
sur Twitter.

"text" et "plot" sont des listes de gabarits texte et graphe à traiter
et à téléverser sur votre site web.


12 hourly: tâches à réaliser à chaque 12 heures
===============================================

   [12 hourly]
   services = []
   twitter = []
   text = []
   plot = []

Cette section spécifie ;es tâches à réaliser à chaque heure en mode
'temps réel' exécutée en tant que tâche horaire cron. Utilisez pour
des choses qui ne changent pas vraiment souvent, tel que les graphes
mensuels.

"services" est une liste de 'services' auxquels envoyer vos données.
Chaque service listé doit avoir un fichier de configuration dans le
dossier "pywws/services/". Voir *pywws.toservice* pour plus de
détails.

"twitter" est une liste de gabarit texte à traiter avant de les poster
sur Twitter.

"text" et "plot" sont des listes de gabarits texte et graphe à traiter
et à téléverser sur votre site web.


daily: tâches à faire à chaque 24 heures
========================================

   [daily]
   services = []
   twitter = []
   text = ['feed_daily.xml']
   plot = ['2008.png.xml', '2009.png.xml', '2010.png.xml', '28days.png.xml']

Cette section spécifie ;es tâches à réaliser à chaque heure en mode
'temps réel' exécutée en tant que tâche horaire cron. Utilisez pour
des choses qui ne changent pas vraiment souvent, tel que les graphes
mensuels ou annuels.

"services" est une liste de 'services' auxquels envoyer vos données.
Chaque service listé doit avoir un fichier de configuration dans le
dossier "pywws/services/". Voir *pywws.toservice* pour plus de
détails.

"twitter" est une liste de gabarit texte à traiter avant de les poster
sur Twitter.

"text" et "plot" sont des listes de gabarits texte et graphe à traiter
et à téléverser sur votre site web.


ftp: configuration pour le téléversement du un site web
=======================================================

   [ftp]
   local site = False
   secure = False
   site = ftp.your_isp.co.uk
   user = username
   password = userpassword
   directory = public_html/weather/data/

Ces entrées fournissent des détails sur votre site web (ou répertoire
local) où doivent être transférés les fichier de texte et de graphe
traités.

"local site" spécifie si les fichiers doivent être copiés dans un
dossier local ou envoyé sur un site distant. Vou pouvez vouloir fixer
ce paramètre si vous exécutez votre serveur web sur le même ordinateur
qui exécute pywws.

"secure" spécifie si le transfert des fichiers utilise SFTP (FTP
securisé) au lieu de l'habituel FTP. Votre hébergeur doit être en
mesure de vous dire si vous pouvez utiliser SFTP.

"site" est l'adresse web de votre site FTP à laquelle transférer vos
fichiers.

"user" et "password" sont les informations de branchement pour votre
site FTP. Votre hébergeur doit vous avoir fourni ces informations.

"directory" spécifie où sur le site FTP (ou le disque local) les
fichiers doivent être envoyés. Notez que vous pourriez devoir
expérimenter quelque peu  - vous pourriez devoir utiliser un caractère
'/' au début de votre adresse.


twitter: configuration pour poster sur Twitter
==============================================

   [twitter]
   secret = longstringofrandomcharacters
   key = evenlongerstringofrandomcharacters
   latitude = 51.365
   longitude = -0.251

"secret" et "key" sont les données d'authentication fournies par
Twitter. Por les configurer, exécutez le programme "TwitterAuth.py".

"latitude" et "longitude" sont vos données de localisation et sont are
optionelles. Si vous les incluez dans vos 'tweets météo' vos
utilisateurs pourront voir oz est située votre station. Ce qui
pourrait aider les utilisateurs à trouver votre station s'ils
cherchent par localisation.


underground, metoffice, temperaturnu etc: configuration pour poster sur ces 'services'
======================================================================================

   [underground]
   station = IXYZABA5
   password = secret
   last update = 2010-09-27 19:45:24

Ces sections contiennent l'information nécessaire pour envoyer vos
données sur ces services météo, tel que mot de passe et ID de votre
station. Les noms de ces entrées de données dépend du service.
L'exemple montré affiche les informations pour Weather Underground.

"station" est le PWS ID (Identificateur de station) alloué à la
station météo par Weather Underground.

"password" est votre mot de passe pour Weather Underground.

"last update" est ficé par pywws lorsque vous téléversez à un service
météo.
