    def _get_ploneboard_comments_config(self):
        ploneboard_comments_config = None
        reference = aq_inner(self.context)
        pcc = None
        while True:
            base = getattr(reference, 'aq_base')
            pcc = reference.portal_catalog(meta_type='PloneboardComments', path='/'.join(reference.getPhysicalPath()))
            if pcc:
                ploneboard_comments_config = pcc[0].getObject()
                break
            else:
                try:
                    reference = reference.getParentNode()
                except AttributeError:
                    break

        return ploneboard_comments_config

    def _get_forum(self):
        # Looks for a configured forum, returns None if
        # there isn't one.
        pcc = self.get_ploneboard_comments_config()
        if pcc:
            return pcc.getMessage_board()
        else:
            return None

    def _get_conversation(self):
        pcc = self.get_ploneboard_comments_config()
        if not pcc:
            return None
        else:
            conversation =  pcc.get_conversation(aq_inner(self.context).UID())
            return conversation

    def _create_conversation_url(self):
        pcc = self.get_ploneboard_comments_config()
        if pcc is not None:
            url = pcc.absolute_url() + '/create_conversation?UID=' + aq_inner(self.context).UID()
            return url
        else:
            return 'javascript:alert("Failed to generate discussion URL")'
