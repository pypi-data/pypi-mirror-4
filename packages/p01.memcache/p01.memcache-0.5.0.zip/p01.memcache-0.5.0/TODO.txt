====
TODO
====

refactoring
-----------

- customized memcache lib

   - the main reason why we need a custom concept is the support for reset
     expiring values again in memcache before they expire. We should use
     a metadata container which is able to store the expire data and the
     real value. This whould allow to set the value periodicaly back to 
     memcache before the value expires

   - other reasons why we need to merge the python memcache lib and our
     implementation into one implementation is that we do several things twice.

     a customized library whould allow to:
     
     - convert values only once after wrapping in a metadata container
     
     - use the "arbitrary 16-bit unsigned integer" concept as key for
       converters. This concept is hidden in the python-memcached library
       see: http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt

     - implement custom get, set methods with explicit converter usage. This
       allows to bypass the hole key and data conversion

   This means the new library whould be a mix of high level API and offer some
   base concept and more with a flexibler API
