<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal" xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en" metal:use-macro="context/main_template/macros/master" i18n:domain="plone">
<body>
 <div metal:fill-slot="main">
  <tal:main-macro metal:define-macro="main">

    <div tal:replace="structure provider:plone.abovecontenttitle" />

    <link rel="stylesheet" tal:attributes="href string:${view/sample_url}/sample.css">

    <h1 class="samples">
        CKEditor Samples
    </h1>
    <div class="row">
        <div class="twoColumnsLeft">
            <h2 class="samples">
                Basic Samples
            </h2>
            <dl class="samples">
                <dt><a class="samples" href="example.ckeditor.replacebyclass.html">Replace textarea elements by class name</a></dt>
                <dd>Automatic replacement of all textarea elements of a given class with a CKEditor instance.</dd>

                <dt><a class="samples" href="example.ckeditor.replacebycode.html">Replace textarea elements by code</a></dt>
                <dd>Replacement of textarea elements with CKEditor instances by using a JavaScript call.</dd>

                <dt><a class="samples" href="divarea.html">Replace textarea with a "DIV-based" editor</a> <span class="new">New!</span></dt>
                <dd>Using <code>div</code> instead of <code>iframe</code> for rich editing.</dd>

                <dt><a class="samples" href="fullpage.html">Full page support with the Document Properties plugin</a></dt>
                <dd>CKEditor inserted with a JavaScript call and used to edit the whole page from <code>&lt;html&gt;</code> to <code>&lt;/html&gt;</code>.</dd>
            </dl>

            <h2 class="samples">
                Basic Customization
            </h2>
            <dl class="samples">
                <dt><a class="samples" href="uicolor.html">User Interface color</a></dt>
                <dd>Changing CKEditor User Interface color and adding a toolbar button that lets the user set the UI color.</dd>

                <dt><a class="samples" href="uilanguages.html">User Interface languages</a></dt>
                <dd>Changing CKEditor User Interface language and adding a drop-down list that lets the user choose the UI language.</dd>
            </dl>

            <h2 class="samples">
                Additional plugins
            </h2>
            <dl class="samples">
                <dt><a class="samples" href="autogrow.html">AutoGrow plugin</a></dt>
                <dd>Using the AutoGrow plugin in order to make the editor grow to fit the size of its content.</dd>

                <dt><a class="samples" href="bbcode.html">Output for BBCode</a></dt>
                <dd>Configuring CKEditor to produce BBCode tags instead of HTML.</dd>

                <dt><a class="samples" href="stylesheetparser.html">Stylesheet Parser plugin</a></dt>
                <dd>Using the Stylesheet Parser plugin to fill the Styles drop-down list based on the CSS classes available in the document stylesheet.</dd>

                <dt><a class="samples" href="devtools.html">Developer Tools plugin</a></dt>
                <dd>Using the Developer Tools plugin to display information about dialog window UI elements to allow for easier customization.</dd>

                <dt><a class="samples" href="placeholder.html">Placeholder plugin</a></dt>
                <dd>Using the Placeholder plugin to create uneditable sections that can only be created and modified with a proper dialog window.</dd>

                <dt><a class="samples" href="tableresize.html">TableResize plugin</a></dt>
                <dd>Using the TableResize plugin to enable table column resizing.</dd>

                <dt><a class="samples" href="magicline.html">Magicline plugin</a> <span class="new">New!</span></dt>
                <dd>Using the Magicline plugin to access difficult focus spaces.</dd>
            </dl>
        </div>
        <div class="twoColumnsRight">
            <h2 class="samples">
                Inline editing <span class="new">New!</span>
            </h2>
            <dl class="samples">
                <dt><a class="samples" href="inlineall.html">Massive inline editor creation</a> <span class="new">New!</span></dt>
                <dd>Turn all elements with <code>contentEditable = true</code> attribute into inline editors.</dd>

                <dt><a class="samples" href="inlinebycode.html">Convert element into an inline editor by code</a> <span class="new">New!</span></dt>
                <dd>Conversion of DOM elements into inline CKEditor instances by using a JavaScript call.</dd>
            </dl>

            <h2 class="samples">
                Advanced Samples
            </h2>
            <dl class="samples">
                <dt><a class="samples" href="divreplace.html">Replace DIV elements on the fly</a></dt>
                <dd>Transforming a <code>div</code> element into an instance of CKEditor with a mouse click.</dd>

                <dt><a class="samples" href="appendto.html">Append editor instances</a></dt>
                <dd>Appending editor instances to existing DOM elements.</dd>

                <dt><a class="samples" href="ajax.html">Create and destroy editor instances for Ajax applications</a></dt>
                <dd>Creating and destroying CKEditor instances on the fly and saving the contents entered into the editor window.</dd>

                <dt><a class="samples" href="api.html">Basic usage of the API</a></dt>
                <dd>Using the CKEditor JavaScript API to interact with the editor at runtime.</dd>

                <dt><a class="samples" href="apidialog.html">Using the JavaScript API to customize dialog windows</a></dt>
                <dd>Using the dialog windows API to customize dialog windows without changing the original editor code.</dd>

                <dt><a class="samples" href="enterkey.html">Using the "Enter" key in CKEditor</a></dt>
                <dd>Configuring the behavior of <em>Enter</em> and <em>Shift+Enter</em> keys.</dd>

                <dt><a class="samples" href="outputxhtml.html">Output XHTML</a></dt>
                <dd>Configuring CKEditor to produce XHTML 1.1 compliant code.</dd>

                <dt><a class="samples" href="outputhtml.html">Output HTML</a></dt>
                <dd>Configuring CKEditor to produce legacy HTML 4 code.</dd>

                <dt><a class="samples" href="outputforflash.html">Output for Flash</a></dt>
                <dd>Configuring CKEditor to produce HTML code that can be used with Adobe Flash.</dd>

                <dt><a class="samples" href="readonly.html">Read-only mode</a></dt>
                <dd>Using the readOnly API to block introducing changes to the editor contents.</dd>

                <dt><a class="samples" href="tabindex.html">"Tab" key-based navigation</a> <span class="new">New!</span></dt>
                <dd>Navigating among editor instances with tab key.</dd>
            </dl>
        </div>
    </div>

    </tal:main-macro>
    </div>
</body>
</html>