Metadata-Version: 1.0
Name: e
Version: 1.4
Summary: Evaluate and display command line expressions with
        python -me expr
Home-page: UNKNOWN
Author: Georg Brandl, Michael Foord and Richard Jones
Author-email: richard@python.org
License: UNKNOWN
Description: Evaluate and display command line expressions with
        ``python -me expr``.
        
        For example::
        
        .. code:
        
            $ python -me 1+1
            2
        
        Like python -c but no need for a print statement.
        
        It allows multiple expressions::
        
            $ python -me 1+1 2+2
            2
            4
        
        As a bonus, if the first argument is a module name then it will output the
        location of the module source code:
        
        .. code:
        
            $ python -me os
            /Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/os.py
        
        If you follow the name of the module with a command then the module will be
        opened with that command. For example, the following will open the os module
        source in vim:
        
        .. code:
        
            $ python -me os vim
        
        The "e" module recognises the special command names "edit" and "view" which
        will result in it looking up your editor and viewer commands in the
        environment variables $EDITOR and $PAGER respectively. The latter defaults to
        "less". This is only just slightly easier than writing, for example:
        
        .. code:
        
            $ vim `python -me os`
        
Platform: UNKNOWN
