Metadata-Version: 1.1
Name: pydiigo
Version: 0.5
Summary: Python wrapper for www.diigo.com's API
Home-page: http://www.tsuyukimakoto.com/project/pydiigo/
Author: makoto tsuyuki
Author-email: mtsuyuki_at_gmail_dot_com
License: BSD
Description: 
        Requirements
        =======================
        * `pit`_ **optional**. See diigotest.py. You might love it ;)
        
        .. _`pit`: http://pypi.python.org/pypi?:action=display&name=pit
        
        instllation
        =======================
        $ pip install pydiigo
        
          or 
        
        Download pydiigo and extract it, then
        
        $ sudo python setup.py install
        
        Notes
        =======================
        You might get 503 Error, because of Diigo's API limit.
        
        v.0.5
        ^^^^^^^^^^^^^^^^^^
        api needs diigo **API KEY** generate api key via https://www.diigo.com/api_keys/new/
        
        required python version 2.6, 2.7, 3.2, 3.3
        
        v.0.2
        ^^^^^^^^^^^^^^^^^^
        **Update Bookmark** is deprecated and raise DeprecationWarning.
        
        Usage
        =======================
        
        Initialize API 
        --------------------
        ::
        
          >>> from pydiigo import DiigoApi
          >>> api = DiigoApi(user='YOUR_DIIGO_USERNAME', password='YOUR_DIIGO_PASSWORD', apikey='YOUR API KEY')
        
        Search Bookmarks
        --------------------
        ::
        
          >>> bookmarks = api.bookmarks_find(users='DIIGO_USER_NAME')
          >>> for bookmark in bookmarks:
          ...   print(bookmark.title)
          ...   print(bookmark.url)
          ...   print(bookmark.tags)
          ...   print(bookmark.desc)
          ...   print('-' * 10)
        
        * Bookmark Structure
        
          * title (string)
        
          * url (string)
        
          * user (string)
        
          * desc (string: description)
        
          * tags (string: Seperated by comma with multiple tags.)
        
          * shared (string: yes or no)
        
          * created_at (string: eg.2009/03/04 02:57:09 +0000)
        
          * updated_at (string: eg.2009/03/04 02:57:09 +0000)
        
          * comments (string array)
        
          * annotations (string array)
        
        Add Bookmark
        --------------------
        ::
        
          >>> result = api.bookmark_add(title='', description='',url='', shared='yes', tags='')
          >>> print(result['message'])
          added 1 bookmark
        
        * required arguments
        
          * url
        
        Delete Bookmark
        --------------------
        ::
        
          >>> result = api.bookmark_delete(url='')
          >>> print(result['message'])
          updated 1 bookmark
        
        * required arguments
        
          * url
        
          
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
