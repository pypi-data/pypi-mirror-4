1.0.0 (2012-08-xx):
 - PyMeta is now Parsley.
 - A new public API has been added in the 'parsley' module.
 - Grammars now use the OMeta 2 syntax by default. Compatibility is
   available via ometa.grammar.OMeta1.
 - A generic AST-handling library has been added, 'terml'.
 - Grammars now parse to term trees instead of nested lists. The code
   generator has accordingly been greatly simplified.
 - A grammar interpreter has been added, which parses by evaluating
   the grammar term tree directly instead of generating a class.
 - A push parser has been added which accepts data in arbitrary
   chunks, maintaining state while waiting for more input.

0.4.0 (2010-05-15):

 - Builders now work from a grammar AST, rather than being driven by
   the grammar parser directly.
 - All parse operations now carry error information, including what
   was expected to be parsed and where.
  * Consequently, ParseError now has a 'formatError' method that takes
    the input string and returns a human-readable description the
    parse failure.
 - New example: TermL parser, in examples/terml.
 - New script, bin/generate_parser. Takes a file containing a PyMeta
   grammar as input and writes a Python module file.

 - A couple bugfixes:
 #248643 subclassed grammars don't inherit base namespace
 #564135 makeGrammar error handling for nonsensical grammars is broken


0.3.0 (2008-07-12):
 - Input stream now implemented like the Javascript version, with immutable
   position objects.

0.2.0 (2008-04-17):
 - Grammars generate Python source instead of ASTs.
 - OMeta now has a "metagrammarClass" attribute, to ease extension of
   the metagrammar.

0.1.1 (2008-03-27):
 - Fixed a bug in 'super'.

0.1 (2008-03-26):
 - Initial release.
