# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.9
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _VXI11.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_VXI11', [dirname(__file__)])
        except ImportError:
            import _VXI11
            return _VXI11
        if fp is not None:
            try:
                _mod = imp.load_module('_VXI11', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _VXI11 = swig_import_helper()
    del swig_import_helper
else:
    import _VXI11
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class longp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _VXI11.longp_swiginit(self,_VXI11.new_longp())
    __swig_destroy__ = _VXI11.delete_longp
    frompointer = staticmethod(_VXI11.longp_frompointer)
longp.assign = new_instancemethod(_VXI11.longp_assign,None,longp)
longp.value = new_instancemethod(_VXI11.longp_value,None,longp)
longp.cast = new_instancemethod(_VXI11.longp_cast,None,longp)
longp_swigregister = _VXI11.longp_swigregister
longp_swigregister(longp)

def longp_frompointer(*args):
  return _VXI11.longp_frompointer(*args)
longp_frompointer = _VXI11.longp_frompointer

RPCGEN_VERSION = _VXI11.RPCGEN_VERSION
device_core_prog = _VXI11.device_core_prog
device_core_version = _VXI11.device_core_version
device_async_prog = _VXI11.device_async_prog
device_async_version = _VXI11.device_async_version
device_flags_termchrset = _VXI11.device_flags_termchrset
device_flags_end = _VXI11.device_flags_end
device_flags_waitlock = _VXI11.device_flags_waitlock

def clnt_create(*args):
  return _VXI11.clnt_create(*args)
clnt_create = _VXI11.clnt_create

def clnt_destroy(*args):
  return _VXI11.clnt_destroy(*args)
clnt_destroy = _VXI11.clnt_destroy

def clnt_perror(*args):
  return _VXI11.clnt_perror(*args)
clnt_perror = _VXI11.clnt_perror

def clnt_sperror(*args):
  return _VXI11.clnt_sperror(*args)
clnt_sperror = _VXI11.clnt_sperror

def xdr_Device_Link(*args):
  return _VXI11.xdr_Device_Link(*args)
xdr_Device_Link = _VXI11.xdr_Device_Link
DEVICE_TCP = _VXI11.DEVICE_TCP
DEVICE_UDP = _VXI11.DEVICE_UDP
class Device_Error(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Device_Error_error_get, _VXI11.Device_Error_error_set)
    def __init__(self): 
        _VXI11.Device_Error_swiginit(self,_VXI11.new_Device_Error())
    __swig_destroy__ = _VXI11.delete_Device_Error
Device_Error_swigregister = _VXI11.Device_Error_swigregister
Device_Error_swigregister(Device_Error)

Device_ErrorCode_No_Error = _VXI11.Device_ErrorCode_No_Error
Device_ErrorCode_Syntax_Error = _VXI11.Device_ErrorCode_Syntax_Error
Device_ErrorCode_not_Accessible = _VXI11.Device_ErrorCode_not_Accessible
Device_ErrorCode_invalid_Link_Id = _VXI11.Device_ErrorCode_invalid_Link_Id
Device_ErrorCode_Parm_Error = _VXI11.Device_ErrorCode_Parm_Error
Device_ErrorCode_Chan_not_Established = _VXI11.Device_ErrorCode_Chan_not_Established
Device_ErrorCode_Op_not_Supported = _VXI11.Device_ErrorCode_Op_not_Supported
Device_ErrorCode_Out_of_Resoruces = _VXI11.Device_ErrorCode_Out_of_Resoruces
Device_ErrorCode_Dev_Locked_by_Another = _VXI11.Device_ErrorCode_Dev_Locked_by_Another
Device_ErrorCode_No_Lock_by_this_Link = _VXI11.Device_ErrorCode_No_Lock_by_this_Link
Device_ErrorCode_IO_Timeout = _VXI11.Device_ErrorCode_IO_Timeout
Device_ErrorCode_IO_Error = _VXI11.Device_ErrorCode_IO_Error
Device_ErrorCode_Ivalid_Addr = _VXI11.Device_ErrorCode_Ivalid_Addr
Device_ErrorCode_Abort = _VXI11.Device_ErrorCode_Abort
Device_ErrorCode_Already_Established = _VXI11.Device_ErrorCode_Already_Established

def xdr_Device_ErrorCode(*args):
  return _VXI11.xdr_Device_ErrorCode(*args)
xdr_Device_ErrorCode = _VXI11.xdr_Device_ErrorCode

def xdr_Device_Error(*args):
  return _VXI11.xdr_Device_Error(*args)
xdr_Device_Error = _VXI11.xdr_Device_Error
class Create_LinkParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    clientId = _swig_property(_VXI11.Create_LinkParms_clientId_get, _VXI11.Create_LinkParms_clientId_set)
    lockDevice = _swig_property(_VXI11.Create_LinkParms_lockDevice_get, _VXI11.Create_LinkParms_lockDevice_set)
    lock_timeout = _swig_property(_VXI11.Create_LinkParms_lock_timeout_get, _VXI11.Create_LinkParms_lock_timeout_set)
    device = _swig_property(_VXI11.Create_LinkParms_device_get, _VXI11.Create_LinkParms_device_set)
    def __init__(self): 
        _VXI11.Create_LinkParms_swiginit(self,_VXI11.new_Create_LinkParms())
    __swig_destroy__ = _VXI11.delete_Create_LinkParms
Create_LinkParms_swigregister = _VXI11.Create_LinkParms_swigregister
Create_LinkParms_swigregister(Create_LinkParms)


def xdr_Create_LinkParms(*args):
  return _VXI11.xdr_Create_LinkParms(*args)
xdr_Create_LinkParms = _VXI11.xdr_Create_LinkParms
class Create_LinkResp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Create_LinkResp_error_get, _VXI11.Create_LinkResp_error_set)
    lid = _swig_property(_VXI11.Create_LinkResp_lid_get, _VXI11.Create_LinkResp_lid_set)
    abortPort = _swig_property(_VXI11.Create_LinkResp_abortPort_get, _VXI11.Create_LinkResp_abortPort_set)
    maxRecvSize = _swig_property(_VXI11.Create_LinkResp_maxRecvSize_get, _VXI11.Create_LinkResp_maxRecvSize_set)
    def __init__(self): 
        _VXI11.Create_LinkResp_swiginit(self,_VXI11.new_Create_LinkResp())
    __swig_destroy__ = _VXI11.delete_Create_LinkResp
Create_LinkResp_swigregister = _VXI11.Create_LinkResp_swigregister
Create_LinkResp_swigregister(Create_LinkResp)


def xdr_Create_LinkResp(*args):
  return _VXI11.xdr_Create_LinkResp(*args)
xdr_Create_LinkResp = _VXI11.xdr_Create_LinkResp
class Device_WriteParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_WriteParms_lid_get, _VXI11.Device_WriteParms_lid_set)
    io_timeout = _swig_property(_VXI11.Device_WriteParms_io_timeout_get, _VXI11.Device_WriteParms_io_timeout_set)
    lock_timeout = _swig_property(_VXI11.Device_WriteParms_lock_timeout_get, _VXI11.Device_WriteParms_lock_timeout_set)
    flags = _swig_property(_VXI11.Device_WriteParms_flags_get, _VXI11.Device_WriteParms_flags_set)
    data = _swig_property(_VXI11.Device_WriteParms_data_get)
    def __init__(self): 
        _VXI11.Device_WriteParms_swiginit(self,_VXI11.new_Device_WriteParms())
    __swig_destroy__ = _VXI11.delete_Device_WriteParms
Device_WriteParms_swigregister = _VXI11.Device_WriteParms_swigregister
Device_WriteParms_swigregister(Device_WriteParms)

class Device_WriteParms_data(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data_len = _swig_property(_VXI11.Device_WriteParms_data_data_len_get, _VXI11.Device_WriteParms_data_data_len_set)
    data_val = _swig_property(_VXI11.Device_WriteParms_data_data_val_get, _VXI11.Device_WriteParms_data_data_val_set)
    def __init__(self): 
        _VXI11.Device_WriteParms_data_swiginit(self,_VXI11.new_Device_WriteParms_data())
    __swig_destroy__ = _VXI11.delete_Device_WriteParms_data
Device_WriteParms_data_swigregister = _VXI11.Device_WriteParms_data_swigregister
Device_WriteParms_data_swigregister(Device_WriteParms_data)


def xdr_Device_WriteParms(*args):
  return _VXI11.xdr_Device_WriteParms(*args)
xdr_Device_WriteParms = _VXI11.xdr_Device_WriteParms
class Device_WriteResp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Device_WriteResp_error_get, _VXI11.Device_WriteResp_error_set)
    size = _swig_property(_VXI11.Device_WriteResp_size_get, _VXI11.Device_WriteResp_size_set)
    def __init__(self): 
        _VXI11.Device_WriteResp_swiginit(self,_VXI11.new_Device_WriteResp())
    __swig_destroy__ = _VXI11.delete_Device_WriteResp
Device_WriteResp_swigregister = _VXI11.Device_WriteResp_swigregister
Device_WriteResp_swigregister(Device_WriteResp)


def xdr_Device_WriteResp(*args):
  return _VXI11.xdr_Device_WriteResp(*args)
xdr_Device_WriteResp = _VXI11.xdr_Device_WriteResp
class Device_ReadParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_ReadParms_lid_get, _VXI11.Device_ReadParms_lid_set)
    requestSize = _swig_property(_VXI11.Device_ReadParms_requestSize_get, _VXI11.Device_ReadParms_requestSize_set)
    io_timeout = _swig_property(_VXI11.Device_ReadParms_io_timeout_get, _VXI11.Device_ReadParms_io_timeout_set)
    lock_timeout = _swig_property(_VXI11.Device_ReadParms_lock_timeout_get, _VXI11.Device_ReadParms_lock_timeout_set)
    flags = _swig_property(_VXI11.Device_ReadParms_flags_get, _VXI11.Device_ReadParms_flags_set)
    termChar = _swig_property(_VXI11.Device_ReadParms_termChar_get, _VXI11.Device_ReadParms_termChar_set)
    def __init__(self): 
        _VXI11.Device_ReadParms_swiginit(self,_VXI11.new_Device_ReadParms())
    __swig_destroy__ = _VXI11.delete_Device_ReadParms
Device_ReadParms_swigregister = _VXI11.Device_ReadParms_swigregister
Device_ReadParms_swigregister(Device_ReadParms)


def xdr_Device_ReadParms(*args):
  return _VXI11.xdr_Device_ReadParms(*args)
xdr_Device_ReadParms = _VXI11.xdr_Device_ReadParms
class Device_ReadResp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Device_ReadResp_error_get, _VXI11.Device_ReadResp_error_set)
    reason = _swig_property(_VXI11.Device_ReadResp_reason_get, _VXI11.Device_ReadResp_reason_set)
    data = _swig_property(_VXI11.Device_ReadResp_data_get)
    def __init__(self): 
        _VXI11.Device_ReadResp_swiginit(self,_VXI11.new_Device_ReadResp())
    __swig_destroy__ = _VXI11.delete_Device_ReadResp
Device_ReadResp.get_binary_data = new_instancemethod(_VXI11.Device_ReadResp_get_binary_data,None,Device_ReadResp)
Device_ReadResp_swigregister = _VXI11.Device_ReadResp_swigregister
Device_ReadResp_swigregister(Device_ReadResp)

class Device_ReadResp_data(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data_len = _swig_property(_VXI11.Device_ReadResp_data_data_len_get, _VXI11.Device_ReadResp_data_data_len_set)
    data_val = _swig_property(_VXI11.Device_ReadResp_data_data_val_get, _VXI11.Device_ReadResp_data_data_val_set)
    def __init__(self): 
        _VXI11.Device_ReadResp_data_swiginit(self,_VXI11.new_Device_ReadResp_data())
    __swig_destroy__ = _VXI11.delete_Device_ReadResp_data
Device_ReadResp_data_swigregister = _VXI11.Device_ReadResp_data_swigregister
Device_ReadResp_data_swigregister(Device_ReadResp_data)

Device_ReadResp_REQCNT = _VXI11.Device_ReadResp_REQCNT
Device_ReadResp_CHR = _VXI11.Device_ReadResp_CHR
Device_ReadResp_END = _VXI11.Device_ReadResp_END

def xdr_Device_ReadResp(*args):
  return _VXI11.xdr_Device_ReadResp(*args)
xdr_Device_ReadResp = _VXI11.xdr_Device_ReadResp
class Device_ReadStbResp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Device_ReadStbResp_error_get, _VXI11.Device_ReadStbResp_error_set)
    stb = _swig_property(_VXI11.Device_ReadStbResp_stb_get, _VXI11.Device_ReadStbResp_stb_set)
    def __init__(self): 
        _VXI11.Device_ReadStbResp_swiginit(self,_VXI11.new_Device_ReadStbResp())
    __swig_destroy__ = _VXI11.delete_Device_ReadStbResp
Device_ReadStbResp_swigregister = _VXI11.Device_ReadStbResp_swigregister
Device_ReadStbResp_swigregister(Device_ReadStbResp)


def xdr_Device_ReadStbResp(*args):
  return _VXI11.xdr_Device_ReadStbResp(*args)
xdr_Device_ReadStbResp = _VXI11.xdr_Device_ReadStbResp
class Device_GenericParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_GenericParms_lid_get, _VXI11.Device_GenericParms_lid_set)
    flags = _swig_property(_VXI11.Device_GenericParms_flags_get, _VXI11.Device_GenericParms_flags_set)
    lock_timeout = _swig_property(_VXI11.Device_GenericParms_lock_timeout_get, _VXI11.Device_GenericParms_lock_timeout_set)
    io_timeout = _swig_property(_VXI11.Device_GenericParms_io_timeout_get, _VXI11.Device_GenericParms_io_timeout_set)
    def __init__(self): 
        _VXI11.Device_GenericParms_swiginit(self,_VXI11.new_Device_GenericParms())
    __swig_destroy__ = _VXI11.delete_Device_GenericParms
Device_GenericParms_swigregister = _VXI11.Device_GenericParms_swigregister
Device_GenericParms_swigregister(Device_GenericParms)


def xdr_Device_GenericParms(*args):
  return _VXI11.xdr_Device_GenericParms(*args)
xdr_Device_GenericParms = _VXI11.xdr_Device_GenericParms
class Device_RemoteFunc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    hostAddr = _swig_property(_VXI11.Device_RemoteFunc_hostAddr_get, _VXI11.Device_RemoteFunc_hostAddr_set)
    hostPort = _swig_property(_VXI11.Device_RemoteFunc_hostPort_get, _VXI11.Device_RemoteFunc_hostPort_set)
    progNum = _swig_property(_VXI11.Device_RemoteFunc_progNum_get, _VXI11.Device_RemoteFunc_progNum_set)
    progVers = _swig_property(_VXI11.Device_RemoteFunc_progVers_get, _VXI11.Device_RemoteFunc_progVers_set)
    progFamily = _swig_property(_VXI11.Device_RemoteFunc_progFamily_get, _VXI11.Device_RemoteFunc_progFamily_set)
    def __init__(self): 
        _VXI11.Device_RemoteFunc_swiginit(self,_VXI11.new_Device_RemoteFunc())
    __swig_destroy__ = _VXI11.delete_Device_RemoteFunc
Device_RemoteFunc_swigregister = _VXI11.Device_RemoteFunc_swigregister
Device_RemoteFunc_swigregister(Device_RemoteFunc)


def xdr_Device_RemoteFunc(*args):
  return _VXI11.xdr_Device_RemoteFunc(*args)
xdr_Device_RemoteFunc = _VXI11.xdr_Device_RemoteFunc
class Device_EnableSrqParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_EnableSrqParms_lid_get, _VXI11.Device_EnableSrqParms_lid_set)
    enable = _swig_property(_VXI11.Device_EnableSrqParms_enable_get, _VXI11.Device_EnableSrqParms_enable_set)
    handle = _swig_property(_VXI11.Device_EnableSrqParms_handle_get)
    def __init__(self): 
        _VXI11.Device_EnableSrqParms_swiginit(self,_VXI11.new_Device_EnableSrqParms())
    __swig_destroy__ = _VXI11.delete_Device_EnableSrqParms
Device_EnableSrqParms_swigregister = _VXI11.Device_EnableSrqParms_swigregister
Device_EnableSrqParms_swigregister(Device_EnableSrqParms)

class Device_EnableSrqParms_handle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    handle_len = _swig_property(_VXI11.Device_EnableSrqParms_handle_handle_len_get, _VXI11.Device_EnableSrqParms_handle_handle_len_set)
    handle_val = _swig_property(_VXI11.Device_EnableSrqParms_handle_handle_val_get, _VXI11.Device_EnableSrqParms_handle_handle_val_set)
    def __init__(self): 
        _VXI11.Device_EnableSrqParms_handle_swiginit(self,_VXI11.new_Device_EnableSrqParms_handle())
    __swig_destroy__ = _VXI11.delete_Device_EnableSrqParms_handle
Device_EnableSrqParms_handle_swigregister = _VXI11.Device_EnableSrqParms_handle_swigregister
Device_EnableSrqParms_handle_swigregister(Device_EnableSrqParms_handle)


def xdr_Device_EnableSrqParms(*args):
  return _VXI11.xdr_Device_EnableSrqParms(*args)
xdr_Device_EnableSrqParms = _VXI11.xdr_Device_EnableSrqParms
class Device_LockParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_LockParms_lid_get, _VXI11.Device_LockParms_lid_set)
    flags = _swig_property(_VXI11.Device_LockParms_flags_get, _VXI11.Device_LockParms_flags_set)
    lock_timeout = _swig_property(_VXI11.Device_LockParms_lock_timeout_get, _VXI11.Device_LockParms_lock_timeout_set)
    def __init__(self): 
        _VXI11.Device_LockParms_swiginit(self,_VXI11.new_Device_LockParms())
    __swig_destroy__ = _VXI11.delete_Device_LockParms
Device_LockParms_swigregister = _VXI11.Device_LockParms_swigregister
Device_LockParms_swigregister(Device_LockParms)


def xdr_Device_LockParms(*args):
  return _VXI11.xdr_Device_LockParms(*args)
xdr_Device_LockParms = _VXI11.xdr_Device_LockParms
class Device_DocmdParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    lid = _swig_property(_VXI11.Device_DocmdParms_lid_get, _VXI11.Device_DocmdParms_lid_set)
    flags = _swig_property(_VXI11.Device_DocmdParms_flags_get, _VXI11.Device_DocmdParms_flags_set)
    io_timeout = _swig_property(_VXI11.Device_DocmdParms_io_timeout_get, _VXI11.Device_DocmdParms_io_timeout_set)
    lock_timeout = _swig_property(_VXI11.Device_DocmdParms_lock_timeout_get, _VXI11.Device_DocmdParms_lock_timeout_set)
    cmd = _swig_property(_VXI11.Device_DocmdParms_cmd_get, _VXI11.Device_DocmdParms_cmd_set)
    network_order = _swig_property(_VXI11.Device_DocmdParms_network_order_get, _VXI11.Device_DocmdParms_network_order_set)
    datasize = _swig_property(_VXI11.Device_DocmdParms_datasize_get, _VXI11.Device_DocmdParms_datasize_set)
    data_in = _swig_property(_VXI11.Device_DocmdParms_data_in_get)
    def __init__(self): 
        _VXI11.Device_DocmdParms_swiginit(self,_VXI11.new_Device_DocmdParms())
    __swig_destroy__ = _VXI11.delete_Device_DocmdParms
Device_DocmdParms_swigregister = _VXI11.Device_DocmdParms_swigregister
Device_DocmdParms_swigregister(Device_DocmdParms)

class Device_DocmdParms_data_in(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data_in_len = _swig_property(_VXI11.Device_DocmdParms_data_in_data_in_len_get, _VXI11.Device_DocmdParms_data_in_data_in_len_set)
    data_in_val = _swig_property(_VXI11.Device_DocmdParms_data_in_data_in_val_get, _VXI11.Device_DocmdParms_data_in_data_in_val_set)
    def __init__(self): 
        _VXI11.Device_DocmdParms_data_in_swiginit(self,_VXI11.new_Device_DocmdParms_data_in())
    __swig_destroy__ = _VXI11.delete_Device_DocmdParms_data_in
Device_DocmdParms_data_in_swigregister = _VXI11.Device_DocmdParms_data_in_swigregister
Device_DocmdParms_data_in_swigregister(Device_DocmdParms_data_in)


def xdr_Device_DocmdParms(*args):
  return _VXI11.xdr_Device_DocmdParms(*args)
xdr_Device_DocmdParms = _VXI11.xdr_Device_DocmdParms
class Device_DocmdResp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    error = _swig_property(_VXI11.Device_DocmdResp_error_get, _VXI11.Device_DocmdResp_error_set)
    data_out = _swig_property(_VXI11.Device_DocmdResp_data_out_get)
    def __init__(self): 
        _VXI11.Device_DocmdResp_swiginit(self,_VXI11.new_Device_DocmdResp())
    __swig_destroy__ = _VXI11.delete_Device_DocmdResp
Device_DocmdResp_swigregister = _VXI11.Device_DocmdResp_swigregister
Device_DocmdResp_swigregister(Device_DocmdResp)

class Device_DocmdResp_data_out(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data_out_len = _swig_property(_VXI11.Device_DocmdResp_data_out_data_out_len_get, _VXI11.Device_DocmdResp_data_out_data_out_len_set)
    data_out_val = _swig_property(_VXI11.Device_DocmdResp_data_out_data_out_val_get, _VXI11.Device_DocmdResp_data_out_data_out_val_set)
    def __init__(self): 
        _VXI11.Device_DocmdResp_data_out_swiginit(self,_VXI11.new_Device_DocmdResp_data_out())
    __swig_destroy__ = _VXI11.delete_Device_DocmdResp_data_out
Device_DocmdResp_data_out_swigregister = _VXI11.Device_DocmdResp_data_out_swigregister
Device_DocmdResp_data_out_swigregister(Device_DocmdResp_data_out)


def xdr_Device_DocmdResp(*args):
  return _VXI11.xdr_Device_DocmdResp(*args)
xdr_Device_DocmdResp = _VXI11.xdr_Device_DocmdResp

def release_Device_DocmdResp(*args):
  return _VXI11.release_Device_DocmdResp(*args)
release_Device_DocmdResp = _VXI11.release_Device_DocmdResp
_device_abort = _VXI11._device_abort

def device_abort_1(*args):
  return _VXI11.device_abort_1(*args)
device_abort_1 = _VXI11.device_abort_1
_create_link = _VXI11._create_link

def create_link_1(*args):
  return _VXI11.create_link_1(*args)
create_link_1 = _VXI11.create_link_1
_device_write = _VXI11._device_write

def device_write_1(*args):
  return _VXI11.device_write_1(*args)
device_write_1 = _VXI11.device_write_1
_device_read = _VXI11._device_read

def device_read_1(*args):
  return _VXI11.device_read_1(*args)
device_read_1 = _VXI11.device_read_1
_device_readstb = _VXI11._device_readstb

def device_readstb_1(*args):
  return _VXI11.device_readstb_1(*args)
device_readstb_1 = _VXI11.device_readstb_1
_device_trigger = _VXI11._device_trigger

def device_trigger_1(*args):
  return _VXI11.device_trigger_1(*args)
device_trigger_1 = _VXI11.device_trigger_1
_device_clear = _VXI11._device_clear

def device_clear_1(*args):
  return _VXI11.device_clear_1(*args)
device_clear_1 = _VXI11.device_clear_1
_device_remote = _VXI11._device_remote

def device_remote_1(*args):
  return _VXI11.device_remote_1(*args)
device_remote_1 = _VXI11.device_remote_1
_device_local = _VXI11._device_local

def device_local_1(*args):
  return _VXI11.device_local_1(*args)
device_local_1 = _VXI11.device_local_1
_device_lock = _VXI11._device_lock

def device_lock_1(*args):
  return _VXI11.device_lock_1(*args)
device_lock_1 = _VXI11.device_lock_1
_device_unlock = _VXI11._device_unlock

def device_unlock_1(*args):
  return _VXI11.device_unlock_1(*args)
device_unlock_1 = _VXI11.device_unlock_1
_device_enable_srq = _VXI11._device_enable_srq

def device_enable_srq_1(*args):
  return _VXI11.device_enable_srq_1(*args)
device_enable_srq_1 = _VXI11.device_enable_srq_1
_device_docmd = _VXI11._device_docmd

def device_docmd_1(*args):
  return _VXI11.device_docmd_1(*args)
device_docmd_1 = _VXI11.device_docmd_1
_destroy_link = _VXI11._destroy_link

def destroy_link_1(*args):
  return _VXI11.destroy_link_1(*args)
destroy_link_1 = _VXI11.destroy_link_1
_create_intr_chan = _VXI11._create_intr_chan

def create_intr_chan_1(*args):
  return _VXI11.create_intr_chan_1(*args)
create_intr_chan_1 = _VXI11.create_intr_chan_1
_destroy_intr_chan = _VXI11._destroy_intr_chan

def destroy_intr_chan_1(*args):
  return _VXI11.destroy_intr_chan_1(*args)
destroy_intr_chan_1 = _VXI11.destroy_intr_chan_1
class Device_SrqParms(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    handle = _swig_property(_VXI11.Device_SrqParms_handle_get)
    def __init__(self): 
        _VXI11.Device_SrqParms_swiginit(self,_VXI11.new_Device_SrqParms())
    __swig_destroy__ = _VXI11.delete_Device_SrqParms
Device_SrqParms_swigregister = _VXI11.Device_SrqParms_swigregister
Device_SrqParms_swigregister(Device_SrqParms)

class Device_SrqParms_handle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    handle_len = _swig_property(_VXI11.Device_SrqParms_handle_handle_len_get, _VXI11.Device_SrqParms_handle_handle_len_set)
    handle_val = _swig_property(_VXI11.Device_SrqParms_handle_handle_val_get, _VXI11.Device_SrqParms_handle_handle_val_set)
    def __init__(self): 
        _VXI11.Device_SrqParms_handle_swiginit(self,_VXI11.new_Device_SrqParms_handle())
    __swig_destroy__ = _VXI11.delete_Device_SrqParms_handle
Device_SrqParms_handle_swigregister = _VXI11.Device_SrqParms_handle_swigregister
Device_SrqParms_handle_swigregister(Device_SrqParms_handle)


def xdr_Device_SrqParms(*args):
  return _VXI11.xdr_Device_SrqParms(*args)
xdr_Device_SrqParms = _VXI11.xdr_Device_SrqParms
device_intr_prog = _VXI11.device_intr_prog
device_intr_version = _VXI11.device_intr_version
device_intr_srq = _VXI11.device_intr_srq

def device_intr_srq_1(*args):
  return _VXI11.device_intr_srq_1(*args)
device_intr_srq_1 = _VXI11.device_intr_srq_1

def release_Device_ReadResp(*args):
  return _VXI11.release_Device_ReadResp(*args)
release_Device_ReadResp = _VXI11.release_Device_ReadResp

def release_Device_ReadStbResp(*args):
  return _VXI11.release_Device_ReadStbResp(*args)
release_Device_ReadStbResp = _VXI11.release_Device_ReadStbResp

def release_Device_WriteResp(*args):
  return _VXI11.release_Device_WriteResp(*args)
release_Device_WriteResp = _VXI11.release_Device_WriteResp


