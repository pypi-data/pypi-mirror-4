<metal:macro define-macro="body">
<metal:use-macro use-macro="here/edit_macros/macros/body">
   <metal:fill-slot
   fill-slot="extra_top"
        tal:define="wf_state context/@@plone_context_state/workflow_state;
        member context/@@plone_portal_state/member;">
      <tal:macro
            tal:define="macros here/additional_memberdata/macros | nothing;
                        top_macro macros/cooptation | nothing;
                        showTop python:top_macro;
                        came_from_join_form python:True"
            tal:condition="showTop">
        <div metal:use-macro="top_macro"/>
          </tal:macro>
   </metal:fill-slot>

   <metal:fill-slot fill-slot="buttons"
        tal:define="wf_state context/@@plone_context_state/workflow_state;
                    member context/@@plone_portal_state/member;">
      <div class="field"
           i18n:domain="plone"
           tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context) and request.get('action', 'unknown')!='reject'"
           tal:define="error errors/password | nothing;
                       password request/password | nothing;"
           tal:attributes="class python:test(error, 'field error', 'field')">

        <label for="password"
               i18n:translate="label_password">Password</label>

        <span class="fieldRequired" title="Required"
              i18n:attributes="title title_required;"
              i18n:translate="label_required">(Required)</span>

              <div class="formHelp" i18n:translate="help_password_creation">
                Minimum 5 characters.
              </div>

              <div tal:content="error">Validation error output</div>

              <input type="password"
                     name="password"
                     id="password"
                     size="10"
                     value=""
                     />
      </div>

      <div class="field"
           i18n:domain="plone"
           tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context) and request.get('action', 'unknown')!='reject'"
           tal:define="error errors/password_confirm | nothing;
                       password_confirm request/password_confirm | nothing;"
           tal:attributes="class python:test(error, 'field error', 'field')">


        <label for="password_confirm"
               i18n:translate="label_confirm_password">Confirm password</label>

        <span class="fieldRequired" title="Required"
              i18n:attributes="title title_required;"
              i18n:translate="label_required">(Required)</span>

              <div class="formHelp" i18n:translate="help_confirm_password">
                Re-enter the password. Make sure the passwords are identical.
              </div>

              <div tal:content="error">Validation error output</div>

              <input type="password"
                     name="password_confirm"
                     id="password_confirm"
                     size="10"
                     value=""
                     />
      </div>

      <div class="field"
           i18n:domain="plone"
           tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context)">
        <label for="comment" 
               i18n:translate="label_comments">Comments</label>

        <div class="formHelp"
             i18n:translate="help_publishing_comments">
          Will be added to the publishing history. If multiple
          items are selected, this comment will be attached to all
          of them.
        </div>
        <textarea id="comment"
                  name="comment"
                  cols="60"
                  rows="5"
                  tal:content="request/comment|nothing"
                  ></textarea>
      </div>
      
      <div tal:replace="structure provider:plone.abovecontentbody"/>

                <input class="context"
                       type="submit"
                       name="form_submit"
                       value="Submit"
                       tal:condition="python:wf_state == 'private' and member.has_permission('Request review', context)"
                       i18n:domain="plone"
                       i18n:attributes="value;"
                       tal:attributes="disabled python:test(isLocked, 'disabled', None);"
                       />
                <input class="context"
                       type="submit"
                       name="form.button.accept"
                       value="Accept"
                       tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context)"
                       i18n:domain="plone"
                       i18n:attributes="value;"
                       tal:attributes="disabled python:test(isLocked, 'disabled', None);"
                       tal:omit-tag="python:request.get('action', 'unknown')=='reject'"
                       />
                <input class="context"
                       type="submit"
                       name="form.button.reject"
                       value="Reject"
                       tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context)"
                       i18n:domain="plone"
                       i18n:attributes="value;"
                       tal:attributes="disabled python:test(isLocked, 'disabled', None);"
                       tal:omit-tag="python:request.get('action', 'unknown')=='accept'"
                       />
                <input class="standalone"
                       type="submit"
                       name="form.button.cancel"
                       value="Cancel"
                       i18n:domain="plone"
                       i18n:attributes="value label_cancel;"
                       />
              <input tal:condition="python:wf_state == 'pending' and member.has_permission('Review portal content', context)"
                     tal:replace="structure context/@@authenticator/authenticator" />
   </metal:fill-slot>
 </metal:use-macro>
</metal:macro>
