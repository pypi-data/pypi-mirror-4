ccopy_reg
_reconstructor
p0
(cCooprAgeCore
CooprAgeProblem
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'outputDocuments'
p6
(lp7
g0
(cCooprAgeCore
CooprAgeDocument
p8
g2
Ntp9
Rp10
(dp11
S'text'
p12
csip
_unpickle_type
p13
(S'PyQt4.QtCore'
p14
S'QString'
p15
(V\u000a# ==========================================================\u000a# = Solver Results                                         =\u000a# ==========================================================\u000a\u000a# ----------------------------------------------------------\u000a#   Problem Information\u000a# ----------------------------------------------------------\u000aProblem: \u000a- Lower bound: 14.8557377\u000a  Upper bound: inf\u000a  Number of objectives: 1\u000a  Number of constraints: 9\u000a  Number of variables: 10\u000a  Number of nonzeros: 68\u000a  Sense: minimize\u000a\u000a# ----------------------------------------------------------\u000a#   Solver Information\u000a# ----------------------------------------------------------\u000aSolver: \u000a- Status: ok\u000a  Termination condition: unknown\u000a  Error rc: 0\u000a\u000a# ----------------------------------------------------------\u000a#   Solution Information\u000a# ----------------------------------------------------------\u000aSolution: \u000a- number of solutions: 1\u000a  number of solutions displayed: 1\u000a- Gap: 0.0\u000a  Status: optimal\u000a  Objective: \u000a    f: \u000a      Id: 0\u000a      Value: 14.8557377\u000a  Variable: \u000a    Buy[Fries,_small]: \u000a      Id: 1\u000a      Value: 6.14754\u000a    Buy[1_Q37__Lowfat_Milk]: \u000a      Id: 3\u000a      Value: 3.42213\u000a    Buy[Quarter_Pounder_w_Cheese]: \u000a      Id: 4\u000a      Value: 4.38525\u000a
p16
tp17
tp18
Rp19
sS'name'
p20
S'Run-1'
p21
sbasS'ownerApplication_'
p22
g0
(cCooprAgeCore
CooprAgeApplication
p23
g2
Ntp24
Rp25
(dp26
S'problems'
p27
(lp28
g4
asbsS'name'
p29
g13
(g14
S'QString'
p30
(Vdiet1.cpf
p31
tp32
tp33
Rp34
sS'inputDocumentStates'
p35
(lp36
S'model'
p37
aS'data'
p38
aS'inactive'
p39
aS'inactive'
p40
ag40
asS'inputDocuments'
p41
(lp42
g0
(g8
g2
Ntp43
Rp44
(dp45
S'text'
p46
g13
(g14
S'QString'
p47
(V#\u000a# Imports\u000a#\u000a\u000aimport sys\u000aimport os\u000afrom os.path import abspath, dirname\u000asys.path.insert(0, dirname(dirname(dirname(dirname(abspath(__file__))))))\u000afrom coopr.pyomo import *\u000a\u000ainfinity = float('inf')\u000a\u000a#\u000a# Model\u000a#\u000a\u000amodel = Model()\u000a\u000amodel.NUTR = Set()\u000amodel.FOOD = Set()\u000a\u000amodel.cost = Param(model.FOOD, within=PositiveReals)\u000a\u000amodel.f_min = Param(model.FOOD, within=NonNegativeReals, default=0.0)\u000a\u000adef f_max_validate (value, j, model):\u000a    return model.f_max[j] > model.f_min[j]\u000amodel.f_max = Param(model.FOOD, validate=f_max_validate,\u000a			default=infinity)\u000a\u000amodel.n_min = Param(model.NUTR, within=NonNegativeReals, default=0.0)\u000a\u000adef n_max_validate (value, j, model):\u000a    return value > model.n_min[j]\u000amodel.n_max = Param(model.NUTR, validate=n_max_validate,\u000a			default=infinity)\u000a\u000amodel.amt = Param(model.NUTR, model.FOOD, within=NonNegativeReals)\u000a\u000a# --------------------------------------------------------\u000a\u000adef Buy_bounds(i,model):\u000a    return (model.f_min[i],model.f_max[i])\u000amodel.Buy = Var(model.FOOD, bounds=Buy_bounds)\u000a\u000a# --------------------------------------------------------\u000a\u000adef Total_Cost_rule(model):\u000a    ans = 0\u000a    for j in model.FOOD:\u000a        ans = ans + model.cost[j] * model.Buy[j]\u000a    return ans\u000amodel.Total_Cost = Objective(rule=Total_Cost_rule)\u000a\u000adef Nutr_Amt_rule(i, model):\u000a    ans = 0\u000a    for j in model.FOOD:\u000a      ans = ans + model.amt[i,j] * model.Buy[j]\u000a    return ans\u000a#model.Nutr_Amt = Objective(model.NUTR, rule=Nutr_Amt_rule)\u000a\u000a# --------------------------------------------------------\u000a\u000adef Diet_rule(i, model):\u000a    expr = 0\u000a    for j in model.FOOD:\u000a      expr = expr + model.amt[i,j] * model.Buy[j]\u000a    return (model.n_min[i], expr, model.n_max[i])\u000amodel.Diet = Constraint(model.NUTR, rule=Diet_rule)\u000a
p48
tp49
tp50
Rp51
sg29
S'model'
p52
sbag0
(g8
g2
Ntp53
Rp54
(dp55
g46
g13
(g14
S'QString'
p56
(V\u000aparam:  FOOD:                    cost  f_min  f_max :=\u000a  "Quarter Pounder w Cheese"    1.84     .      .\u000a  "McLean Deluxe w Cheese"      2.19     .      .\u000a  "Big Mac"                      1.84     .      .\u000a  "Filet-O-Fish"                 1.44     .      .\u000a  "McGrilled Chicken"            2.29     .      .\u000a  "Fries, small"                  .77     .      .\u000a  "Sausage McMuffin"             1.29     .      .\u000a  "1% Lowfat Milk"                .60     .      .\u000a  "Orange Juice"                  .72     .      . ;\u000a\u000aparam:  NUTR:   n_min  n_max :=\u000a        Cal      2000      .\u000a        Carbo     350    375 \u000a        Protein    55      .\u000a        VitA      100      .\u000a        VitC      100      .\u000a        Calc      100      .\u000a        Iron      100      . ;\u000a     \u000aparam amt (tr):\u000a                               Cal  Carbo Protein   VitA   VitC  Calc  Iron :=\u000a  "Quarter Pounder w Cheese"  510     34     28     15      6    30    20 \u000a  "McLean Deluxe w Cheese"    370     35     24     15     10    20    20 \u000a  "Big Mac"                    500     42     25      6      2    25    20 \u000a  "Filet-O-Fish"               370     38     14      2      0    15    10 \u000a  "McGrilled Chicken"          400     42     31      8     15    15     8 \u000a  "Fries, small"               220     26      3      0     15     0     2 \u000a  "Sausage McMuffin"           345     27     15      4      0    20    15 \u000a  "1% Lowfat Milk"             110     12      9     10      4    30     0 \u000a  "Orange Juice"                80     20      1      2    120     2     2 ;
p57
tp58
tp59
Rp60
sg29
S'data'
p61
sbag0
(g8
g2
Ntp62
Rp63
(dp64
g46
g13
(g14
S'QString'
p65
(VThis is the diet problem from the AMPL book.
p66
tp67
tp68
Rp69
sg29
S'notes'
p70
sbasS'run_options'
p71
(dp72
S'help'
p73
NsS'solver'
p74
NsS'__UserCmd__'
p75
NsS'quiet'
p76
NsS'summary'
p77
I01
sS'timelimit'
p78
NsS'solver-options'
p79
NsS'stream-output'
p80
NsS'log'
p81
NsS'logfile'
p82
NsS'warning'
p83
NsS'solver-mipgap'
p84
NsS'verbose'
p85
NssS'filename'
p86
g13
(g14
S'QString'
p87
(V/home/dword/Research/coopr_trunk_oct_26/src/coopr.age/coopr/age/examples/diet1.cpf
p88
tp89
tp90
Rp91
sb.